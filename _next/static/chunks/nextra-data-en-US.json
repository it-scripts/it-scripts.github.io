{"/before-you-start/how-to-enable-onesync":{"title":"it-scripts - How to enable OneSync","data":{"":"OneSync is a feature in FiveM that allows for larger server capacities and improved synchronization of entities and players.\nEnabling OneSync is a straightforward process that requires a simple edit to your server.cfg file.","steps-to-enable-onesync#Steps to Enable OneSync":"","open-your-servercfg-file#Open Your Server.cfg File":"Navigate to your server directory and locate the server.cfg file.\nOpen the server.cfg file using a text editor (e.g., Notepad, Visual Studio Code).","add-the-onesync-command#Add the OneSync Command":"Add the following line to your server.cfg file to enable OneSync:\nonesync on","optional-enable-onesync-infinity#Optional: Enable OneSync Infinity":"If your server needs support for more than 64 players (up to 1024), enable OneSync Infinity by adding this line:\nonesync_enableInfinity 1\nInfinity mode is designed for large-scale servers and requires proper resource optimization.","save-and-restart#Save and Restart":"Save the changes to your server.cfg file.\nRestart your server for the changes to take effect."}},"/before-you-start/how-to-install-heidisql":{"title":"it-scripts - How to install HeidiSQL","data":{"":"HeidiSQL is a powerful and user-friendly tool for managing databases.\nIt’s particularly useful for working with MariaDB, which is the database system used by many of our assets.\nHere’s a step-by-step guide to downloading and installing MariaDB and HeidiSQL.","download-and-install-mariadb#Download and Install MariaDB":"","donwload-mariadb#Donwload MariaDB":"Visit the official MariaDB website.\nSelect your operating system (Windows, macOS, Linux)\nDownload the latest stable version of MariaDB.","run-the-installer#Run the Installer":"Open the downloaded installer file and start the installation process.\nFollow the on-screen instructions to complete the installation.","configuration-during-installation#Configuration During Installation":"Select Components: Ensure \"MariaDB Server\" and \"Command Line Tools\" are selected for installation.\nUser Setup: Set a password for the root user (administrator). Save this password securely.\nConnection Port: The default port for MariaDB is 3306. Keep this default unless another service is using the same port.","complete-the-installation#Complete the Installation":"Follow the remaining prompts to finish the installation.\nMariaDB will be installed as a service, which means it will run in the background automatically.","download-and-install-heidisql#Download and Install HeidiSQL":"","download-heidisql#Download HeidiSQL":"Visit the official HeidiSQL website.\nClick on the \"Download\" button to get the latest version of HeidiSQL.","run-the-installer-1#Run the Installer":"Open the downloaded installer file and start the installation process.\nFollow the on-screen instructions to complete the installation.","set-up-a-connection-in-heidisql#Set Up a Connection in HeidiSQL":"Open HeidiSQL after installation.\nClick \"New\" to create a new connection.\nFill in the fields as follows:\nNetwork Type: MySQL (TCP/IP).\nHostname/IP: localhost (or your server's IP).\nUser: root.\nPassword: Use the password you set during the MariaDB installation.\nPort: 3306 (or the port you configured for MariaDB).\nClick \"Save\" and then \"Open\" to connect.","visual-guide-with-video#Visual Guide With Video":"If you haven't done it yet, here is a short installation guide for MariaDB and HeidiSQL."}},"/common-errors":{"title":"Common Errors","data":{}},"/configure-your-script/how-to-anaging-translations":{"title":"it-scripts - How to anaging translations","data":{"translation-system#Translation System":"All it-scripts assets are designed with multilingual support to help you adapt them to your preferred language.\nTranslations are stored in a folder called local, making it easy to manage and customize the language of your assets.","where-to-find-translations#Where To Find Translations":"The translations are located in the local folder of your it-scripts assets.\nIn some cases, translation strings might be stored in other configurable files. Be sure to check these files when translating your asset.","pre-built-translations#Pre-Built Translations":"Every it-scripts asset comes with pre-built translations for German and English, allowing you to get started quickly.If you want translations in other languages, you have two options:","translate-it-yourself#Translate it yourself":"You can modify the translation files directly to suit your language.","join-our-discord-community#Join our Discord community":"Gain access to a variety of translation files shared by other customers, covering multiple languages."}},"/configure-your-script/how-to-change-keybinds":{"title":"it-scripts - How to change key bindings","data":{"register-key-mapping#Register Key Mapping":"The new keybinds will apply only to new players or those who reset their keybinds manually.\nTo properly organize your keybinds and optimize your resource, we’ve adopted the FiveM native RegisterKeyMapping.\nThis eliminates the need for constant checks (while loops) for key presses, significantly improving performance.\nThis native works by triggering the associated chat command whenever the keybind is pressed.","optimized-performance#Optimized performance":"Reduces resource usage by removing frame-by-frame checks.","client-customization#Client customization":"Players can now change their own keybinds directly in-game.","how-to-change-keys-in-game#How to Change Keys In-Game":"","open-the-settings-menu#Open the Settings Menu":"Navigate to the settings menu in GTAV.","go-to-key-bindings#Go to Key Bindings":"Under settings, find and select key bindings section.","select-fivem-key-bindings#Select FiveM Key Bindings":"Scroll to the FiveM section where all FiveM-related keybinds are listed.","adjust-key-bindings#Adjust Key Bindings":"Select the desired keybind you want to change and press the new key you wish to assign.","how-to-reset-keybinds#How to Reset Keybinds":"If you need to reset your keybinds, there are two options:","using-console#Using Console":"Open the F8 console and type this, example: unbind keyboard f10.\nunbind keyboard [key]","editing-configuration-file#Editing Configuration File":"Press WINDOWS + R to open the Run dialog.\nType %appdata%\\CitizenFX and press Enter.\nOpen the fivem.cfg file in a text editor.\nRemove the lines related to the keybind you want to reset.\nSave the file and restart FiveM."}},"/configure-your-script/how-to-change-notifications":{"title":"it-scripts - How to change notifications","data":{"change-notifications#Change Notifications":"Configuring notifications in it-scripts assets is simple and straightforward.\nNotifications are used to display information, successes, and errors in-game.\nAll it-scripts assets share the same notification system, ensuring consistency across different scripts.","delete-notifications#Delete notifications":"Delete the current notification logic inside the ShowNotification function.","add-your-own-notification-logic#Add your own notification logic":"Manually add your desired notification export or method.","always-test-with-backups#Always test with backups":"Always test your changes with backups to ensure everything works as expected.","editing-notifications#Editing Notifications":"All configurable notifications are located in shared/functions.lua in this file, you’ll find the ShowNotification function, which controls how notifications are displayed.If you want to customize the notification system or integrate a new one, you can do so by editing the ShowNotification function. Below is an example of how to modify it for a new system:\nfunction ShowNotification(source, message, type)\n    -- Bridge.Functions.Notify(message, type) are the default Framework notifications\n    -- You can change this to your own notification systems\n    if source ~= nil then -- Server Messages\n        if type == 'Error' then\n            exports.it_bridge:SendNotification(source, 'it-drugs', message, 5000, \"Error\", true)\n        elseif type == 'Success' then\n            exports.it_bridge:SendNotification(source, 'it-drugs', message, 5000, \"Success\", true)\n        else\n            exports.it_bridge:SendNotification(source, 'it-drugs', message, 5000, \"Info\", false)\n        end\n    else -- Client Messages\n        if type == 'Error' then\n            exports.it_bridge:SendNotification('it-drugs', message, 5000, \"Error\", true)\n        elseif type == 'Success' then\n            exports.it_bridge:SendNotification('it-drugs', message, 5000, \"Success\", true)\n        else\n            exports.it_bridge:SendNotification('it-drugs', message, 5000, \"Info\", false)\n        end\n    end\nend\nThis example uses the it_bridge notification system, but you can replace it with any other notification system you prefer."}},"/configure-your-script/how-to-enable-target-system":{"title":"it-scripts - How to enable target system","data":{"target-system#Target System":"All it-scripts assets use the same target system for consistency and ease of use.\nTo prevent errors, we have standardized the configuration and provided clear options for supported systems.","supported-target-systems#Supported Target Systems":"We are compatible with the following target systems:","ox_target#ox_target":"The most stable and reliable target system currently available.","qb-target#qb-target":"Another widely used and supported system.\nPlease always keep your targets updated to the latest available version.","how-to-enable-the-target-system#How To Enable The Target System":"All it-scripts assets come with built-in support for target systems, allowing for seamless interaction with entities, objects, and more within your server.\nThis configuration provides flexibility by supporting the two most popular target systems in FiveM: ox_target and qb-target.","find-the-it_bridge-asset#Find the it_bridge asset":"Locate the it_bridge asset in your server's resources folder.\nThis asset serves as a bridge for all it-scripts and is essential for enabling the target system.","locate-the-configlua-file#Locate the config.lua file":"Inside the it_bridge asset, find the config.lua file.\nThis file contains the configuration settings for the target system.","enable-the-target-system#Enable the Target System":"Look for the following configuration line in config.lua:\n--[[\nSupported interactions:\n    * AUTO_DETECT: auto-detect interactions [Only detecting supported interactions below]\n    * Interactions.OX: ox_target,\n    * Interactions.QB: qb-target,\n    * Interactions.NONE, distance interaction - press [E]\n]]\nConfig.Interactions = AUTO_DETECT\nBy default, the target system is set to AUTO_DETECT, which automatically detects the available target system on your server.\nIf you want to use ox_target, set the value to Interactions.OX.\nIf you want to use qb-target, set the value to Interactions.QB.\nIf you want to use the distance interaction (press [E]), set the value to Interactions.NONE.","restart-the-server#Restart the server":"After making changes to the config.lua file, restart your server to apply the new target system settings."}},"/configure-your-script/how-to-execute-commands":{"title":"it-scripts - How to execute commands","data":{"":"The ExecuteCommand() function lets you run any FiveM command directly from a script.\nIt’s useful for automating tasks or triggering commands programmatically.","how-it-works#How It Works":"Simply call the function with the command you want to execute as a string:","run-a-chat-command#Run a Chat Command":"This sends \"Hello, world!\" to the chat.\nExecuteCommand(\"say Hello, world!\")","trigger-a-custom-command#Trigger a Custom Command":"This runs a custom /heal command for the player ID 1.\nExecuteCommand(\"heal 1\")","create-a-shortcut-command#Create a Shortcut Command":"This makes a /healMe command that heals the player who runs it.\nRegisterCommand(\"healMe\", function()\n    ExecuteCommand(\"heal \" .. GetPlayerServerId(PlayerId()))\nend, false)\nThat’s it! ExecuteCommand is a simple and powerful way to run commands directly from your scripts."}},"/configure-your-script/how-to-set-webhook-system":{"title":"it-scripts - How to set webhook system","data":{"webhook-system#Webhook System":"Webhooks are an essential feature for many it-scripts assets, enabling seamless communication between your server and Discord.\nThey are primarily used to send logs, updates, and other useful information to specific channels in your Discord server.","fivemanager-integration#Fivemanager Integration":"Comming Soon (Currently there is no script from us that uses Fivmanager)","discord-webhooks#Discord Webhooks":"Discord webhooks are ideal for logging information, such as:","player-logs#Player Logs":"Track player actions, such as joining or leaving the server.\nMonitor player interactions with specific assets or features.","custom-notifications#Custom Notifications":"Send custom messages or alerts to your Discord server.\nNotify users about important events or updates.","how-to-set-up-webhooks#How to set up webhooks":"","create-a-discord-webhook#Create a Discord Webhook":"","locate-the-webhook-configuration#Locate the Webhook Configuration":"To make ours scripts more secure the webhook system is located in a sperate file that is only loaded on the server.\nThe file is located in server/sv_webhooks.lua.\nThis file contains the configuration settings for the webhook system.","configure-the-webhook#Configure the Webhook":"Open the sv_webhooks.lua file in a text editor.\nFind the following configuration section:\nlocal webhookSettings = {\n    ['active'] = false, -- Set to true to enable the webhook\n    ['name'] = 'it_referral', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/mbM87BJ.png', -- Avatar for the webhook\n    ['url'] = 'YOUR_WEBHOOK_URL', -- Webhook URL\n}\nIf you want to activate the webhook system, set the active attribute to true.\nReplace YOUR_WEBHOOK_URL with the actual webhook URL you created in Discord.\nYou can also customize the name and avatar attributes to personalize the webhook.\nlocal webhookSettings = {\n    ['active'] = false, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = 'https://discord.com/api/webhooks/**************/*************************', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIf you want to activate the webhook system, set the active attribute to true.\nNow you can set multiple webhooks for different actions.\nReplace nil with the actual webhook URL you created in Discord. Example:\n['plant'] = 'https://discord.com/api/webhooks/**************/*************************', -- Webhook URL for plant actions\nYou can also customize the name and avatar attributes to personalize the webhook.","save-and-restart#Save and Restart":"Save the changes to the sv_webhooks.lua file.\nRestart the script or the server to apply the changes.\nThe webhook system is now active and will send logs to the specified Discord channel."}},"/how-support-works":{"title":"it-scripts - How support works","data":{}},"/":{"title":"it-scripts Documentation","data":{"":"Welcome to the it-scripts asset documentation!\nThis guide will provide you with all the necessary details to understand, configure, and maximize the use of our FiveM assets.\nBefore diving into the specifics, here’s a bit about who we are and our journey on the platform.\nThis page is currently in development. All it-scripts Script's Documentation will be displayed in here soon.","about-us#About us":"IT-Scripts is a dynamic project established in 2024 we were former known as Inseltreff (some small german FiveM Rp Server). But now were are dedicated to developing high-quality scripts and assets for the FiveM platform. Our offerings include a range of free and premium products, designed to enhance the gaming experience for FiveM users.Whether you're running a small server or a large community, it-Scripts provides the resources you need to create an engaging and immersive environment for your players.","support-us#Support us":"We enjoy being able to create and share free and open-source work, but they often require considerable time and effort to maintain and support.\nIf you frequently use one of  our free resources and love what we do, consider supporting us so we can continue our work.","important-links#Important Links":"🗂️ | GitHub\n📖 | Documentation\n🔗 | Discord Invite\n🛒 | Tebex Shop (Coming Soon)"}},"/it-crafting":{"title":"it-crafting","data":{"":"it-crafting is a lightweight crafting system for FiveM servers. Originally used as a part of the it-drugs script it has been separated into its own resource to allow for more customization and flexibility. The script comes with a fully configurable crafting system that allows players to craft items using raw materials. The script is easy to install and configure, making it a great addition to any FiveM server.","supported-frameworks#Supported Frameworks":"✅ | ESX\n✅ | QbCore\n✅ | QBox","suported-inventorys#Suported Inventorys":"✅ | esx_inventory\n✅ | qb_inventory\n✅ | ox_inventory\n✅ | qs_inventory\n✅ | mInventory\n✅ | Supported 🔧 | Pending ❌ | Not Supported","dependencys#Dependencys":"⚙️ | ox_lib\n⚙️ | oxmysql\n⚙️ | ox_target *\n⚙️ | qb-target * (The script currently does not work with qb-target)\nOptional","--fixed-possitions#📍 | Fixed Possitions":"Our script offers fixed crafting positions that allow players to craft items at specific locations.\nPlayers can interact with these positions to access the crafting menu and create new items.\nThe fixed positions make it easy for players to find the crafting locations and create items without any hassle. The positions can be configured in the config file, allowing server admins to customize the crafting experience to fit their unique needs.","--crafting-tables#🔨 | Crafting Tables":"Our script features crafting tables that allow players to transform raw materials into high-value items. Players can use these tables to craft items themselves, adding a layer of complexity to the crafting system. The Tables can be placed anywhere on the map, making it easy for players to craft their materials and create new items. Every table can be configured in the config file, allowing server admins to customize the experience to fit their unique needs.","--ingame-admin-menu#📊 | Ingame Admin Menu":"Our script features an ingame admin menu that allows server admins to manage drugs and tables. Admins can use the menu view and manage all drugs and tables on the server, making it easy to keep track of everything. The admin menu can be accessed by typing /crafting in the chat.","--fully-configurable#🔧 | Fully Configurable":"Our script is fully configurable, allowing server admins to customize every aspect to fit their unique needs. The config file contains a wide range of options that can be adjusted to change the crafting system's behavior. Server admins can configure the crafting tables, crafting positions, crafting recipes, and more, making it easy to create a unique experience for players.","documentation#Documentation":"","comming-soon#Comming soon":"Legal Notices\nit-crafting (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it-crafting/adjustments/crafting-points":{"title":"it-crafting - Crafting Points","data":{"":"So let's start setting up the crafting points. Crafting points are static points where the player can craft items.","configcraftingpoints#Config.CraftingPoints":"The individual processing points can now be configured here:\n['crafting_point_one'] = {\n        zone = vector3(2.0, 1.0, 2.0),\n        label = 'Crafting Point', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }\n['crafting_point_one']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\ntarget = {\n    size = vector3(3.5, 1.0, 1.0),\n    rotation = 0.0,\n    drawSprite = true,\n    interactDistance = 1.5,\n},\nAs soon as the player places the table, the script will create a zone around the table. The zone is used to interact with the table.\nHere you can change some settings for the target zone.\nsize * - The size of the target zone. The first value is the width, the second value is the length, and the third value is the height of the zone.\nrotation * - The rotation of the target zone. The value is in degrees. If you dont want to use this you can remove it.\ndrawSprite * - If set to true, a sprite will be displayed at the target zone. If set to false, no sprite will be displayed.\ninteractDistance * - The distance at which the player can interact with the table.\n* All these values are optional and can be removed if you dont want to use them. But please do not remove the target table.\nIf you are using a model the script will automatically set the size and rotation of the target zone.\nSo you dont need to set the size and rotation if you are using a model. You can just keep the default values.In some cases the rotation of the target zone is not correct. In this case you can set the rotation manually.\nmodel = 'v_res_tre_table2'\nThe model of the processing table here can theoretically be used with any Fivem model.\nYou also can set the model to nil if you dont want to use a model.\nThen the script will only create a zone at the position.\nrestricCrafting = {\n    ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n    ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n    ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n    ['jobs'] = {}\n},\nonlyOnePlayer - As the name suggests, only one player can use the table at a time.\nonlyOwnerCraft - Only the owner of the table can use the table.\nonlyOwnerRemove - Only the owner of the table can remove the table.\njobs - Jobs that can use the table.\nIf you want to allow all jobs to use the table, you can leave the table empty.\nIf you want to add a job, you can add the job name to the table like this: ['police'] = true. Now only the police can use the table.\nYou also hove the option to add a job with a specific grade like this: ['police'] = {1, 2}. Now only the police with the grade 1 and 2 can use the table.\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Point',\n},\nThe blip of the point can be set here.\nIf set to true, the blip will be displayed on the map to all players.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\n    ['simple_crafting_point'] = {\n        target = {\n            size = vector3(1.0, 1.0, 1.0),\n            rotation = 0.0,\n            drawSprite = true,\n            interactDistance = 1.5,\n        },\n        label = 'Weed Processing Table', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-crafting/adjustments/crafting-tables":{"title":"it-crafting - Crafting Tables","data":{"":"So let's start setting up the crafting tables.","configcraftingtables#Config.CraftingTables":"The individual processing tables can now be configured here:\n['simple_crafting_table'] = {\n        zone = vector3(2.0, 1.0, 2.0),\n        label = 'Weed Processing Table', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }\n['simple_crafting_table']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\ntarget = {\n    size = vector3(3.5, 1.0, 1.0),\n    rotation = 0.0,\n    drawSprite = true,\n    interactDistance = 1.5,\n},\nAs soon as the player places the table, the script will create a zone around the table. The zone is used to interact with the table.\nHere you can change some settings for the target zone.\nsize * - The size of the target zone. The first value is the width, the second value is the length, and the third value is the height of the zone.\nrotation * - The rotation of the target zone. The value is in degrees. If you dont want to use this you can remove it.\ndrawSprite * - If set to true, a sprite will be displayed at the target zone. If set to false, no sprite will be displayed.\ninteractDistance * - The distance at which the player can interact with the table.\n* All these values are optional and can be removed if you dont want to use them. But please do not remove the target table.\nIf you are using a model the script will automatically set the size and rotation of the target zone.\nSo you dont need to set the size and rotation if you are using a model. You can just keep the default values.In some cases the rotation of the target zone is not correct. In this case you can set the rotation manually.\nmodel = 'v_res_tre_table2'\nThe model of the processing table here can theoretically be used with any Fivem model.\nrestricCrafting = {\n    ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n    ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n    ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n    ['zones'] = {}, -- Zones where the table can be used\n    ['jobs'] = {}\n},\nonlyOnePlayer - As the name suggests, only one player can use the table at a time.\nonlyOwnerCraft - Only the owner of the table can use the table.\nonlyOwnerRemove - Only the owner of the table can remove the table.\nzones - Zones where the table can be used.\nThe zones can be defined in the Config.Zones table.\nIf you want to use the table everywhere, you can leave the table empty.\nIf you want to add a zone, you can add the zone name to the table like this: {'crafting_zone_one'}. Now the table can only be used in this zone.\njobs - Jobs that can use the table.\nIf you want to allow all jobs to use the table, you can leave the table empty.\nIf you want to add a job, you can add the job name to the table like this: ['police'] = true. Now only the police can use the table.\nYou also hove the option to add a job with a specific grade like this: ['police'] = {1, 2}. Now only the police with the grade 1 and 2 can use the table.\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Table',\n},\nThe blip fie zone can be set here.\nIf set to true, the blip will be displayed on the map as soon as the table is placed.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\nIf you use the ox_inventory, please use the following template to add the tables to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 1000,\n\t\tstack = false,\n\t\tclose = true,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.placeCraftingTable\",\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n    ['simple_crafting_table'] = {\n        label = 'Simple Crafting Table', -- Label for the table\n        target = {\n            size = vector3(1.0, 1.0, 1.0),\n            rotation = 0.0,\n            drawSprite = true,\n            interactDistance = 1.5,\n        },\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-crafting/adjustments/recipes":{"title":"it-crafting - Recipes","data":{"":"Now we can look at the configuration of the individual recipes. YOu can add as many recipes as you want.","configrecipes#Config.Recipes":"['lockpick'] = {\n    label = 'Lockpick',\n    ingrediants = {\n        ['scrapmetal'] = {amount = 3, remove = true},\n        ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n    },\n    outputs = {\n        ['lockpick'] = 2\n    },\n    processTime = 15,\n    failChance = 15,\n    showIngrediants = false,\n    animation = {\n        dict = 'anim@amb@drug_processors@coke@female_a@idles',\n        anim = 'idle_a',\n    },\n    skillCheck = {\n        enabled = true,\n        difficulty = {'easy', 'easy', 'medium', 'easy'},\n        keys = {'w', 'a', 's', 'd'}\n    }\n},\n['lockpick']\nThis is the must be a unique identifier for the recipe. The identifier must not contain any special characters or spaces.\nThe identifier is only relevant for the script.\nlabel = 'Lockpick'\nThe label of the recipe, this is used to display the name of the recipe in all menus. The can contain special characters and spaces.\ningrediants = {\n    ['scrapmetal'] = {amount = 3, remove = true},\n    ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n},\nThis is the list of all ingredients that are required to craft the item. The key is the item name and the value is a table with the amount and if the item should be removed after crafting.\namount The amount of the item that is required to craft the item.\nremove If the item should be removed after crafting.\noutputs = {\n    ['lockpick'] = 2\n},\nThis is the list of all items that are created after the crafting process. The key is the item name and the value is the amount of the item that is created.\nprocessTime = 15,\nThe time in seconds that is required to craft the item. If you dont use the skill check, the player has to wait this time to craft the item.\nfailChance = 15,\nThe chance in percent that the crafting process fails. If the crafting process fails, the player looses the items and has to start the crafting process again.\nshowIngrediants = false,\nIf this is set to true, the player can see the ingredients that are required to craft the item.\nanimation = {\n    dict = 'anim@amb@drug_processors@coke@female_a@idles',\n    anim = 'idle_a',\n},\nThe animation that is played while the player is crafting the item. The dict is the animation dictionary and the anim is the animation name.#\nskillCheck = {\n    enabled = true,\n    difficulty = {'easy', 'easy', 'medium', 'easy'},\n    keys = {'w', 'a', 's', 'd'}\n}\nIf enabled is set to true, the player has to pass a skill check to craft the item. The difficulty is the difficulty of the skill check and the keys are the keys that the player has to press to pass the skill check.\ndifficulty The difficulty of the skill check. The difficulty can be easy, medium or hard.\nkeys The keys that the player has to press to pass the skill check. The keys can be w, a, s or d.\nIf the skill check is deactivated, the player only has to wait a certain amount of time and then receives the item.More information about the skill check can be found here:\n    ['your_uniqe_id'] = {\n        label = 'Your Label',\n        ingrediants = {\n            -- Here you can add as many ingredients as you want\n        },\n        outputs = {\n            -- Here you can add as many outputs as you want\n        },\n        processTime = 15,\n        failChance = 15,\n        showIngrediants = true,\n        animation = {\n            dict = 'anim@amb@drug_processors@coke@female_a@idles',\n            anim = 'idle_a',\n        },\n        skillCheck = {\n            enabled = false,\n            difficulty = {'easy', 'easy', 'medium', 'easy'},\n            keys = {'w', 'a', 's', 'd'}\n        }\n    },"}},"/it-crafting/adjustments/zones":{"title":"it-crafting - Zones","data":{"":"First, let's take a look at zone management.\nHere, it is possible to create zones that can have an effect on the growth speed of certain plants.","configzones#Config.Zones":"The individual zones can be created and edited here.\nWe will now take a closer look at one zone and explain what the individual values mean and what they change.\nConfig.Zones = {\n    ['crafting_zone_one'] = { -- Zone id (Musst be unique)\n        points = {\n            vec3(2031.0, 4853.0, 43.0),\n            vec3(2007.0, 4877.0, 43.0),\n            vec3(1981.0, 4903.0, 43.0),\n            vec3(2006.0, 4929.0, 43.0),\n            vec3(2032.0, 4903.0, 43.0),\n            vec3(2057.0, 4878.0, 43.0),\n        },\n        thickness = 4.0,\n        \n        blip = {\n            display = true, -- Display blip on map\n            scale = 1.0, -- Blip scale\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Zone',\n        },\n    },\n}\n['crafting_zone_one']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script.\nThe zone id must not contain any special characters or spaces and must be unique.\npoints = {\n    vec3(2031.0, 4853.0, 43.0),\n    vec3(2007.0, 4877.0, 43.0),\n    vec3(1981.0, 4903.0, 43.0),\n    vec3(2006.0, 4929.0, 43.0),\n    vec3(2032.0, 4903.0, 43.0),\n    vec3(2057.0, 4878.0, 43.0),\n},\nthickness = 4.0,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone.\nA straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Zone',\n},\nThe blip fie zone can be set here.\nThe blip is always displayed in the middle of the zone.If you want to create the zones more easily please take a look at the following guide:\n  ['uniqe_zone_name'] = { -- Zone id (No Spaces)\n    coords = {\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        -- You can add as many vector3 as you want\n    },\n    thickness = 4.0,\n    \n    blip = {\n        display = true, -- Display blip on map\n        scale = 1.0, -- Blip scale\n        sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Crafting Zone',\n    },\n  },"}},"/it-crafting/common-errors":{"title":"it-drugs - Common Errors","data":{"":"Here you will find common errors and their solutions. If you have any further questions, please feel free to ask in the Discord.Seems like there are no errors yet. 🎉"}},"/it-crafting/config-preview":{"title":"it-crafting - Config Preview","data":{"":"Here you can find the full configuration of the it-crafting script."}},"/it-crafting/installation":{"title":"it-crafting - Installation","data":{"":"Welcome to the it-crafting installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.\nWhen installing the script make sure to not rename the script folder, this can cause errors in the script. The name of the script folder should always be it-crafting.","asset-download#Asset download":"You can download the latest version of the script for free on the it-script GitHub Account.\nIf you have downloaded the script from another site, there is no guarantee that the script will actually work. Please download it again from the it-scripts GitHub page.\nIf you have paid money for this script, it is a SCAM. The it-crafting script is and will always remain free. Please report the page to us on the Discord server.","asset-dependencies#Asset dependencies":"Dependencies\tLinks\tox_lib\thttps://github.com/overextended/ox_lib/releases\toxmysql\thttps://github.com/overextended/oxmysql\tTarget System\t\tESX (ox_target)\thttps://github.com/overextended/ox_target\tQbCore (qb-target)\thttps://github.com/qbcore-framework/qb-target (Currently not supported!)\t\nYou can also use ox_target on your QbCore Server but only if you are using ox_target with version 1.16.0 or older!","asset-positioning#Asset positioning":"Correctly position the assets by following this step, if something goes wrong you will probably get errors about exports not found, do not skip this step.\nFor the execution of this asset, we will respect the respective order mentioned below.\n-- First we will start the Database\nensure oxmysql\n-- Then we will start the cores, never below\nensure es_extended or qb-core\n-- Your inventory system, always on top\nensure inventory\n--Then we start all the dependencies\nensure ox_lib\nensure ox_target -- Only if you are using a target system\n-- Run it-crafting here along with its dependencies\nensure it-crafting","database#Database":"Our crafting script includes one database, befor the first start of the script you should check if the tables allready exists in your Database and delete them if they exists.\nIf you just update the script you dont have to do this.\n-- Check for the it_crafting_tables table\nDROP TABLE IF EXISTS `it_crafting_tables`;\nThe Script will automaticly install and update the database but if you want you still can intall the database manually with this commands:\n  -- Install the it_crafting_tables table\n  CREATE TABLE IF NOT EXISTS it_crafting_tables (\n  id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n  coords LONGTEXT NOT NULL,\n  rotation DOUBLE NOT NULL,\n  owner LONGTEXT NOT NULL,\n  type VARCHAR(100) NOT NULL\n  );","items-for-it-crafting#Items for it-crafting":"This guid is only for the scripts default items, but you can add new items after the same shemata.\nIf you use qbcore + ox_inventory, you must add the items inside ox_inventory for the items using to work.\nHere you will find a series of selected items in different extensions for different inventories, select the option that suits your server, remember to check if your inventory works with this script!\nAlso for this script you can use all items on your server to craft items with the crafting table.\nYou can configure everything int the it-crafting config file.\n    INSERT INTO `items` (`name`, `label`, `weight`, `rare`, `can_remove`) VALUES\n  ('scrapmetal', 'Scrap Metal', 500, 0, 1),\n  ('lockpick', 'Lockpick', 100, 0, 1),\n  ('cloth', 'Cloth', 200, 0, 1),\n  ('scissors', 'Scissors', 250, 0, 1),\n  ('bandage', 'Bandage', 50, 0, 1),\n  ('simple_crafting_table', 'Simple Crafting Table', 2000, 0, 1)\n  ;\n  scrapmetal = {\n    name = \"scrapmetal\",\n    label = 'Scrap Metal',\n    weight = 500,          \n    type = 'item',\n    image = \"scrapmetal.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'Scrap Metal'\n  },\n  lockpick = {\n    name = \"lockpick\",\n    label = 'Lockpick',\n    weight = 100,\n    type = 'item',\n    image = \"lockpick.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A tool for picking locks'\n  },\n  cloth = {\n    name = \"cloth\",\n    label = 'Cloth',\n    weight = 200,\n    type = 'item',\n    image = \"cloth.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A piece of cloth'\n  },\n  scissors = {\n    name = \"scissors\",\n    label = 'Scissors',\n    weight = 250,\n    type = 'item',\n    image = \"scissors.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A tool for cutting'\n  },\n  bandage = {\n    name = \"bandage\",\n    label = 'Bandage',\n    weight = 50,\n    type = 'item',\n    image = \"bandage.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A bandage for wounds'\n  },\n  simple_crafting_table = {\n    name = \"simple_crafting_table\",\n    label = 'Simple Crafting Table',\n    weight = 2000,\n    type = 'item',\n    image = \"simple_crafting_table.png\",\n    unique = true,\n    useable = false,\n    shouldClose = true,\n    combinable = nil,\n    description = 'A simple crafting table'\n  }\n  [\"scrapmetal\"] = {\n  label = \"Scrap Metal\",\n  weight = 500,\n  stack = true,\n  close = false,\n  description = \"Scrap Metal\",\n  client = {\n    image = \"scrapmetal.png\",\n  }\n},\n[\"lockpick\"] = {\n  label = \"Lockpick\",\n  weight = 100,\n  stack = true,\n  close = false,\n  description = \"A tool for picking locks\",\n  client = {\n    image = \"lockpick.png\",\n  }\n},\n[\"cloth\"] = {\n  label = \"Cloth\",\n  weight = 200,\n  stack = true,\n  close = false,\n  description = \"A piece of cloth\",\n  client = {\n    image = \"cloth.png\",\n  }\n},\n[\"scissors\"] = {\n  label = \"Scissors\",\n  weight = 250,\n  stack = true,\n  close = false,\n  description = \"A tool for cutting\",\n  client = {\n    image = \"scissors.png\",\n  }\n},\n[\"bandage\"] = {\n  label = \"Bandage\",\n  weight = 50,\n  stack = true,\n  close = false,\n  description = \"A bandage for wounds\",\n  client = {\n    image = \"bandage.png\",\n  }\n},\n[\"simple_crafting_table\"] = {\n  label = \"Simple Crafting Table\",\n  weight = 2000,\n  stack = false,\n  close = false,\n  description = \"A simple crafting table\",\n  client = {\n    image = \"simple_crafting_table.png\",\n  },\n  server = {\n    export = \"it-crafting.placeCraftingTable\"\n  }\n}\n[\"scrapmetal\"] = {\n  name = \"scrapmetal\",\n  label = \"Scrap Metal\",\n  type = \"item\",\n  weight = 500,\n  unique = false,\n  shouldClose = false,\n  description = \"Scrap Metal\",\n  image = \"scrapmetal.png\",\n},\n[\"lockpick\"] = {\n    name = \"lockpick\",\n    label = \"Lockpick\",\n    type = \"item\",\n    weight = 100,\n    unique = false,\n    shouldClose = false,\n    description = \"A tool for picking locks\",\n    image = \"lockpick.png\",\n},\n[\"cloth\"] = {\n    name = \"cloth\",\n    label = \"Cloth\",\n    type = \"item\",\n    weight = 200,\n    unique = false,\n    shouldClose = false,\n    description = \"A piece of cloth\",\n    image = \"cloth.png\",\n},\n[\"scissors\"] = {\n    name = \"scissors\",\n    label = \"Scissors\",\n    type = \"item\",\n    weight = 250,\n    unique = false,\n    shouldClose = false,\n    description = \"A tool for cutting\",\n    image = \"scissors.png\",\n},\n[\"bandage\"] = {\n    name = \"bandage\",\n    label = \"Bandage\",\n    type = \"item\",\n    weight = 50,\n    unique = false,\n    shouldClose = false,\n    description = \"A bandage for wounds\",\n    image = \"bandage.png\",\n},\n[\"simple_crafting_table\"] = {\n    name = \"simple_crafting_table\",\n    label = \"Simple Crafting Table\",\n    type = \"item\",\n    weight = 2000,\n    unique = true,\n    shouldClose = true,\n    description = \"A simple crafting table\",\n    image = \"simple_crafting_table.png\",\n}\nscrapmetal                  = { name = 'scrapmetal', label = 'Scrap Metal', weight = 500, type = 'item', image = 'scrapmetal.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Scrap Metal' },\nlockpick                    = { name = 'lockpick', label = 'Lockpick', weight = 100, type = 'item', image = 'lockpick.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A tool for picking locks' },\ncloth                       = { name = 'cloth', label = 'Cloth', weight = 200, type = 'item', image = 'cloth.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A piece of cloth' },\nscissors                    = { name = 'scissors', label = 'Scissors', weight = 250, type = 'item', image = 'scissors.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A tool for cutting' },\nbandage                     = { name = 'bandage', label = 'Bandage', weight = 50, type = 'item', image = 'bandage.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A bandage for wounds' },\nsimple_crafting_table       = { name = 'simple_crafting_table', label = 'Simple Crafting Table', weight = 2000, type = 'item', image = 'simple_crafting_table.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A simple crafting table' }","use-webhooks#Use Webhooks":"You want to log the different actions of the script on your discord server? Then take a look at this.","basic-asset-configuration#Basic asset configuration":"We do not recommend editing frameworks unnecessarily, since almost all assets depend exclusively on your framework and exports on the name of your framework.\nOtherwise and if you edited your framework, read these steps carefully.\nPlease expand each part to see information about the configuration of the asset, this way you will understand the general operation of the asset on the framework and editable files side.\nThe asset will work automatically if your framework is called es_extended or qb-core, it will automatically detect if any of them are started.\nIf your framework is completely modified, both in events and name, you should access the bridge folder to adapt the native events of your framework to the codes you have created.\nIf this step doesn't work, we ask that you ask your framework modifier or trusted developer for help.\nFell free to edit the complete. If you made some changes and think others can use them, feel free to open a pull request on GitHub, and we maybe adapt your changes to the script."}},"/it-crafting/tipps-and-tricks/additional-recipe-settings":{"title":"it-drugs - Recipe Settings","data":{"add-custom-animation#Add custom animation":"If you do not want to use the normal animation for a recipe in a recipe, you can also easily change this via the Config","get-your-animation#Get your animation":"A good resource to find animation is:","add-the-animation-to-the-config#Add the animation to the Config":"Add the following code to the recipe you want to change the animation for:\nanimation = {\n    dict = 'you animation dict', -- Animation dict\n    anim = 'your animation name', -- Animation name\n}\nExample:\nanimation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@', -- Animation dict\n    anim = 'player_search', -- Animation name\n}\n['lockpick'] = {\n    label = 'Lockpick',\n    ingrediants = {\n        ['scrapmetal'] = {amount = 3, remove = true},\n        ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n    },\n    outputs = {\n        ['lockpick'] = 2\n    },\n    processTime = 15,\n    failChance = 15,\n    showIngrediants = false,\n    animation = {\n        dict = 'anim@amb@drug_processors@coke@female_a@idles',\n        anim = 'idle_a',\n    },\n    skillCheck = {\n        enabled = true,\n        difficulty = {'easy', 'easy', 'medium', 'easy'},\n        keys = {'w', 'a', 's', 'd'}\n    }\n},","add-particles#Add particles":"This feature is not fully implemented and tested yet and may not work as expected.\nThis features allows you to add particles to your recipes. This can be used to make the recipe more interactive.","get-your-particle#Get your particle":"A good resource to find particles is:","add-the-particle-to-the-config#Add the particle to the Config":"Add the following code to the recipe you want to add the particle to:\n    particlefx = {\n        dict = 'your dict name',\n        particle = 'your particle name',\n        color = {r = 255, g = 255, b = 255},\n        offset = {x = 0.0, y = 0, z = 0},\n        scale = 0.5,\n    },\ncolor = {r = 255, g = 255, b = 255},\nThe color of the particle, each value can be between 0 and 255 and represents the RGB color space.\noffset = {x = 0.0, y = 0, z = 0},\nThe offset of the particle, this can be used to move the particle to a different position.\nDue to the fact that some particles are not centered, it is recommended to play around with the values.\nIf you are using the default table props provided by the script, you can use the following values:\noffset = {x = 0.0, y = -1.5, z = 1.0},\nscale = 0.5,\nThe scale of the particle, this can be used to make the particle bigger or smaller.\n['lockpick'] = {\n        label = 'Lockpick',\n        ingrediants = {\n            ['scrapmetal'] = {amount = 3, remove = true},\n            ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n        },\n        outputs = {\n            ['lockpick'] = 2\n        },\n        processTime = 15,\n        failChance = 15,\n        showIngrediants = false,\n        particlefx = {\n            dict = 'core',\n            particle = 'ent_amb_torch_fire',\n            color = {r = 255, g = 255, b = 255},\n            offset = {x = 0.0, y = -1.5, z = 1.0},\n            scale = 0.5,\n        },\n        skillCheck = {\n            enabled = true,\n            difficulty = {'easy', 'easy', 'medium', 'easy'},\n            keys = {'w', 'a', 's', 'd'}\n        }\n    },"}},"/it-crafting/tipps-and-tricks/easy-zone-creation":{"title":"it-crafting - Easy Zone Creation","data":{"":"To create a new zone you now can use the /zone poly command from ox_lib.\nMake sure you use /zone poly if not you will get the zone in a wrong format at the end and cannot add it to the config.\nAfter you have used the command, the following menu should open:You can now simply walk through the zone in-game and set points yourself.\nAs soon as you have finished creating the zone, press [ENTER]. The following menu will now open:Now you can give the zone a name and select the format.\nYOU MUST SELECT ARRAY FOR FORMAT OTHERWISE THE ZONE WILL NOT HAVE THE CORRECT FORMAT AND CANNOT BE INSERTED INTO THE SCRIPT.\nZones will be saved to ox_lib/created_zones.lua with your chosen format an will look like this:\n{\n    name = poly,\n    points = {\n        vec(447.9, -998.8, 25.8),\n        vec(450.3, -998.2, 25.8),\n        vec(449.9, -995.5, 25.8),\n        vec(447.2, -995.6, 25.8),\n        vec(446.3, -997.9, 25.8),\n    },\n    thickness = 2,\n},\nYou can now simply copy the points and thickness and paste them into one of the zones in the config of it-crafting."}},"/it-crafting/tipps-and-tricks/webhook-setup":{"title":"it-crafting - Webhook Setup","data":{"":"With version 1.3.0 of it-drugs the creation of webhooks is changing. From now on the webhooks are set entirely in the file server/sv_webhooks.\nlocal webhookSettings = {\n    ['active'] = false, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = nil, --'', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIt is now possible to use your own webhook links for the various individual actions of the user.If a valid webhook id is entered and the attribute active is set to true, a webhook message is sent for the corresponding category.\nlocal webhookSettings = {\n    ['active'] = true, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = 'https://discord.com/api/webhooks/**************/*************************', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIn this example now the script only sends webhook messages when a user interacts with a plant.\nPlease note that only messages with in the sell and message area will be sent immediately.\nThe messages for plants and tables are sent every minute all together to prevent Discord from rate limiting your Discord server\nYou don't know how to create Discord webhooks no problem check this article from Discord."}},"/it-drugs":{"title":"it-drugs","data":{"":"it-drugs is a drug script for FiveM, offering a fully immersive and interactive drug economy. With the ability to grow unlimited plants, players can dive deep into cultivation. The script features processing tables for transforming raw materials into high-value drugs, and growth speed zones that add a strategic layer to farming. Selling drugs to NPCs creates a dynamic market environment, enhancing the overall gameplay. Fully configurable, it-drugs allows server admins to customize every aspect to fit their unique needs, making it an essential addition to any FiveM server.","supported-frameworks#Supported Frameworks":"✅ | ESX\n✅ | QbCore\n✅ | QBox\n🔧 | ND_Core","suported-inventorys#Suported Inventorys":"✅ | esx_inventory\n✅ | qb_inventory\n✅ | ox_inventory\n✅ | qs_inventory\n✅ | mInventory\n🔧 | Origen Inventory\n✅ | Supported 🔧 | Pending ❌ | Not Supported","dependencys#Dependencys":"⚙️ | ox_lib\n⚙️ | oxmysql\n⚙️ | ox_target *\n⚙️ | qb-target *\nOptional","--planting#🌱 | Planting":"Our script offers a unique planting system that allows players to grow unlimited plants (or a set max amount in the config). With the ability to plant seeds, players can cultivate their own plants and harvest them for raw materials. Our planting system makes the complete map a potential farm, allowing players to grow plants in any location they choose (Soil/Ground check can be enabled in the config). Optional growth speed zones add a strategic layer to farming, making it a fun and engaging experience.","--processing-tables#🧪 | Processing Tables":"Our script features processing tables that allow players to transform raw materials into high-value drugs. Players can use these tables to create drugs themselves, adding a layer of complexity to the drug economy. The Tables can be placed anywhere on the map, making it easy for players to process their materials and create drugs. Every table can be configured in the config file, allowing server admins to customize the experience to fit their unique needs.","--selling-drugs-to-npcs#💰 | Selling Drugs to NPCs":"Our script allows players to sell drugs to NPCs, creating a dynamic market environment. Players can sell their drugs to NPCs for a profit, enhancing the overall gameplay. This feature adds a layer of realism to the drug economy, making it a fun and engaging experience for players. The selling prices on selling zones can be configured in the config file.","--takeable-drugs#🚬 | Takeable Drugs":"Our script offers takeable drugs that players can consume for various effects. Players can take drugs to enhance their gameplay experience, adding a layer of realism to the drug economy. The effects of the drugs can be configured in the config file.","--ingame-admin-menu#📊 | Ingame Admin Menu":"Our script features an ingame admin menu that allows server admins to manage drugs and tables. Admins can use the menu view and manage all drugs and tables on the server, making it easy to keep track of everything. The admin menu can be accessed by typing /drugadmin [plants/tables] in the chat.","--fully-configurable#🔧 | Fully Configurable":"Our script is fully configurable, allowing server admins to customize every aspect to fit their unique needs. From growth speed zones to selling prices, every aspect of the script can be configured in the config file.","documentation#Documentation":"Legal Notices\nit-drugs (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it-drugs/adjustments/dealers":{"title":"it-drugs - Dealers","data":{"":"The dealer was added to it-drugs with version v1.2.4 and could sell items, with version v1.3.0 the dealer also got the function to buy items from the player.To be able to use this feature, Config.EnableDealers must be set to true in the Config!","configdrugdealers#Config.DrugDealers":"To be able to use this feature, Config.EnableDealers must be set to true in the Config!\n['seed_dealer'] = { -- Dealer id (Musst be unique)\n    label = 'Seed Dealer', -- Dealer name\n    locations = { -- Dealer will spawn at one of these locations\n        vector4(-462.8489, 1101.5592, 326.6819, 166.9773),\n        vector4(-49.4244, 1903.6714, 194.3613, 95.7213),\n        vector4(2414.2463, 5003.8462, 45.6655, 40.8932),\n    },\n    ped = 's_m_y_dealer_01', -- Ped model\n    blip = {\n        display = false, -- Display blip on map\n        sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Seed Dealer',\n    },\n    items = {\n        ['buying'] = { -- Items the dealer buys from you\n            ['weed_lemonhaze'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n        },\n        ['selling'] = { -- Items the dealer sells to you\n            ['weed_lemonhaze_seed'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n            ['coca_seed'] = {min = 100, max = 300, moneyType = 'black_money'},\n        },\n    },\n},\n['seed_dealer']\nWe start with the dealer id, this specifies the name of the dealer, the name is only relevant for the script.\nThe dealer id must not contain any special characters or spaces and must be unique.\nlabel = 'Seed Dealer', -- Dealer name\nThe label is the name of the dealer and is used when the player addresses the dealer or if blips are activated for the dealer, the label is also used for the blip.\nlocations = { -- Dealer will spawn at one of these locations\n    --           x          y          z     heading/w\n    vector4(-462.8489, 1101.5592, 326.6819, 166.9773),\n    vector4(-49.4244, 1903.6714, 194.3613, 95.7213),\n    vector4(2414.2463, 5003.8462, 45.6655, 40.8932),\n},\nA list of vector4() coordinates can be created here.\nEach time the script is restarted, the dealer will spawn at a random location defined here.\nIf the dealer should only spawn at one location at a time, only one vector4() coordinate can be specified here.\nped = 's_m_y_dealer_01', -- Ped model\nThe ped is the model that is used when the dealer ped is spawned. Any of these Peds can be used:\nblip = {\n    display = false, -- Display blip on map\n    sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Seed Dealer',\n},\nThe blip for the dealer can be set here. The blip is only displayed if display = true.\nitems = {\n    ['buying'] = { -- Items the dealer buys from you\n        ['weed_lemonhaze'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n    },\n    ['selling'] = { -- Items the dealer sells to you\n        ['weed_lemonhaze_seed'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n        ['coca_seed'] = {min = 100, max = 300, moneyType = 'black_money'},\n    },\n},\nHere you can set which items the dealer sells and buys. A min and max price can be set for each item. Each time the script is restarted, a new random price is set for the item.\ncash (Money in the players inventory)\nbank (Money in the players bank accout)\nblack_money (Black Money)\nPlease keep in mind black_money is no default account on qb-core!\n['cash'] = {\n    ['qbcore'] = 'cash',\n    ['esx'] = 'money',\n    ['ND_Core'] = 'cash'\n},\n['bank'] = {\n    ['qbcore'] = 'bank',\n    ['esx'] = 'bank',\n    ['ND_Core'] = 'bank'\n},\n['black_money'] = {\n    ['qbcore'] = 'black_money',\n    ['esx'] = 'black_money',\n    ['ND_Core'] = nil -- Will be added soon\n}\n['uniqe_dealer_id'] = { -- Dealer id (Musst be unique)\n    label = 'Dealer Name', -- Dealer name\n    locations = { -- Dealer will spawn at one of these locations\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n    },\n    ped = 's_m_y_dealer_01', -- Ped model\n    blip = {\n        display = true, -- Display blip on map\n        sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    },\n    items = {\n        ['buying'] = { -- Items the dealer buys from you\n            ['weed_lemonhaze'] = {min = 100, max = 200}, -- min/max price\n        },\n        ['selling'] = { -- Items the dealer sells to you\n            ['weed_lemonhaze_seed'] = {min = 100, max = 200}, -- min/max price\n            ['coca_seed'] = {min = 100, max = 300},\n        },\n    },\n},"}},"/it-drugs/adjustments/drugs":{"title":"it-drugs - Drugs","data":{"":"With the script, it is also possible to create your own consumable drugs directly. For these to be active in the game, Config.EnableDrugs must be set to true.","configdrugs#Config.Drugs":"['joint'] = { -- item that can be used in game\n    label = 'Joint',\n    animation = 'smoke', -- Animations: blunt, sniff, pill\n    time = 80, -- Time in seconds of the Effects\n    effects = { -- list of effects the drug have\n        'intenseEffect',\n        'healthRegen',\n        'moreStrength',\n        'drunkWalk'\n    },\n    cooldown = 360, -- Cooldown in seconds until you can use this drug again\n},\nThe cooldown is added to the normal effect time of the drug, in this case the cooldown is 80 + 360.\nIf you use the ox_inventory, please use the following template to add the drugs to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 20,\n\t\tstack = true,\n\t\tclose = true,\n    consume = 0,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.takeDrug\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\nrunningSpeedIncrease\ninfinateStamina\nmoreStrength\nhealthRegen\nfoodRegen\ndrunkWalk\npsycoWalk\noutOfBody\ncameraShake\nfogEffect\nconfusionEffect\nwhiteoutEffect\nintenseEffect\nfocusEffect\nsuperJump\nswimming\narmor-20\nYou can change the number of the armor effect to the desired value. For example, armor-50 will give you 50 armor. The maximum value is 100.\n['item_name'] = { -- item that can be used in game\n    label = 'Drug Label',\n    animation = 'smoke', -- Animations: blunt, sniff, pill\n    time = 80, -- Time in seconds of the Effects\n    effects = { -- list of effects the drug have\n        'intenseEffect',\n        'healthRegen',\n        'moreStrength',\n        'drunkWalk',\n    },\n    cooldown = 360, -- Cooldown in seconds until you can use this drug again\n},"}},"/it-drugs/adjustments/plants":{"title":"it-drugs - Plants","data":{"":"All growth related configurations have significant impacts on the plant growth system.\nMaking any changes to the growth system requires thorough testing and debugging.\nWe strongly recommend any changes are made carefully and methodically as any changes can have unintended consequences.\nNow we can look at the configuration of the individual plants.","configplantdistance#Config.PlantDistance":"Config.PlantDistance = 1.5 -- minimum Distance between two plants\nThis value is used to determine the minimum distance between two plants.\nIf the distance is smaller, the player will not be able to plant a new plant.","allowed-grounds#Allowed Grounds":"","configonlyallowedgrounds#Config.OnlyAllowedGrounds":"Config.OnlyAllowedGrounds = false -- Only allowed grounds\nConfig.OnlyAllowedGrounds is used to set whether a plant may only be planted on permitted grounds.\nIf Config.OnlyAllowedGrounds is set to true, the player can only plant on grounds set in Config.AllowedGrounds.","configallowedgrounds#Config.AllowedGrounds":"A list of ground hashes, if a desired ground is not included, the ground hash can be displayed when planting if Config.Debug is true, this can then simply be added to the list.","decay#Decay":"Config.WaterDecay = 1 -- Percent of water that decays every minute\nConfig.FertilizerDecay = 0.7 -- Percent of fertilizers that decays every minute\nThe decay settings can be used to set how many percent of water or fertilizer a plant should lose per minute.","threshold#Threshold":"Config.FertilizerThreshold = 10\nConfig.WaterThreshold = 10\nConfig.HealthBaseDecay = {7, 10} -- Min/Max Amount of health decay when the plant is below the above thresholds for water and nutrition\nThe threshold value is the percentage value at which a plant begins to lose life.\nAs soon as the values of the plant are below Config.FertilizerThreshold or Config.WaterThreshold, the plant starts to lose life.The rate at which the plant should lose life can be set with Config.HealthBaseDecay.\nThe first value is the minimum and the second value is the maximum.\nA value between these two values is determined every minute. The plant loses this value of life.","destroy-plant#Destroy Plant":"Config.ItemToDestroyPlant = false -- true to need an item to destroy a plant\nConfig.DestroyItemName = \"lighter\"\nIf Config.ItemToDestroyPlant is set to true, the player needs an item to destroy a plant.\nThe item name must be set in Config.DestroyItemName.\nMake sure that the item exists on your server!","configitems#Config.Items":"['liquid_fertilizer'] = {\n    water = 15,\n    fertilizer = 15,\n    itemBack = nil,\n},\nYou can always set 3 values for each item.\nwater this value determines the percentage of water this item adds to the plant. \nfertilizer this value determines the percentage of fertilizer this item adds to the plant. \nitemBack here you can specify another item that the player should get back after using the item.","configplanttypes#Config.PlantTypes":"Here you can set the items that can be used to fertilize and/or water the plant.\n[\"plant1\"] = {\n    [1] = {\"bkr_prop_weed_01_small_01a\", -0.5},\n    [2] = {\"bkr_prop_weed_med_01a\", -0.5},\n    [3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\n},\n[\"plant1\"]\nThis is the unique name of the plant type. The name must not contain any special characters or spaces.This will be used later to give a plant a type. The name must be unique.\n[1] = {\"bkr_prop_weed_01_small_01a\", -0.5},\n[2] = {\"bkr_prop_weed_med_01a\", -0.5},\n[3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\nEach plant type consists of three sizes.\nA separate prop can be set for each size.\nA value can also be added for each prop.\nThis value is then subtracted from or added to the z-coordinate of the plant.\n[stage] = {\"prop\", z-value},","configplants#Config.Plants":"['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = false, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to true if you want to plant this seed only in specific zones\n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n},\n['weed_lemonhaze_seed']\nWe start with the plant id, this specifies the name of the plant, the name is only relevant for the script.\nThe plant id must not contain any special characters or spaces and must be unique.\ngrowthTime = 45\nHere you can specify a custom growthtime for the plant, which overwrites the global growthtime and must be specified in minutes.\nlabel = 'Lemon Haze\nThe label of the plant, this is used to display the name of the plant in all menus.\nplantType = 'plant1'\nThe plant type is defined here; you can choose from any of the types defined in Config.PlantTypes.\nonlyZone = false, -- Set to true if you want to plant this seed only in specific zones\nzones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\nIf onlyZones is true, the seed can only be planted in the specified zones in zones. The id of each previously created zone can be entered in the zones list\nproducts = {\n    ['weed_lemonhaze'] = {min = 1, max = 4},\n    --['other_item'] = {min = 1, max = 2}\n},\nseed = {\n    chance = 50, -- Percent of getting back the seed\n    min = 1, -- Min amount of seeds\n    max = 2 -- Max amount of seeds\n},\ntime = 3000 -- Time it takes to plant/harvest in miliseconds\nIf you use the ox_inventory, please use the following template to add the plants to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 20,\n\t\tstack = true,\n\t\tclose = true,\n        consume = 0,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.useSeed\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = false, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to zone id if you want to plant this seed only in a specific zone \n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n},"}},"/it-drugs/adjustments/processing-tables":{"title":"it-drugs - Processing Tables","data":{"":"So let's start setting up the processing tables.To be able to use the processing tables, Config.EnableProcessing must be set to true in the Config!","configproccesingskillcheck#Config.ProccesingSkillCheck":"It is possible to activate a skill check. If Config.ProccesingSkillCheck is set to true, the player must pass a skill check to be able to craft an item.The skill check can be customized with Config.SkillCheck.If the skill check is deactivated, the player only has to wait a certain amount of time and then receives the item.More information about the skill check can be found here:","configprocessingtables#Config.ProcessingTables":"The individual processing tables can now be configured here:\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = {amount = 3, remove = true},\n                ['paper'] = {amount = 1, remove = true}\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            showIngrediants = true,\n            animation = {\n                dict = 'anim@gangops@facility@servers@bodysearch@',\n                anim = 'player_search',\n            }\n        },\n    }\n}\n['weed_processing_table']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\nmodel = 'bkr_prop_weed_table_01a'\nThe model of the processing table here can theoretically be used with any Fivem model.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\n['joint'] = {\n    label = 'Joint', -- name of the recipe in the menu\n    showIngrediants = true,\n    ingrediants = {\n        ['weed_lemonhaze'] = {amount = 3, remove = true},\n        ['paper'] = {amount = 1, remove = true}\n    },\n    outputs = {\n        ['joint'] = 2\n    },\n    processTime = 5,\n    failChance = 15,\n    showIngrediants = true,\n    animation = {\n        dict = 'anim@gangops@facility@servers@bodysearch@',\n        anim = 'player_search',\n    }\n},\n['joint']\nWe start with the recipe id, this specifies the name of the recipe, the name is only relevant for the script.\nThe recipe id must not contain any special characters or spaces and must be unique.\nshowIngrediants = true,\ningrediants = {\n    ['item_name'] = {amount = 3, remove = true},\n    ['second_item_name'] = {amount = 1, remove = true}\n},\nFor each recipe you can set whether the player should see which ingredients he needs for this recipe.\nIn addition, as many ingredients can be added for each recipe as you like. simply add them to the ingrediants list according to the following scheme:\n['item_name'] = amount_you_need,\n{amount = 3, remove = true}\nThis is the amount of the item you need for the recipe and whether the item should be removed from the inventory after crafting.\nIf remove is set to false, the item will not be removed from the inventory.\noutputs = {\n    ['joint'] = 2\n},\nThe outputs of a recipe work in exactly the same way as the ingredients, and here too any number of items can be added.\n['item_name'] = amount_you_get,\nprocessTime = 5,\nThe processTime is the time in seconds it takes to process an item, this time is only used if Config.ProcessingSkillCheck is false.\nfailChance = 15,\nThe chance in percent that the production of an item can go wrong, which means that with failChance = 15 there is a 15% chance that the player will not get any output when producing an item.","additional-recipe-settings#Additional Recipe Settings":"If you use the ox_inventory, please use the following template to add the tables to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 1000,\n\t\tstack = false,\n\t\tclose = true,\n        consume = 0,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.placeProcessingTable\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n    ['uniqe_table_id'] = {\n    label = 'item_label', -- name of the recipe in the menu\n    showIngrediants = true,\n    ingrediants = {\n        ['item_one'] = {amount = 3, remove = true},\n        ['item_two'] = {amount = 1, remove = true}\n    },\n    outputs = {\n        ['output_item'] = 2\n    },\n    processTime = 5,\n    failChance = 15,\n    showIngrediants = true,\n    animation = {\n        dict = 'anim@gangops@facility@servers@bodysearch@',\n        anim = 'player_search',\n    }\n},\n    ['uniqe_table_id'] = {\n        type = 'weed',\n        model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-drugs/adjustments/selling":{"title":"it-drugs - Selling","data":{"":"With the update v1.1.0 it is now also possible to sell drugs to NPCs in certain zones with the script.To be able to use this feature, Config.EnableSelling must be set to true in the Config!","configsellsettings#Config.SellSettings":"Here you will find the most important settings for selling. These settings apply to all zones.","configsellzones#Config.SellZones":"The individual zones can be created and edited here. We will now take a closer look at one zone and explain what the individual values mean and what they change.\n['groove'] = {\n    points = {\n        vec3(-154.0, -1778.0, 30.0),\n        vec3(48.0, -1690.0, 30.0),\n        vec3(250.0, -1860.0, 30.0),\n        vec3(142.0, -1993.0, 30.0),\n        vec3(130.0, -2029.0, 30.0),\n    },\n    thickness = 27,\n    drugs = {\n        ['cocaine'] = {price = math.random(100, 200), moneyType = 'cash'},\n        ['joint'] = {price = math.random(50, 100), moneyType = 'bank'},\n        ['weed_lemonhaze'] = {price = math.random(50, 100), moneyType = 'black_money'}\n    }\n},\n['groove']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script. The zone id must not contain any special characters or spaces and must be unique\npoints = {\n    vec3(-154.0, -1778.0, 30.0),\n    vec3(48.0, -1690.0, 30.0),\n    vec3(250.0, -1860.0, 30.0),\n    vec3(142.0, -1993.0, 30.0),\n    vec3(130.0, -2029.0, 30.0),\n},\nthickness = 27,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone. A straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:\nAs soon as a player enters this zone he has the possibility to sell items to the NPCs.\ndrugs = {\n    ['cocaine'] = {price = math.random(100, 200), moneyType = 'cash'},\n    ['joint'] = {price = math.random(50, 100), moneyType = 'bank'},\n    ['weed_lemonhaze'] = {price = math.random(50, 100), moneyType = 'black_money'}\n}\nHere you can specify which drugs can be sold in the zone.\nTheoretically, an infinite number of items can be added. For many items it is recommended to set Config.asdasd to true.Schemata for new items:\n['item_name'] = {price = math.random(min_price, max_price), moneyType = 'cash/bank/black_money'},\ncash (Money in the players inventory)\nbank (Money in the players bank accout)\nblack_money (Black Money)\nPlease keep in mind black_money is no default account on qb-core!\n    MoneyTypes = {\n        ['cash'] = {\n            [Framework.ESX] = 'money',\n            [Framework.QBCore] = 'cash',\n            [Framework.QBOX] = 'cash',\n            [Framework.NDCore] = 'cash'\n        },\n        ['bank'] = {\n            [Framework.ESX] = 'bank',\n            [Framework.QBCore] = 'bank',\n            [Framework.QBOX] = 'bank',\n            [Framework.NDCore] = 'bank'\n        },\n        ['black_money'] = {\n            [Framework.ESX] = 'black_money',\n            [Framework.QBCore] = 'crypto',\n            [Framework.QBOX] = 'crypto',\n            [Framework.NDCore] = nil\n        }\n    }"}},"/it-drugs/adjustments/zones":{"title":"it-drugs - Zones","data":{"":"All growth related configurations have significant impacts on the plant growth system.\nMaking any changes to the growth system requires thorough testing and debugging.\nWe strongly recommend any changes are made carefully and methodically as any changes can have unintended consequences.\nFirst, let's take a look at zone management.\nHere, it is possible to create zones that can have an effect on the growth speed of certain plants.","configglobalgrowtime#Config.GlobalGrowTime":"Config.GlobalGrowTime = 10 -- Time in minutes for a plant to grow\nThis variable defines the growth rate in minutes for the plants and is taken as the base value for all future modifications.Later in the configuration, you can change the growth rate of individual plants or zones.","configzones#Config.Zones":"The individual zones can be created and edited here.\nWe will now take a closer look at one zone and explain what the individual values mean and what they change.\n['weed_zone_one'] = { -- Zone id (Musst be unique)\n    points = {\n        vec3(2031.0, 4853.0, 43.0),\n        vec3(2007.0, 4877.0, 43.0),\n        vec3(1981.0, 4903.0, 43.0),\n        vec3(2006.0, 4929.0, 43.0),\n        vec3(2032.0, 4903.0, 43.0),\n        vec3(2057.0, 4878.0, 43.0),\n    },\n    thickness = 4.0,\n    growMultiplier = 2, -- GlobalGrowTime / growMultiplier = Time in minutes for a plant to grow in this zone\n    \n    blip = {\n        display = true, -- Display blip on map\n        sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Weed Zone',\n    },\n},\n['weed_zone_one']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script.\nThe zone id must not contain any special characters or spaces and must be unique.\npoints = {\n    vec3(2031.0, 4853.0, 43.0),\n    vec3(2007.0, 4877.0, 43.0),\n    vec3(1981.0, 4903.0, 43.0),\n    vec3(2006.0, 4929.0, 43.0),\n    vec3(2032.0, 4903.0, 43.0),\n    vec3(2057.0, 4878.0, 43.0),\n},\nthickness = 4.0,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone.\nA straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:As soon as a player plants a plant in such a zone, it is affected by the zone settings.\ngrowMultiplier = 2,\nThe time it takes a plant to grow is divided by this value to calculate the new time.\nSo with a 2, the growth is twice as fast as normal.\nblip = {\n    display = true, -- If true blip will be displayed\n    sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Weed Zone', -- Name that will displayed on the map\n},\nThe blip fie zone can be set here.\nThe blip is always displayed in the middle of the zone.\n  ['uniqe_zone_name'] = { -- Zone id (No Spaces)\n    coords = {\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        -- You can add as many vector3 as you want\n    },\n    thickness = 4.0,\n    growMultiplier = 2, -- GlobalGrowTime / growMultiplier = Time in minutes for a plant to grow in this zone\n    \n    blip = {\n        display = true, -- Display blip on map\n        sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Weed Zone',\n    },\n    exclusive = {'seed_one_name', 'seed_two_name'} -- You can add as many seeds as you want\n},"}},"/it-drugs/common-errors":{"title":"it-drugs - Common Errors","data":{"":"Here you will find common errors and their solutions. If you have any further questions, please feel free to ask in the Discord.\nThis page is still under construction.\nIf you have any errors that are not listed here, please let us know in the Discord.","general-errors#General Errors":"\u001b[1m \u001b[31mattempt to index a nil value (global 'lib')\u001b[39m\u001b[22m\nIf you get this error you either don't have ox_lib installed on your server or you start it after the it-drugs script.\nMake sure to start the ox_lib script before the it-drugs script.","database-errors#Database Errors":"\u001b[1m \u001b[31mError: it-drugs was unable to execute query!\u001b[39m\u001b[22m\nIf you get this error, it means that the script was unable to execute a query on the database.\nThis can have multiple reasons, but the most commons are:\nYou still running version 1.2.4 of the script. Update now\nYou updated the script from 1.2.4 to 1.3.x and didn't update the database. To fix this you can run the following SQL query:\n-- Delete the drug_plants table\nDROP TABLE IF EXISTS drug_plants;\n-- Delete the drug_processing table\nDROP TABLE IF EXISTS drug_processing;","any-other-databse-error#Any other databse error":"If you get any other database error, please make sure that you are using the latest version of the script.\nIf you are using the latest version of the script, please let us know in the Discord.","animation-error#Animation Error":"","missing-animation#Missing Animation":"\u001b[1m \u001b[31mattempt to index a nil value (field 'animation')\nIf you get this error that means you are using 1.2.4 of the script.\nWe would recommend updating to the latest version of the script. This will fix the error.\nHowever, if you want to fix it manually, you can do the following:","open-the-configlua-file#Open the config.lua file.":"","search-for-configprocessingtables#Search for Config.ProcessingTables.":"","add-the-following-lines-to-every-recipe-in-every-processing-tables#Add the following lines to every recipe in every processing tables:":"animation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@',\n    anim = 'player_search',\n},","planting-errors#Planting Errors":"\u001b[1m \u001b[31m[ERROR] [getPlantByNetId] - Plant with netId: 0 does not exists!\u001b[39m\u001b[22m\nIf you get this error, it means that the script was unable to find the plant with the given netId.\nIn most cases, this error occurs when a player try to interact with a plant that is not managed by the script.\nSo in most cases you can ignore this error.","selling-errors#Selling Errors":"","cant-sell-drugs-to-npc#Can't sell drugs to npc":"If yoo can't sell drugs to a NPC make sure your are in on of the zones that are defined in the Config.SellZones in the config.lua file.\nIf you are in one of the zones and still can't sell drugs to the NPC, please make sure that you are using the latest version of the script.\nAlso you can enable Config.ManualZoneChecker in the config.lua file to check the zones manually."}},"/it-drugs/installation":{"title":"it-drugs - Installation","data":{"":"Welcome to the it-drugs installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.\nWhen installing the script make sure to not rename the script folder, this can cause errors in the script. The name of the script folder should always be it-drugs.","need-help-watch-the-video#Need help? Watch the Video!":"","script-download#Script Download":"Before starting, you must open the scripts GitHub page to download the asset.\nJust as you download it the first time, you will also download it multiple times in the future to get updates.\nThe dependencies for this asset are mandatory, so please follow the dependency guide completely and use all required files.","ox_lib#ox_lib":"","oxmysql#oxmysql":"","it_bridge#it_bridge":"This script has dependencies depending on its framework, even if it says optional we recommend having them for correct use.","optional-for-esx-nd_core-qbox#Optional for ESX, ND_Core, QBox":"","optional-for-qbcore#Optional for QbCore":"You can also use ox_target on your QbCore Server but only if you are using ox_target with version 1.16.0 or older!","servercfg-positioning#Server.cfg Positioning":"For best results, start the dependencies before the it-drugs script.\nThis script should always be started under your framework and inventory systems and the it_bridge script for seamless integration.\nFor the best result add it_bridge and it-drugs at the end of your server.cfg file.\n-- First we will start the Database\nensure oxmysql\nensure framework -- Your framework, always on top [This has to be an actual script name]\nensure inventory -- Your inventory system, [This has to be an actual script name]\nensure ox_lib -- The library for the script\nensure [other-dependencies] -- Other dependencies that you may have and need for it_bridge\nensure it_bridge -- The bridge for all it-scripts\nensure it-drugs","database-installation#Database Installation":"The Script will automaticly install and update the database but if you want you still can intall the database manually with this commands:\nFor this step, we highly recommend using HeidiSQL to avoid issues, as it provides an updated version of MariaDB.\nWe have a guide that explains step-by-step how to use HeidiSQL.\nIf you choose to use phpMyAdmin, we will not be responsible for any errors that may occur in your database.\n  DROP TABLE IF EXISTS drug_plants;\n  -- Install the drug_plants table\n  CREATE TABLE IF NOT EXISTS drug_plants (\n      id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n      owner LONGTEXT DEFAULT NULL,\n      coords LONGTEXT NOT NULL,\n      dimension INT(11) DEFAULT 0,\n      time INT(255) NOT NULL,\n      type VARCHAR(100) NOT NULL,\n      health DOUBLE NOT NULL DEFAULT 100,\n      fertilizer DOUBLE NOT NULL DEFAULT 0,\n      water DOUBLE NOT NULL DEFAULT 0,\n      growtime INT(11) NOT NULL\n  );\n  DROP TABLE IF EXISTS drug_processing;\n  -- Install the drug_processing table\n  CREATE TABLE IF NOT EXISTS drug_processing (\n      id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n      coords LONGTEXT NOT NULL,\n      dimension INT(11) DEFAULT 0,\n      rotation DOUBLE NOT NULL,\n      owner LONGTEXT NOT NULL,\n      type VARCHAR(100) NOT NULL\n  );","items-for-it-drugs#Items for it-drugs":"This guid is only for the scripts default items, but you can add new items after the same shemata.\nIf you use qbcore + ox_inventory, you must add the items inside ox_inventory for the items using to work.\nHere you will find a series of selected items in different extensions for different inventories, select the option that suits your server, remember to check if your inventory works with this script!The images for these items can always be found in a folder named items/img within the previously downloaded script.\nMake sure to use these images to ensure consistency and a seamless experience for players on your server.\nYou have to add these item to your item database.\n    INSERT INTO `items` (`name`, `label`, `weight`, `rare`, `can_remove`) VALUES\n      ('watering_can', 'Watering Can', 500, 0, 1),\n      ('fertilizer', 'fertilizer', 500, 0, 1),\n      ('advanced_fertilizer', 'Advanced Fertilizer', 500, 0, 1),\n      ('liquid_fertilizer', 'Liquid Fertilizer', 200, 0, 1),\n      ('weed_lemonhaze_seed', 'Weed Lemonhaze Seed', 20, 0, 1),\n      ('weed_lemonhaze', 'Weed Lemonhaze', 20, 0, 1),\n      ('weed_og_seed', 'Weed OG Seed', 20, 0, 1),\n      ('weed_og', 'weed Og', 20, 0, 1),\n      ('weed_purple_haze_seed', 'Weed Purple Haze Seed', 20, 0, 1),\n      ('weed_purple_haze', 'weed Purple Haze', 20, 0, 1),\n      ('weed_white_widow_seed', 'Weed White Widow Seed', 20, 0, 1),\n      ('weed_white_widow', 'weed White Widow', 20, 0, 1),\n      ('weed_blueberry_seed', 'Weed Blueberry Seed', 20, 0, 1),\n      ('weed_blueberry', 'weed Blueberry', 20, 0, 1),\n      ('coca_seed', 'Coca Seed', 20, 0, 1),\n      ('coca', 'Coca', 20, 0, 1),\n      ('paper', 'Paper', 20, 0, 1),\n      ('nitrous', 'nitrous', 20, 0, 1),\n      ('cocaine', 'cocaine', 20, 0, 1),\n      ('joint', 'joint', 20, 0, 1),\n      ('weed_processing_table', 'weed_processing_table', 1000, 0, 1),\n      ('cocaine_processing_table', 'cocaine_processing_table', 1000, 0, 1)\n    ;\nYou have to add these item to qb-core/shared/items.lua.\n    watering_can = { name = \"watering_can\", label = 'Watering can', weight = 500, type = 'item', image = \"watering_can.png\", unique = false, useable = false, shouldClose = false, combinable = nil, description = 'simple watering can' },\n    fertilizer = { name = 'fertilizer', label = 'fertilizer', weight = 500, type = 'item', image = 'fertilizer.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'fertilizer' },\n    advanced_fertilizer = { name = 'advanced_fertilizer', label = 'Advanced Fertilizer', weight = 500, type = 'item', image = 'advanced_fertilizer.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Fertilizer with the litte extra' },\n    liquid_fertilizer = { name = \"liquid_fertilizer\", label = 'Liquid Fertilizer', weight = 200, type = 'item', image = \"liquid_fertilizer.png\", unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Basicly Water with nutrations' },\n    weed_lemonhaze_seed = { name = 'weed_lemonhaze_seed', label = 'Weed Lemonhaze Seed', weight = 20, type = 'item', image = 'weed_lemonhaze_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze Seed' },\n    weed_lemonhaze = { name = 'weed_lemonhaze', label = 'weed lemonhaze', weight = 20, type = 'item', image = 'weed_lemonhaze.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Lemonhaze' },\n    weed_og_seed = { name = 'weed_og_seed', label = 'Weed Og Seed', weight = 20, type = 'item', image = 'weed_og_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Og Seed' },\n    weed_og = { name = 'weed_og', label = 'weed Og', weight = 20, type = 'item', image = 'weed_og.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Og' },\n    weed_purple_haze_seed = { name = 'weed_purple_haze_seed', label = 'Weed Purple Haze Seed', weight = 20, type = 'item', image = 'weed_purple_haze_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Purple Haze Seed' },\n    weed_purple_haze = { name = 'weed_purple_haze', label = 'weed Purple Haze', weight = 20, type = 'item', image = 'weed_purple_haze.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Purple Haze' },\n    weed_white_widow_seed = { name = 'weed_white_widow_seed', label = 'Weed White Widow Seed', weight = 20, type = 'item', image = 'weed_white_widow_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed White Widow Seed' },\n    weed_white_widow = { name = 'weed_white_widow', label = 'weed White Widow', weight = 20, type = 'item', image = 'weed_white_widow.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed white Widow' },\n    weed_blueberry_seed = { name = 'weed_blueberry_seed', label = 'Weed Blueberry Seed', weight = 20, type = 'item', image = 'weed_blueberry_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Blueberry Seed' },\n    weed_blueberry = { name = 'weed_blueberry', label = 'weed Blueberry', weight = 20, type = 'item', image = 'weed_blueberry.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Blueberry' },\n    coca_seed = { name = 'coca_seed', label = 'coca seed', weight = 20, type = 'item', image = 'coca_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Coca Seed' },\n    coca = { name = 'coca', label = 'coca', weight = 20, type = 'item', image = 'coca.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca' },\n    paper = { name = 'paper', label = 'paper', weight = 50, type = 'item', image = 'paper.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Paper' },\n    nitrous = { name = 'nitrous', label = 'nitrous', weight = 500, type = 'item', image = 'nitrous.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'nitrous' },\n    cocaine = { name = 'cocaine', label = 'cocaine', weight = 20, type = 'item', image = 'cocaine.png', unique = false, useable = true, shouldClose = false, combinable = nil, description = 'Small bag of cocaine' },\n    joint = { name = 'joint', label = 'joint', weight = 10, type = 'item', image = 'joint.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'joint' },\n    weed_processing_table = { name = 'weed_processing_table', label = 'Weed processing table', weight = 1000, type = 'item', image = 'weed_processing_table.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Process some weed' },\n    cocaine_processing_table = { name = 'cocaine_processing_table', label = 'cocaine processing table', weight = 1000, type = 'item', image = 'cocaine_processing_table.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Process some cocaine' }\nYou have to add these item to qb-core/shared/items.lua.\n    watering_can = { name = \"watering_can\", label = 'Watering can', weight = 500, type = 'item', image = \"watering_can.png\", unique = false, useable = false, shouldClose = false, combinable = nil, description = 'simple watering can' },\n    fertilizer = { name = 'fertilizer', label = 'fertilizer', weight = 500, type = 'item', image = 'fertilizer.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'fertilizer' },\n    advanced_fertilizer = { name = 'advanced_fertilizer', label = 'Advanced Fertilizer', weight = 500, type = 'item', image = 'advanced_fertilizer.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Fertilizer with the litte extra' },\n    liquid_fertilizer = { name = \"liquid_fertilizer\", label = 'Liquid Fertilizer', weight = 200, type = 'item', image = \"liquid_fertilizer.png\", unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Basicly Water with nutrations' },\n    weed_lemonhaze_seed = { name = 'weed_lemonhaze_seed', label = 'Weed Lemonhaze Seed', weight = 20, type = 'item', image = 'weed_lemonhaze_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze Seed' },\n    weed_lemonhaze = { name = 'weed_lemonhaze', label = 'weed lemonhaze', weight = 20, type = 'item', image = 'weed_lemonhaze.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Lemonhaze' },\n    weed_og_seed = { name = 'weed_og_seed', label = 'Weed Og Seed', weight = 20, type = 'item', image = 'weed_og_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Og Seed' },\n    weed_og = { name = 'weed_og', label = 'weed Og', weight = 20, type = 'item', image = 'weed_og.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Og' },\n    weed_purple_haze_seed = { name = 'weed_purple_haze_seed', label = 'Weed Purple Haze Seed', weight = 20, type = 'item', image = 'weed_purple_haze_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Purple Haze Seed' },\n    weed_purple_haze = { name = 'weed_purple_haze', label = 'weed Purple Haze', weight = 20, type = 'item', image = 'weed_purple_haze.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Purple Haze' },\n    weed_white_widow_seed = { name = 'weed_white_widow_seed', label = 'Weed White Widow Seed', weight = 20, type = 'item', image = 'weed_white_widow_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed White Widow Seed' },\n    weed_white_widow = { name = 'weed_white_widow', label = 'weed White Widow', weight = 20, type = 'item', image = 'weed_white_widow.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed white Widow' },\n    weed_blueberry_seed = { name = 'weed_blueberry_seed', label = 'Weed Blueberry Seed', weight = 20, type = 'item', image = 'weed_blueberry_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Weed Blueberry Seed' },\n    weed_blueberry = { name = 'weed_blueberry', label = 'weed Blueberry', weight = 20, type = 'item', image = 'weed_blueberry.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Weed Blueberry' },\n    coca_seed = { name = 'coca_seed', label = 'coca seed', weight = 20, type = 'item', image = 'coca_seed.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Coca Seed' },\n    coca = { name = 'coca', label = 'coca', weight = 20, type = 'item', image = 'coca.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca' },\n    paper = { name = 'paper', label = 'paper', weight = 50, type = 'item', image = 'paper.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Paper' },\n    nitrous = { name = 'nitrous', label = 'nitrous', weight = 500, type = 'item', image = 'nitrous.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'nitrous' },\n    cocaine = { name = 'cocaine', label = 'cocaine', weight = 20, type = 'item', image = 'cocaine.png', unique = false, useable = true, shouldClose = false, combinable = nil, description = 'Small bag of cocaine' },\n    joint = { name = 'joint', label = 'joint', weight = 10, type = 'item', image = 'joint.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'joint' },\n    weed_processing_table = { name = 'weed_processing_table', label = 'Weed processing table', weight = 1000, type = 'item', image = 'weed_processing_table.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Process some weed' },\n    cocaine_processing_table = { name = 'cocaine_processing_table', label = 'cocaine processing table', weight = 1000, type = 'item', image = 'cocaine_processing_table.png', unique = false, useable = true, shouldClose = true, combinable = nil, description = 'Process some cocaine' }\nIf you are using esx add these item so qs-inventory/shared/items.lua. If you are using QBCore use the qb-inventory items!\n  [\"watering_can\"] = {\n  name = \"watering_can\",\n  label = \"Watering can\",\n  type = \"item\",\n  weight = 500,\n  unique = false,\n  shouldClose = false,\n  description = \"Simple watering can\",\n  image = \"watering_can.png\",\n},\n[\"fertilizer\"] = {\n    name = \"fertilizer\",\n    label = \"Fertilizer\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Fertilizer\",\n    image = \"fertilizer.png\",\n},\n[\"advanced_fertilizer\"] = {\n    name = \"advanced_fertilizer\",\n    label = \"Advanced fertilizer\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Fertilizer with the litte extra\",\n    image = \"advanced_fertilizer.png\",\n},\n[\"liquid_fertilizer\"] = {\n    name = \"liquid_fertilizer\",\n    label = \"Liquid Fertilizer\",\n    type = \"item\",\n    weight = 200,\n    unique = false,\n    shouldClose = false,\n    description = \"Basicly Water with nutrations\",\n    image = \"liquid_fertilizer.png\",\n},\n[\"weed_lemonhaze_seed\"] = {\n    name = \"weed_lemonhaze_seed\",\n    label = \"Weed Lemonhaze Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Lemonhaze Seed\",\n    image = \"weed_lemonhaze_seed.png\",\n},\n[\"weed_lemonhaze\"] = {\n    name = \"weed_lemonhaze\",\n    label = \"Weed Lemonhaze\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"Weed Lemonhaze\",\n    image = \"weed_lemonhaze.png\",\n},\n[\"weed_og_seed\"] = {\n    name = \"weed_og_seed\",\n    label = \"Weed Og Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Og Seed\",\n    image = \"weed_og_seed.png\",\n},\n[\"weed_og\"] = {\n    name = \"weed_og\",\n    label = \"weed Og\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Og\",\n    image = \"weed_og.png\",\n},\n[\"weed_purple_haze_seed\"] = {\n    name = \"weed_purple_haze_seed\",\n    label = \"Weed Purple Haze Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Purple Haze Seed\",\n    image = \"weed_purple_haze_seed.png\",\n},\n[\"weed_purple_haze\"] = {\n    name = \"weed_purple_haze\",\n    label = \"weed Purple Haze\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Purple Haze\",\n    image = \"weed_purple_haze.png\",\n},\n[\"weed_white_widow_seed\"] = {\n    name = \"weed_white_widow_seed\",\n    label = \"Weed White Widow Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed White Widow Seed\",\n    image = \"weed_white_widow_seed.png\",\n},\n[\"weed_white_widow\"] = {\n    name = \"weed_white_widow\",\n    label = \"weed White Widow\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed White Widow\",\n    image = \"weed_white_widow.png\",\n},\n[\"weed_blueberry_seed\"] = {\n    name = \"weed_blueberry_seed\",\n    label = \"Weed Blueberry Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Blueberry Seed\",\n    image = \"weed_blueberry_seed.png\",\n},\n[\"weed_blueberry\"] = {\n    name = \"weed_blueberry\",\n    label = \"weed Blueberry\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Blueberry\",\n    image = \"weed_blueberry.png\",\n},\n[\"coca_seed\"] = {\n    name = \"coca_seed\",\n    label = \"Coca Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Coca Seed\",\n    image = \"coca_seed.png\",\n},\n[\"coca\"] = {\n    name = \"coca\",\n    label = \"Coca\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"Coca\",\n    image = \"coca.png\",\n},\n[\"paper\"] = {\n    name = \"paper\",\n    label = \"Paper\",\n    type = \"item\",\n    weight = 50,\n    unique = false,\n    shouldClose = false,\n    description = \"Paper\",\n    image = \"paper.png\",\n},\n[\"nitrous\"] = {\n    name = \"nitrous\",\n    label = \"Nitrous\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Nitrous\",\n    image = \"nitrous.png\",\n},\n[\"cocaine\"] = {\n    name = \"cocaine\",\n    label = \"Cocaine\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Small bag of cocaine\",\n    image = \"cocaine.png\",\n},\n[\"joint\"] = {\n    name = \"joint\",\n    label = \"Joint\",\n    type = \"item\",\n    weight = 10,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Joint\",\n    image = \"joint.png\",\n},\n[\"weed_processing_table\"] = {\n    name = \"weed_processing_table\",\n    label = \"Weed Processing Table\",\n    type = \"item\",\n    weight = 1000,\n    unique = true,\n    shouldClose = true,\n    useable = true,\n    description = \"Process some weed\",\n    image = \"weed_processing_table.png\",\n},\n[\"cocaine_processing_table\"] = {\n    name = \"cocaine_processing_table\",\n    label = \"Cocaine Processing Table\",\n    type = \"item\",\n    weight = 1000,\n    unique = true,\n    shouldClose = true,\n    useable = true,\n    description = \"Process some cocaine\",\n    image = \"cocaine_processing_table.png\",\n},\nYou have to add these item to ox_inventory/data/items.lua*\n  [\"watering_can\"] = {\n  \tlabel = \"Watering can\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Simple watering can\",\n  \tclient = {\n  \t\timage = \"watering_can.png\",\n  \t}\n  },\n  \n  [\"fertilizer\"] = {\n  \tlabel = \"Fertilizer\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Fertilizer\",\n  \tclient = {\n  \t\timage = \"fertilizer.png\",\n  \t}\n  },\n  \n  [\"advanced_fertilizer\"] = {\n  \tlabel = \"Advanced fertilizer\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Fertilizer with the litte extra\",\n  \tclient = {\n  \t\timage = \"advanced_fertilizer.png\",\n  \t}\n  },\n  \n  [\"liquid_fertilizer\"] = {\n  \tlabel = \"Liquid Fertilizer\",\n  \tweight = 200,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Basicly Water with nutrations\",\n  \tclient = {\n  \t\timage = \"liquid_fertilizer.png\",\n  \t}\n  },\n  \n  [\"weed_lemonhaze_seed\"] = {\n  \tlabel = \"Weed Lemonhaze Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Weed Lemonhaze Seed\",\n  \tclient = {\n  \t\timage = \"weed_lemonhaze_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_lemonhaze\"] = {\n  \tlabel = \"Weed Lemonhaze\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Weed Lemonhaze\",\n  \tclient = {\n  \t\timage = \"weed_lemonhaze.png\",\n  \t},\n  },\n  \n  [\"weed_og_seed\"] = {\n  \tlabel = \"Weed Og Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Weed Og Seed\",\n  \tclient = {\n  \t\timage = \"weed_og_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_og\"] = {\n  \tlabel = \"weed Og\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Og\",\n  \tclient = {\n  \t\timage = \"weed_og.png\",\n  \t},\n  },\n  \n  [\"weed_purple_haze_seed\"] = {\n  \tlabel = \"Weed Purple Haze Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Weed Purple Haze Seed\",\n  \tclient = {\n  \t\timage = \"weed_purple_haze_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_purple_haze\"] = {\n  \tlabel = \"weed Purple Haze\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Purple Haze\",\n  \tclient = {\n  \t\timage = \"weed_purple_haze.png\",\n  \t},\n  },\n  \n  [\"weed_white_widow_seed\"] = {\n  \tlabel = \"Weed White Widow Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Weed White Widow Seed\",\n  \tclient = {\n  \t\timage = \"weed_white_widow_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_white_widow\"] = {\n  \tlabel = \"weed White Widow\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed White Widow\",\n  \tclient = {\n  \t\timage = \"weed_white_widow.png\",\n  \t}\n  },\n  \n  [\"weed_blueberry_seed\"] = {\n  \tlabel = \"Weed Blueberry Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Weed Blueberry Seed\",\n  \tclient = {\n  \t\timage = \"weed_blueberry_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_blueberry\"] = {\n  \tlabel = \"weed Blueberry\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Blueberry\",\n  \tclient = {\n  \t\timage = \"weed_blueberry.png\",\n  \t}\n  },\n  \n  [\"coca_seed\"] = {\n  \tlabel = \"Coca Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Coca Seed\",\n  \tclient = {\n  \t\timage = \"coca_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"coca\"] = {\n  \tlabel = \"Coca\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Coca\",\n  \tclient = {\n  \t\timage = \"coca.png\",\n  \t}\n  },\n  \n  [\"paper\"] = {\n  \tlabel = \"Paper\",\n  \tweight = 50,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Paper\",\n  \tclient = {\n  \t\timage = \"paper.png\",\n  \t}\n  },\n  \n  [\"nitrous\"] = {\n  \tlabel = \"Nitrous\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Nitrous\",\n  \tclient = {\n  \t\timage = \"nitrous.png\",\n  \t}\n  },\n  \n  [\"weed_processing_table\"] = {\n  \tlabel = \"Weed Processing Table\",\n  \tweight = 1000,\n  \tstack = false,\n  \tclose = true,\n  consume = 0,\n  \tdescription = \"Process some weed\",\n  \tclient = {\n  \t\timage = \"weed_processing_table.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.placeProcessingTable\"\n  \t}\n  },\n  \n  [\"cocaine_processing_table\"] = {\n  \tlabel = \"Cocaine Processing Table\",\n  \tweight = 1000,\n  \tstack = false,\n  \tclose = true,\n  \tdescription = \"Process some cocaine\",\n  consume = 0,\n  \tclient = {\n  \t\timage = \"cocaine_processing_table.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.placeProcessingTable\"\n  \t}\n  },\n  \n  [\"cocaine\"] = {\n  \tlabel = \"Cocaine\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"A little bag of cocaine\",\n  \tconsume = 0,\n  \tserver = {\n  \t\texport = \"it-drugs.takeDrug\"\n  \t},\n  \tclient = {\n  \t\timage = \"cocaine.png\",\n  \t},\n  },\n  \n  [\"joint\"] = {\n  \tlabel = \"Joint\",\n  \tweight = 10,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Joint\",\n  \tconsume = 0,\n  \tserver = {\n  \t\texport = \"it-drugs.takeDrug\"\n  \t},\n  \tclient = {\n  \t\timage = \"joint.png\",\n  \t}\n  },\nYou have to add these item to codem-inventory/config/itemlist.lua\n  watering_can                  = { name = 'watering_can', label = 'Watering Can', weight = 100, type = 'item', image = 'watering_can.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Simple watering can' },\n  fertilizer                      = { name = 'fertilizer', label = 'Fertilizer', weight = 100, type = 'item', image = 'fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Fertilizer' },\n  advanced_fertilizer             = { name = 'advanced_fertilizer', label = 'Advanced Fertilizer', weight = 100, type = 'item', image = 'advanced_fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Fertilizer with the litte extra' },\n  liquid_fertilizer               = { name = 'liquid_fertilizer', label = 'Liquid Fertilizer', weight = 100, type = 'item', image = 'liquid_fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Basicly Water with nutrations' },\n  weed_lemonhaze_seed             = { name = 'weed_lemonhaze_seed', label = 'Weed Lemonhaze Seed', weight = 100, type = 'item', image = 'weed_lemonhaze_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze Seed' },\n  weed_lemonhaze                  = { name = 'weed_lemonhaze', label = 'Weed Lemonhaze', weight = 100, type = 'item', image = 'weed_lemonhaze.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze' },\n  weed_og_seed                    = { name = 'weed_og_seed', label = 'Weed Og Seed', weight = 100, type = 'item', image = 'weed_og_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Og Seed' },\n  weed_og                         = { name = 'weed_og', label = 'Weed Og', weight = 100, type = 'item', image = 'weed_og.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Og' },\n  weed_purple_haze_seed           = { name = 'weed_purple_haze_seed', label = 'Weed Purple Haze Seed', weight = 100, type = 'item', image = 'weed_purple_haze_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Purple Haze Seed' },\n  weed_purple_haze                = { name = 'weed_purple_haze', label = 'Weed Purple Haze', weight = 100, type = 'item', image = 'weed_purple_haze.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Purple Haze' },\n  weed_white_widow_seed           = { name = 'weed_white_widow_seed', label = 'Weed White Widow Seed', weight = 100, type = 'item', image = 'weed_white_widow_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed White Widow Seed' },\n  weed_white_widow                = { name = 'weed_white_widow', label = 'Weed White Widow', weight = 100, type = 'item', image = 'weed_white_widow.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed White Widow' },\n  weed_blueberry_seed             = { name = 'weed_blueberry_seed', label = 'Weed Blueberry Seed', weight = 100, type = 'item', image = 'weed_blueberry_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Blueberry Seed' },\n  weed_blueberry                  = { name = 'weed_blueberry', label = 'Weed Blueberry', weight = 100, type = 'item', image = 'weed_blueberry.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Blueberry' },\n  coca_seed                       = { name = 'coca_seed', label = 'Coca Seed', weight = 100, type = 'item', image = 'coca_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca Seed' },\n  coca                            = { name = 'coca', label = 'Coca', weight = 100, type = 'item', image = 'coca.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca' },\n  paper                           = { name = 'paper', label = 'Paper', weight = 100, type = 'item', image = 'paper.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Use to roll some good stuff' },\n  nitrous                         = { name = 'nitrous', label = 'Nitrous', weight = 100, type = 'item', image = 'nitrous.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Nitrous' },\n  cocaine                         = { name = 'cocaine', label = 'Cocaine', weight = 100, type = 'item', image = 'cocaine.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Small bag of cocaine' },\n  joint                           = { name = 'joint', label = 'Joint', weight = 100, type = 'item', image = 'joint.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'High on life' },\n  weed_processing_table           = { name = 'weed_processing_table', label = 'Weed Processing Table', weight = 100, type = 'item', image = 'weed_processing_table.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Process some weed' },\n  cocaine_processing_table        = { name = 'cocaine_processing_table', label = 'Cocaine Processing_Table', weight = 100, type = 'item', image = 'cocaine_processing_table.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Process some cocain' },\n['watering_can'] = {['name'] = 'watering_can', ['label'] = 'Watering Can', ['weight'] = 100, ['type'] = 'item', ['image'] = 'watering_can.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = false, ['combinable'] = nil, ['description'] = 'Simple watering can'},\n['fertilizer'] = {['name'] = 'fertilizer', ['label'] = 'Fertilizer', ['weight'] = 100, ['type'] = 'item', ['image'] = 'fertilizer.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Fertilizer'},\n['advanced_fertilizer'] = {['name'] = 'advanced_fertilizer', ['label'] = 'Advanced Fertilizer', ['weight'] = 100, ['type'] = 'item', ['image'] = 'advanced_fertilizer.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Fertilizer with the little extra'},\n['liquid_fertilizer'] = {['name'] = 'liquid_fertilizer', ['label'] = 'Liquid Fertilizer', ['weight'] = 100, ['type'] = 'item', ['image'] = 'liquid_fertilizer.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Basically water with nutrients'},\n['weed_lemonhaze_seed'] = {['name'] = 'weed_lemonhaze_seed', ['label'] = 'Weed Lemonhaze Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_lemonhaze_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Lemonhaze Seed'},\n['weed_lemonhaze'] = {['name'] = 'weed_lemonhaze', ['label'] = 'Weed Lemonhaze', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_lemonhaze.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Lemonhaze'},\n['weed_og_seed'] = {['name'] = 'weed_og_seed', ['label'] = 'Weed OG Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_og_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed OG Seed'},\n['weed_og'] = {['name'] = 'weed_og', ['label'] = 'Weed OG', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_og.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed OG'},\n['weed_purple_haze_seed'] = {['name'] = 'weed_purple_haze_seed', ['label'] = 'Weed Purple Haze Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_purple_haze_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Purple Haze Seed'},\n['weed_purple_haze'] = {['name'] = 'weed_purple_haze', ['label'] = 'Weed Purple Haze', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_purple_haze.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Purple Haze'},\n['weed_white_widow_seed'] = {['name'] = 'weed_white_widow_seed', ['label'] = 'Weed White Widow Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_white_widow_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed White Widow Seed'},\n['weed_white_widow'] = {['name'] = 'weed_white_widow', ['label'] = 'Weed White Widow', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_white_widow.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed White Widow'},\n['weed_blueberry_seed'] = {['name'] = 'weed_blueberry_seed', ['label'] = 'Weed Blueberry Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_blueberry_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Blueberry Seed'},\n['weed_blueberry'] = {['name'] = 'weed_blueberry', ['label'] = 'Weed Blueberry', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_blueberry.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Weed Blueberry'},\n['coca_seed'] = {['name'] = 'coca_seed', ['label'] = 'Coca Seed', ['weight'] = 100, ['type'] = 'item', ['image'] = 'coca_seed.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Coca Seed'},\n['coca'] = {['name'] = 'coca', ['label'] = 'Coca', ['weight'] = 100, ['type'] = 'item', ['image'] = 'coca.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Coca'},\n['paper'] = {['name'] = 'paper', ['label'] = 'Paper', ['weight'] = 100, ['type'] = 'item', ['image'] = 'paper.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Use to roll some good stuff'},\n['nitrous'] = {['name'] = 'nitrous', ['label'] = 'Nitrous', ['weight'] = 100, ['type'] = 'item', ['image'] = 'nitrous.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Nitrous'},\n['cocaine'] = {['name'] = 'cocaine', ['label'] = 'Cocaine', ['weight'] = 100, ['type'] = 'item', ['image'] = 'cocaine.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Small bag of cocaine'},\n['joint'] = {['name'] = 'joint', ['label'] = 'Joint', ['weight'] = 100, ['type'] = 'item', ['image'] = 'joint.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'High on life'},\n['weed_processing_table'] = {['name'] = 'weed_processing_table', ['label'] = 'Weed Processing Table', ['weight'] = 100, ['type'] = 'item', ['image'] = 'weed_processing_table.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Process some weed'},\n['cocaine_processing_table'] = {['name'] = 'cocaine_processing_table', ['label'] = 'Cocaine Processing Table', ['weight'] = 100, ['type'] = 'item', ['image'] = 'cocaine_processing_table.png', ['unique'] = false, ['useable'] = false, ['shouldClose'] = true, ['combinable'] = nil, ['description'] = 'Process some cocaine'},","use-webhooks#Use Webhooks":"You want to log the different actions of the script on your discord server? Then take a look at this."}},"/it-drugs/tipps-and-tricks/additional-plant-settings":{"title":"it-drugs - Additional Plant Settings","data":{"add-required-items#Add required items":"A desired feature is that items are required when an item is planted or harvested, this feature is now available with version v1.3.0 but not active by default in the Config.lua.\nTo add the feature the following code must be added to each plant.\nreqItems = { -- Items required to plant the seed\n    [\"planting\"] = {\n    },\n    [\"harvesting\"] = {\n    }\n},\nIn each of the 2 categories you can add as many items as you want, the schema you have to use is as follows:\n['item_amount'] = {amount = number, remove = true or false},\nExample:\n['watering_can'] = {amount = 1, remove = true},\nPlease remember to register all the items you list here in your inventory!","full-example#Full example":"['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = 2, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to zone id if you want to plant this seed only in a specific zone \n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n    reqItems = { -- Items required to plant the seed\n        [\"planting\"] = {\n            ['watering_can'] = {amount = 1, remove = true},\n            ['shovel'] = {amount = 1, remove = false},\n        },\n        [\"harvesting\"] = {\n            ['watering_can'] = {amount = 1, remove = true},\n            ['shovel'] = {amount = 1, remove = false},\n        }\n    }\n},"}},"/it-drugs/tipps-and-tricks/add-custom-dispatch":{"title":"it-drugs - Change Dispatch System","data":{"undefined#Connect it-drugs with ps-dispatch":"","create-new-alert#Create new Alert":"Add this to the alerts.lua in the ps-dispatch resource:\nlocal function itDrugsAlert()\n    local coords = GetEntityCoords(cache.ped)\n    local dispatchData = {\n        message = \"The Message you want to display\", -- Edit this!\n        codeName = 'itDrugsAlert',\n        code = 'Your Code', -- - Edit this!\n        icon = 'fas fa-joint',\n        priority = 2,\n        coords = coords,\n        street = GetStreetAndZone(coords),\n        gender = GetPlayerGender(),\n        jobs = { 'leo' } -- Add all jobs you want to notify\n    }\n    TriggerServerEvent('ps-dispatch:server:notify', dispatchData)\nend\nexports('itDrugsAlert', itDrugsAlert)","register-blip-data#Register Blip Data":"Add codeName in config.lua for the particular robbery to display the blip [\"itDrugsAlert\"] is the codename you passed with the TriggerServerEvent in step 1\nYou can change every parameter to your liking\n['itDrugsAlert'] = {\n    radius = 0,\n    sprite = 119,\n    color = 1,\n    scale = 1.5,\n    length = 2,\n    sound = 'Lose_1st',\n    sound2 = 'GTAO_FM_Events_Soundset',\n    offset = false,\n    flash = false\n},","edit-sendpolicealert-function#Edit SendPoliceAlert function":"Change the SendPoliceAlert function in it-drugs to following:\nfunction SendPoliceAlert(coords)\n    -- Add You own police alert system here\n   exports['ps-dispatch']:itDrugsAlert()\nend","restart#Restart":"Restart ps-dispatch and it-drugs to make the changes work."}},"/it-drugs/tipps-and-tricks/additional-processing-settings":{"title":"it-drugs - Additional Processing Settings","data":{"add-custom-animation#Add custom animation":"If you do not want to use the normal animation for a recipe in a processing table, you can also easily change this via the Config","get-your-animation#Get your animation":"A good resource to find animation is:","add-the-animation-to-the-config#Add the animation to the Config":"Add the following code to the recipe you want to change the animation for:\nanimation = {\n    dict = 'you animation dict', -- Animation dict\n    anim = 'your animation name', -- Animation name\n}\nExample:\nanimation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@', -- Animation dict\n    anim = 'player_search', -- Animation name\n}\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = 3,\n                ['paper'] = 1\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            animation = {\n                dict = 'anim@gangops@facility@servers@bodysearch@',\n                anim = 'player_search',\n            }\n        },\n    }\n}","add-particles#Add particles":"A new feature with version v1.3.0 is the possibility to add particles to a recipe. This can be done via the Config.","get-your-particle#Get your particle":"A good resource to find particles is:","add-the-particle-to-the-config#Add the particle to the Config":"Add the following code to the recipe you want to add the particle to:\n    particlefx = {\n        dict = 'your dict name',\n        particle = 'your particle name',\n        color = {r = 255, g = 255, b = 255},\n        offset = {x = 0.0, y = 0, z = 0},\n        scale = 0.5,\n    },\ncolor = {r = 255, g = 255, b = 255},\nThe color of the particle, each value can be between 0 and 255 and represents the RGB color space.\noffset = {x = 0.0, y = 0, z = 0},\nThe offset of the particle, this can be used to move the particle to a different position.\nDue to the fact that some particles are not centered, it is recommended to play around with the values.\nIf you are using the default table props provided by the script, you can use the following values:\noffset = {x = 0.0, y = -1.5, z = 1.0},\nscale = 0.5,\nThe scale of the particle, this can be used to make the particle bigger or smaller.\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = 3,\n                ['paper'] = 1\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            particlefx = {\n                dict = 'scr_ar_planes',\n                particle = 'scr_ar_trail_smoke_slow',\n                color = {r = 255, g = 255, b = 153},\n                offset = {x = 0.0, y = -1.5, z = 1.0},\n                scale = 0.5,\n            },\n        },\n    }\n}"}},"/it-drugs/tipps-and-tricks/additional-sell-settings":{"title":"it-drugs - Additional Sell Settings","data":{"items-as-a-reward#Items as a reward":"With version 1.4.1 of the script, it is now possible to reward the player with items instead of money. This can be useful if you want to reward the player with items for selling drugs.\nTo add the feature simple add the following code to the regarding item:\nrewardItems = {{name = 'paper', amount = 1}},\nFull item exampel:\n['joint'] = {price = math.random(50, 100), moneyType = 'bank', rewardItems = {{name = 'paper', amount = 1}}},\nYou can also add multiple items as a reward:\nrewardItems = {{name = 'paper', amount = 1}, {name = 'weed_lemonhaze', amount = 1}},\n-- Full item example\n['joint'] = {price = math.random(50, 100), moneyType = 'bank', rewardItems = {{name = 'paper', amount = 1}, {name = 'weed_lemonhaze', amount = 1}}},\nAlso if you want to reward the player only with items and no money you can set the price to 0 and the moneyType to 'none':\n['joint'] = {price = 0, moneyType = 'none', rewardItems = {{name = 'paper', amount = 1}}},"}},"/it-drugs/tipps-and-tricks/easy-zone-creation":{"title":"it-drugs - Easy Zone Creation","data":{"":"This tutorial only works as of version 1.2.4 because ox_lib is now used to create a zone instead of PolyZone.\nTo create a new zone you now can use the /zone poly command from ox_lib.\nMake sure you use /zone poly if not you will get the zone in a wrong format at the end and cannot add it to the config.\nAfter you have used the command, the following menu should open:You can now simply walk through the zone in-game and set points yourself.\nAs soon as you have finished creating the zone, press [ENTER]. The following menu will now open:Now you can give the zone a name and select the format.\nYOU MUST SELECT ARRAY FOR FORMAT OTHERWISE THE ZONE WILL NOT HAVE THE CORRECT FORMAT AND CANNOT BE INSERTED INTO THE SCRIPT.\nZones will be saved to ox_lib/created_zones.lua with your chosen format an will look like this:\n{\n    name = poly,\n    points = {\n        vec(447.9, -998.8, 25.8),\n        vec(450.3, -998.2, 25.8),\n        vec(449.9, -995.5, 25.8),\n        vec(447.2, -995.6, 25.8),\n        vec(446.3, -997.9, 25.8),\n    },\n    thickness = 2,\n},\nYou can now simply copy the points and thickness and paste them into the config of it-drugs."}},"/it-drugs/tipps-and-tricks/plant_types":{"title":"it-drugs - Plant Types","data":{"plant-types#Plant Types":"This list is for the new version of it-drugs (1.3.0) and may not work with older versions of the script.\nWe would recommend updating to the latest version. How to update\nHere you can find a list of all default plant types that are available in the script. You can use these plant types to create your own plants in the script.\nIf you want to use a plant type, you can simply copy the name and paste it into the config below Config.PlantTypes to the other plant types.\nKeep in mind that you can also create your own plant types. The script works with every prop that is available in the game.","weed-lemon-haze#Weed Lemon Haze":"[\"plantLemon\"] = {\n        [1] = {\"an_weed_yellow_01_small_01b\", -0.5}, -- Set to -0.5 to make the plant grow in the ground\n        [2] = {\"an_weed_yellow_med_01b\", -0.5},\n        [3] = {\"an_weed_yellow_lrg_01b\", -0.5},\n    },","weed-og#Weed Og":"[\"plantOg\"] = {\n        [1] = {\"bkr_prop_weed_01_small_01a\", -0.5}, -- Set to -0.5 to make the plant grow in the ground\n        [2] = {\"bkr_prop_weed_med_01a\", -0.5},\n        [3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\n    },","weed-purple-haze#Weed Purple Haze":"[\"plantPurple\"] = {\n        [1] = {\"an_weed_purple_01_small_01b\", -0.5},\n        [2] = {\"an_weed_purple_med_01b\",-0.5},\n        [3] = {\"an_weed_purple_lrg_01b\", -0.5},\n    },","weed-white-widow#Weed White Widow":"[\"plantWhite\"] = {\n        [1] = {\"an_weed_white_01_small_01b\", -0.5},\n        [2] = {\"an_weed_white_med_01b\",-0.5},\n        [3] = {\"an_weed_white_lrg_01b\", -0.5},\n    },","weed-blueberry#Weed Blueberry":"[\"plantBlue\"] = {\n        [1] = {\"an_weed_blue_01_small_01b\", -0.5},\n        [2] = {\"an_weed_blue_med_01b\",-0.5},\n        [3] = {\"an_weed_blue_lrg_01b\", -0.5},\n    },\nThanks to Turnpoint for providing the plant types."}},"/it_bridge":{"title":"it_bridge","data":{"":"A bridge resource that makes it possible for all future it-scripts to be compatible with the following frameworks, inventories, etc:","supported-frameworks#Supported Frameworks":"✅ | ESX\n✅ | QbCore\n✅ | QBox\n✅ | NDCore","supported-inventorys#Supported Inventorys":"✅ | esx_inventory\n✅ | qb_inventory\n✅ | ps-inventory\n✅ | qs_inventory\n✅ | ox_inventory\n✅ | codem-inventory\n✅ | origen-inventory","supported-interactions#Supported Interactions":"✅ | ox_target\n✅ | qb-target\n✅ | distance interaction (press [E])","supported-notifications#Supported Notifications":"✅ | brutal_notify\n✅ | ox_lib\n✅ | esx_notify\n✅ | qb-core\n✅ | es_extended\n✅ | mythic_notify\n✅ | okokNotify","supported-textuis#Supported TextUIs":"✅ | ox_lib\n✅ | qb-core\n✅ | esx_textui","supported-menus#Supported Menus":"✅ | esx_context\n✅ | ox_lib - context\n✅ | qb-menu","supported-menus-1#Supported Menus":"✅ | qs-dispatch\n✅ | ps-dispatch\n✅ | cd_disaptch\n✅ | codem_dispatch\n✅ | emergency_dispatch\n✅ | origen_police\nLegal Notices\nit_bridge (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it_bridge/config-preview":{"title":"it_bridge - Config Preview","data":{"":"Here you can find the full configuration of the it_bridge script.\n-- ┌───────────────────────────────────────────┐\n-- │ ___ _____   _          _     _            │\n-- │|_ _|_   _| | |__  _ __(_) __| | __ _  ___ │\n-- │ | |  | |   | '_ \\| '__| |/ _` |/ _` |/ _ \\│\n-- │ | |  | |   | |_) | |  | | (_| | (_| |  __/│\n-- │|___| |_|___|_.__/|_|  |_|\\__,_|\\__, |\\___|│\n-- │       |_____|                  |___/      │\n-- └───────────────────────────────────────────┘\n-- Configuration file for the bridge resource\nConfig = Config or {}\n--[[\n    Supported frameworks:\n        * AUTO_DETECT: auto-detect framework\n        * Framework.ESX: es_extended, https://github.com/esx-framework/esx_core\n        * Framework.QBCore: qb-core, https://github.com/qbcore-framework/qb-core\n        * Framework.QBOX: qbx_core, https://github.com/Qbox-project/qbx_core\n        * Framework.NDCore: ND_Core, https://github.com/ND-Framework/ND_Core\n]]\nConfig.Framework = AUTO_DETECT\nConfig.FrameworkAdminGroups = {\n    [Framework.ESX] = { 'superadmin', 'admin' },\n    [Framework.QBCore] = { 'god', 'admin' },\n    [Framework.QBOX] = { 'god', 'admin' },\n}\n--[[\n    Supported inventories:\n        * AUTO_DETECT: auto-detect inventory [Only detecting supported inventories below]\n        * Inventories.ESX: es_extended, https://github.com/esx-framework/esx_core\n        * Inventories.QB: qb-inventory, https://github.com/qbcore-framework/qb-inventory\n        * Inventories.PS: ps-inventory, https://github.com/Project-Sloth/ps-inventory\n        * Inventories.QS: qs-inventory,\n        * Inventories.OX: ox_inventory,\n        * Inventories.CODEM: codem-inventory\n        * Inventories.ORIGEN: origen-inventory\n]]\nConfig.Inventories = AUTO_DETECT\nConfig.InventoryImgPath = {\n    [Inventories.QB]   = \"qb-inventory/html/images/\",\n    [Inventories.PS]   = \"ps-inventory/html/images/\",\n    [Inventories.QS]   = \"qs-inventory/html/images/\",\n    [Inventories.OX]   = \"ox_inventory/web/images/\",\n    [Inventories.CODEM] = \"codem-inventory/html/images/\",\n    [Inventories.ORIGEN] = \"origen-inventory/html/images/\",\n}\n--[[\n    Supported interactions:\n        * AUTO_DETECT: auto-detect interactions [Only detecting supported interactions below]\n        * Interactions.OX: ox_target,\n        * Interactions.QB: qb-target,\n        * Interactions.MV, ps-inventory,\n        * Interactions.NONE, distance interaction - press [E]\n]]\nConfig.Interactions = AUTO_DETECT\n--[[\n    Supported phone resources:\n        * AUTO_DETECT: auto-detect phone resource\n        * Phones.LB: lb_phone,\n]]\nConfig.Phones = AUTO_DETECT\n--[[\n    Supported Notify resources:\n        * AUTO_DETECT: auto-detect Notify resource\n        * Notifications.BRUTAL: brutal_notify,\n        * Notifications.OX: ox_lib,\n        * Notifications.ESX_NOTIFY: esx_notify,\n        * Notifications.QBCORE: qb-core,\n        * Notifications.ESX: es_extended,\n        * Notifications.MYTHIC: mythic_notify,\n        * Notifications.OKOK: okokNotify,\n]]\nConfig.Notifications = AUTO_DETECT\nConfig.NotificationsSettings = {\n    Success = 'success',\n    Info = 'primary',\n    Warning = 'warning',\n    Error = 'error',\n}\n--[[\n    Supported TextUI resources:\n        * AUTO_DETECT: auto-detect TextUI resource\n        * TextUI.OX: ox_lib,\n        * TextUI.QBCORE: qb-core,\n        * TextUI.ESX: esx_textui,\n        * STANDALONE: no TextUI resource found.\n]]\n    \nConfig.TextUI = AUTO_DETECT\n--[[\n    Supported Menu:\n        * AUTO_DETECT: auto-detect menu\n        * Menus.ESX_CONTEXT: esx_context,\n        * Menus.OX: ox_lib - context,\n        * Menus.QB: qb-menu,\n]]\nConfig.Menus = AUTO_DETECT\n--[[\n    Supported dispatches:\n        * AUTO_DETECT: auto-detect dispatch resources\n        * Dispatches.QS, qs-dispatch\n        * Dispatches.PS, ps-dispatch\n        * Dispatches.CD, cd_disaptch\n        * Dispatches.CODEM, codem_dispatch\n        * Dispatches.LOVE_SCRIPTS, emergency_dispatch\n        * Dispatches.ORIGEN, origen_police\n]]\nConfig.Dispatches = AUTO_DETECT"}},"/it_bridge/exports/disptach/client":{"title":"it_bridge | Client Exports - Disptach","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.\nDue to the fact that there are so many disptach system avaliable for Fivem, I've only added the most used systems to the bridge by default.\nYou can add your own dispatch system to the bridge by editing the disptach/server.lua and disptach/client.lua file.","disptach-data#Disptach Data":"{\n    job = 'string', -- The job that should receive the disptach.\n    jobs = {}, -- List of jobs that should receive the disptach.\n    title = 'string', -- The disptach title.\n    message = 'string', -- The disptach description.\n    coords = {x = 0.0, y = 0.0, z = 0.0}, -- The disptach location.\n    callCode = {\n        code = 'string', -- The disptach code.\n        snippet = 'string' -- The disptach priority.\n    },\n    flashes = boolean, -- If the disptach should flash on the map.\n    image = 'string', -- The disptach image.\n    blip = {\n        sprite = number, -- The disptach blip sprite.\n        colour = number, -- The disptach blip color.\n        scale = number, -- The disptach blip scale.\n        text = 'string', -- The disptach blip label.\n        time = number -- The disptach blip time.\n        flashes = boolean -- If the disptach blip should flash.\n    }\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","senddisptach#SendDisptach":"exports.it_bridge:SendDispatch(disptachData)\ndisptachData: table: The disptach data.\nSends a disptach with the specified data.","example#Example":"exports.it_bridge:SendDispatch({\n    job = 'police',\n    title = 'Robbery',\n    message = 'A robbery has been reported at the bank.',\n    coords = {x = 0.0, y = 0.0, z = 0.0},\n    callCode = {\n        code = '10-31',\n        snippet = '10-31'\n    },\n    flashes = true,\n    image = 'https://i.imgur.com/0J2QX1E.png',\n    blip = {\n        sprite = 1,\n        colour = 1,\n        scale = 1.0,\n        text = 'Robbery',\n        time = 30000,\n        flashes = true\n    }\n})"}},"/it_bridge/exports/disptach/server":{"title":"it_bridge | Server Exports - Dispatch","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.\nDue to the fact that there are so many disptach system avaliable for Fivem, I've only added the most used systems to the bridge by default.\nYou can add your own dispatch system to the bridge by editing the disptach/server.lua and disptach/client.lua file.","disptach-data#Disptach Data":"{\n    job = 'string', -- The job that should receive the disptach.\n    jobs = {}, -- List of jobs that should receive the disptach.\n    title = 'string', -- The disptach title.\n    message = 'string', -- The disptach description.\n    coords = {x = 0.0, y = 0.0, z = 0.0}, -- The disptach location.\n    callCode = {\n        code = 'string', -- The disptach code.\n        snippet = 'string' -- The disptach priority.\n    },\n    flashes = boolean, -- If the disptach should flash on the map.\n    image = 'string', -- The disptach image.\n    blip = {\n        sprite = number, -- The disptach blip sprite.\n        colour = number, -- The disptach blip color.\n        scale = number, -- The disptach blip scale.\n        text = 'string', -- The disptach blip label.\n        time = number -- The disptach blip time.\n        flashes = boolean -- If the disptach blip should flash.\n    }\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","senddisptach#SendDisptach":"exports.it_bridge:SendDispatch(disptachData)\ndisptachData: table: The disptach data.\nSends a disptach with the specified data.","example#Example":"exports.it_bridge:SendDispatch({\n    job = 'police',\n    title = 'Robbery',\n    message = 'A robbery has been reported at the bank.',\n    coords = {x = 0.0, y = 0.0, z = 0.0},\n    callCode = {\n        code = '10-31',\n        snippet = '10-31'\n    },\n    flashes = true,\n    image = 'https://i.imgur.com/0J2QX1E.png',\n    blip = {\n        sprite = 1,\n        colour = 1,\n        scale = 1.0,\n        text = 'Robbery',\n        time = 30000,\n        flashes = true\n    }\n})"}},"/it_bridge/exports/framework/client":{"title":"it_bridge | Client Exports - Framework","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","getplayername#GetPlayerName":"exports.it_bridge:GetPlayerName()\nReturns the current player's ingame name.Example\nlocal playerName = exports.it_bridge:GetPlayerName()\nprint(playerName)","getcitizenid#GetCitizenId":"exports.it_bridge:GetCitizenId()\nReturns the current player's citizen ID. For every framework, the citizen ID is unique.Example\nlocal citizenId = exports.it_bridge:GetCitizenId()\nprint(citizenId)","getplayerjob#GetPlayerJob":"exports.it_bridge:GetPlayerJob()\nReturns table containing the current player's job information.\n{\n    grade: 0, -- number\n    grade_label: \"Unemployed\", -- string\n    grade_salary: 0, -- number\n    isBoss: false, -- boolean\n    label: \"Unemployed\", -- string\n    name: \"unemployed\", -- string\n    onDuty: true, -- boolean\n}\nExample\nlocal job = exports.it_bridge:GetPlayerJob()\nprint(job.label) -- Unemployed","getmoney#GetMoney":"exports.it_bridge:GetMoney(moneyType)\nmoneyType: string: The money type. (cash, bank, black_money)\nReturns the current player's money amount.Example\nlocal cash = exports.it_bridge:GetMoney('cash')\nprint(cash)"}},"/it_bridge/exports/framework/server":{"title":"it_bridge | Server Exports - Framework","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","getplayer#GetPlayer":"exports.it_bridge:GetPlayer(source)\nsource: number: The player's server ID.\nReturns the framework player object from the source.\nYou can execute any framework player function using this object.","getplayerbycitizenid#GetPlayerByCitizenId":"exports.it_bridge:GetPlayerByCitizenId(citizenId)\ncitizenId: string: The player's citizen ID.\nReturns the framework player object from the citizen ID.\nYou can execute any framework player function using this object.","getplayers#GetPlayers":"exports.it_bridge:GetPlayers()\nReturns a table containing all the players on the server.Example\nlocal players = exports.it_bridge:GetPlayers()\nfor _, player in ipairs(players) do\n    print(player.source)\nend","getplayername#GetPlayerName":"exports.it_bridge:GetPlayerName(source)\nsource: number: The player's server ID.\nReturns the the player's ingame name.Example\nlocal playerName = exports.it_bridge:GetPlayerName(source)\nprint(playerName)","getcitizenid#GetCitizenId":"exports.it_bridge:GetCitizenId(source)\nsource: number: The player's server ID.\nReturns the the player's citizen ID. For every framework, the citizen ID is unique.Example\nlocal citizenId = exports.it_bridge:GetCitizenId(source)\nprint(citizenId)","getplayerjob#GetPlayerJob":"exports.it_bridge:GetPlayerJob(source)\nsource: number: The player's server ID.\nReturns table containing the player's job information.\n{\n    grade: 0, -- number\n    grade_label: \"Unemployed\", -- string\n    grade_salary: 0, -- number\n    isBoss: false, -- boolean\n    label: \"Unemployed\", -- string\n    name: \"unemployed\", -- string\n    onDuty: true, -- boolean\n}\nExample\nlocal job = exports.it_bridge:GetPlayerJob(source)\nprint(job.label) -- Unemployed","getmoney#GetMoney":"exports.it_bridge:GetMoney(source, moneyType)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\nReturns the player's money amount.Example\nlocal cash = exports.it_bridge:GetMoney(source, 'cash')\nprint(cash)","addmoney#AddMoney":"exports.it_bridge:AddMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to add.\nreason: string | nil: The reason for adding money.\nAdds money to the player's account. Will return true if the money was added successfully.Example\nlocal success = exports.it_bridge:AddMoney(source, 'cash', 1000, 'Reward')\nprint(success)","removemoney#RemoveMoney":"exports.it_bridge:RemoveMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to remove.\nreason: string | nil: The reason for removing money.\nRemoves money from the player's account. Will return true if the money was removed successfully.Example\nlocal success = exports.it_bridge:RemoveMoney(source, 'cash', 1000, 'Fine')\nprint(success)","setmoney#SetMoney":"exports.it_bridge:SetMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to set.\nreason: string | nil: The reason for setting money.\nSets the player's money amount. Will return true if the money was set successfully.Example\nlocal success = exports.it_bridge:SetMoney(source, 'cash', 1000, 'Set')\nprint(success)"}},"/it_bridge/exports/interaction/client":{"title":"it_bridge | Client Exports - Interactions","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","interactions-options#Interactions Options":"{\n  label = 'string', -- The label of the interaction.\n  name = 'string', -- The name of the interaction.\n  icon = 'string', -- The icon of the interaction.\n  item = {}, -- List of item you need to have to use the interaction.\n  groups = {}, -- List of groups you need to have to use the interaction.\n  canInteract = function(entity, distance), -- Function to check if the player can interact with the entity.\n  onSelect = function(entity), -- Function to execute when the player selects the interaction.\n  distance = number, -- The distance the player needs to be to interact with the entity.\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","createboxzone#CreateBoxZone":"exports.it_bridge:CreateBoxZone(options, boxData)\noptions: table: The options of the box zone.\nboxData: table: The data of the box zone.\nCreates a box zone with the specified data.","boxdata#BoxData":"{\n  coords = vector3, -- The coordinates of the box zone.\n  size = vector3, -- The size of the box zone.\n  rotation = number, -- The rotation of the box zone.\n  debug = boolean, -- If the box zone should be debugged.\n  drawSprite = boolean, -- If the box zone should draw a sprite.\n  minZ = number, -- The minimum Z value of the box zone.\n  maxZ = number, -- The maximum Z value of the box zone.\n  interactDistance = number, -- The distance the player needs to be to interact with the box zone.\n}\nExample\nexports.it_bridge:CreateBoxZone({\n  label = 'Example Box Zone',\n  name = 'example_box_zone',\n  icon = 'fas fa-box',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the box zone.')\n  end,\n  distance = 2.5,\n}, {\n  coords = vector3(0.0, 0.0, 0.0),\n  size = vector3(2.5, 2.5, 2.5),\n  rotation = 0.0,\n  debug = true,\n  drawSprite = true,\n  minZ = 0.0,\n  maxZ = 3.0,\n  interactDistance = 2.5,\n  })","addtargetentity#AddTargetEntity":"exports.it_bridge:AddTargetEntity(entities, options)\nentities: table | number: The entities to add as target entities.\noptions: table: The options of the target entities.\nReturn all options that where added to the entities.Adds the specified entities as target entities.Example\nlocal targetData = exports.it_bridge:AddTargetEntity(netId, {\n  label = 'Example Entity',\n  icon = 'fas fa-user',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the entity.')\n  end,\n  distance = 2.5,\n})","removetargetentity#RemoveTargetEntity":"exports.it_bridge:RemoveTargetEntity(entities, options)\nentities: table | number: The entities to remove as target entities.\noptions: table: The options of the target entities.\nReturn all options that where removed from the entities.\nRemoves the specified entities as target entities.Example\nlocal removed = exports.it_bridge:RemoveTargetEntity(netId, targetData)","addglobalped#AddGlobalPed":"exports.it_bridge:AddGlobalPed(options)\noptions: table: The options of the global ped.\nReturn all options that where added to the peds.\nAdds a interaction for all peds in the world.Example\nlocal pedData = exports.it_bridge:AddGlobalPed({\n  label = 'Example Ped',\n  icon = 'fas fa-user',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the ped.')\n  end,\n  distance = 2.5,\n})","removeglobalped#RemoveGlobalPed":"exports.it_bridge:RemoveGlobalPed(options)\noptions: table: The options of the global ped.\nReturn true if the interactions was removed.\nRemoves the interaction for all peds in the world.Example\nlocal removed = exports.it_bridge:RemoveGlobalPed(pedData)","addglobalplayer#AddGlobalPlayer":"exports.it_bridge:AddGlobalPlayer(options)\noptions: table: The options of the global player.\nReturn all options that where added to the players.\nAdds a interaction for all players in the world.Example\nlocal playerData = exports.it_bridge:AddGlobalPlayer({\n  label = 'Example Player',\n  icon = 'fas fa-user',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the player.')\n  end,\n  distance = 2.5,\n})","removeglobalplayer#RemoveGlobalPlayer":"exports.it_bridge:RemoveGlobalPlayer(options)\noptions: table: The options of the global player.\nReturn true if the interactions was removed.\nRemoves the interaction for all players in the world.Example\nlocal removed = exports.it_bridge:RemoveGlobalPlayer(playerData)","addglobalvehicle#AddGlobalVehicle":"exports.it_bridge:AddGlobalVehicle(options)\noptions: table: The options of the global vehicle.\nReturn all options that where added to the vehicles.\nAdds a interaction for all vehicles in the world.Example\nlocal vehicleData = exports.it_bridge:AddGlobalVehicle({\n  label = 'Example Vehicle',\n  icon = 'fas fa-car',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the vehicle.')\n  end,\n  distance = 2.5,\n})","removeglobalvehicle#RemoveGlobalVehicle":"exports.it_bridge:RemoveGlobalVehicle(options)\noptions: table: The options of the global vehicle.\nReturn true if the interactions was removed.\nRemoves the interaction for all vehicles in the world.Example\nlocal removed = exports.it_bridge:RemoveGlobalVehicle(vehicleData)","addtargetmodel#AddTargetModel":"exports.it_bridge:AddTargetModel(models, options)\nmodels: table | string: The models to add as target models.\noptions: table: The options of the target models.\nReturn all options that where added to the models.\nAdds the specified models as target models.Example\nlocal modelData = exports.it_bridge:AddTargetModel('a_m_m_skater_01', {\n  label = 'Example Model',\n  icon = 'fas fa-user',\n  canInteract = function(entity, distance)\n    return distance < 2.5\n  end,\n  onSelect = function(entity)\n    print('You have interacted with the model.')\n  end,\n  distance = 2.5,\n})","removetargetmodel#RemoveTargetModel":"exports.it_bridge:RemoveTargetModel(models, options)\nmodels: table | string: The models to remove as target models.\noptions: table: The options of the target models.\nReturn all options that where removed from the models.\nRemoves the specified models as target models.Example\nlocal removed = exports.it_bridge:RemoveTargetModel('a_m_m_skater_01', modelData)"}},"/it_bridge/exports/interaction/server":{"title":"Server","data":{"":"The Interactions has no server exports available. If you want to use the Interactions exports please use the client exports."}},"/it_bridge/exports/inventory/client":{"title":"it_bridge | Client Exports - Inventory","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.\nI do not recommend using these exports on the client-side. Most of the time these exports just trigger a callback with the server exports.\nYou make your script more vulnerable if you are using these exports.\nThey are intended for server-side use only.","cancarryitem#CanCarryItem":"exports.it_bridge:CanCarryItem(item, amount)\nitem: string: The item name.\ncount: number: The amount of items.\nChecks if the player can carry the specified amount of items. Returns true if the player can carry the items, false otherwise.Example\nlocal canCarry = exports.it_bridge:CanCarryItem('paper', 10)\nprint(canCarry)","getitemcount#GetItemCount":"exports.it_bridge:GetItemCount(item, metadata)\nitem: string: The item name.\nmetadata?: table | nil (optional): The item metadata.\nReturns the amount of the specified item the player has in their inventory.Example\nlocal itemCount = exports.it_bridge:GetItemCount('paper')\nprint(itemCount)","hasitem#HasItem":"exports.it_bridge:HasItem(item, amount, metadata)\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nChecks if the player has the specified amount of items. Returns true if the player has the items, false otherwise.Example\nlocal hasItem = exports.it_bridge:HasItem('paper', 10)\nprint(hasItem)","getitemlabel#GetItemLabel":"exports.it_bridge:GetItemLabel(item)\nitem: string: The item name.\nReturns the label of the specified item.Example\nlocal label = exports.it_bridge:GetItemLabel('paper')\nprint(label)"}},"/it_bridge/exports/inventory/server":{"title":"it_bridge | Server Exports - Inventory","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","cancarryitem#CanCarryItem":"exports.it_bridge:CanCarryItem(source, item, amount)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nChecks if the player can carry the specified amount of items. Returns true if the player can carry the items, false otherwise.\nIf the server uses codem_inventory the function will allways return true.Example\nlocal canCarry = exports.it_bridge:CanCarryItem(source, 'paper', 10)\nprint(canCarry)","getitemcount#GetItemCount":"exports.it_bridge:GetItemCount(source, item, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\nmetadata?: table | nil (optional): The item metadata.\nReturns the amount of the specified item the player has in their inventory.Example\nlocal itemCount = exports.it_bridge:GetItemCount(source, 'paper')\nprint(itemCount)","hasitem#HasItem":"exports.it_bridge:HasItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nChecks if the player has the specified amount of items. Returns true if the player has the items, false otherwise.Example\nlocal hasItem = exports.it_bridge:HasItem(source, 'paper', 10)\nprint(hasItem)","giveitem#GiveItem":"exports.it_bridge:GiveItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nGives the player the specified amount of items. Returns true if the items were successfully given, false otherwise.\nThis function will not check if the player can carry the items. Make sure to use the CanCarryItem function before giving items if you want this check.\nExample\nlocal success = exports.it_bridge:GiveItem(source, 'paper', 10)\nprint(success)","removeitem#RemoveItem":"exports.it_bridge:RemoveItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nRemoves the specified amount of items from the player's inventory. Returns true if the items were successfully removed, false otherwise.Example\nlocal success = exports.it_bridge:RemoveItem(source, 'paper', 10)\nprint(success)","getitemlabel#GetItemLabel":"exports.it_bridge:GetItemLabel(item)\nitem: string: The item name.\nReturns the label of the specified item. Wil return the given value and an error if the item does not exist.Example\nlocal label = exports.it_bridge:GetItemLabel('paper')\nprint(label)","createusableitem#CreateUsableItem":"exports.it_bridge:CreateUsableItem(item, cb)\nitem: string: The item name.\ncb: function: The function to call when the item is used.\nCreates a usable item that can be used by players. The function will be called when the item is used.Example\nexports.it_bridge:CreateUsableItem('paper', function(source)\n  print('Paper was used by player ' .. source)\nend)"}},"/it_bridge/exports/menus/client":{"title":"it_bridge | Client Exports - Menus","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","menu-data#Menu Data":"{\n  id = 'string', -- The unique identifier of the menu.\n  title = 'string', -- The title of the menu.\n  menu = 'string', -- The menu to open when the menu is closed. (Only ox_lib)\n  onBack = function, -- The function to execute when the back button is pressed. (Only ox_lib)\n  options = {optionData}, -- The options of the menu.\n}","menu-optiondata#Menu optionData":"{\n    title = 'string', -- The title of the option.\n    description = 'string', -- The description of the option.\n    disabled = boolean, -- If the option is disabled.\n    readOnly = boolean, -- If the option is read-only.\n    onSelect = function, -- The function to execute when the option is selected.\n    icon = 'string', -- The icon name. (From FontAwesome)\n    progress = number, -- The progress amount of the option. (Only ox_lib)\n    colorScheme = 'string', -- The color scheme of the option. (Only ox_lib)\n    image = 'string', -- The image URL of the option. (Only ox_lib)\n    metadata = 'table', -- The metadata of the option. (Only ox_lib)\n    params = {\n      event = 'string', -- The event to trigger when the option is selected. (Only qb-menu)\n      args = 'table', -- The arguments to pass to the event. (Only qb-menu)\n    }\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","openmenu#OpenMenu":"exports.it_bridge:OpenMenu(menuData)\nmenuData: table: The menu data.\nOpens a menu with the specified data.Example\nexports.it_bridge:OpenMenu({\n  id = 'example',\n  title = 'Example Menu',\n  options = {\n    {\n      title = 'Option 1',\n      description = 'This is option 1',\n      onSelect = function()\n        print('Option 1 selected')\n      end,\n      params = {\n        event = 'example:event',\n        args = { 'arg1', 'arg2' },\n      },\n    },\n    {\n      title = 'Option 2',\n      description = 'This is option 2',\n      onSelect = function()\n        print('Option 2 selected')\n      end,\n      params = {\n        event = 'example:event',\n        args = { 'arg1', 'arg2' },\n      },\n    },\n    {\n      title = 'Disabled Button',\n      description = 'This button is disabled',\n      icon = 'fas fa-ban',\n      disabled = true,\n    }\n  },\n})"}},"/it_bridge/exports/menus/server":{"title":"Server","data":{"":"The Menus has no server exports available. If you want to use the TextUI exports please use the client exports."}},"/it_bridge/exports/notification/client":{"title":"it_bridge | Client Exports - Notification","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","sendnotification#SendNotification":"exports.it_bridge:SendNotification(title. message, time, type, sound)\ntitle: string: The notification title.\nmessage: string: The notification message.\ntime: number: The notification display time in milliseconds.\ntype: string: The notification type. Can be Success, Info, Warning, or Error.\nsound: boolean: If the notification should play a sound.\nSends a notification with the specified data.Example\nexports.it_bridge:SendNotification('Title', 'Message', 5000, 'Info', true)"}},"/it_bridge/exports/notification/server":{"title":"it_bridge | Server Exports - Notification","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","sendnotification#SendNotification":"exports.it_bridge:SendNotification(source, title, message, time, type, sound)\nsource: number: The player's server ID.\ntitle: string: The notification title.\nmessage: string: The notification message.\ntime: number: The notification display time in milliseconds.\ntype: string: The notification type. Can be Success, Info, Warning, or Error.\nsound: boolean: If the notification should play a sound.\nSends a notification with the specified data.Example\nexports.it_bridge:SendNotification(source, 'Title', 'Message', 5000, 'Info', true)"}},"/it_bridge/exports/shared":{"title":"it_bridge | Shared Exports","data":{"":"These exports can be used on both the client and server-side. Make sure to use them in your script files.","getserverframework#GetServerFramework":"exports.it_bridge:GetServerFramework()\nReturns: string: The server framework.\nReturns the server framework that is currently being used.\nes_extended\nqb-core\nqbx_core\nND_Core","getserverframeworkobject#GetServerFrameworkObject":"exports.it_bridge:GetServerFrameworkObject()\nReturns: table: The server framework object.\nReturns the server framework object that is currently being used. You can execute functions from the server framework object.","getserverinventory#GetServerInventory":"exports.it_bridge:GetServerInventory()\nReturns: string: The server inventory.\nReturns the server inventory that is currently being used.\nes_extended\nqb-inventory\nps-inventory\nqs-inventory\nox_inventory\ncodem-inventory\norigen-inventory","getserverinteraction#GetServerInteraction":"exports.it_bridge:GetServerInteraction()\nReturns: string | nil: The server interaction.\nReturns the server interaction that is currently being used.\nox_target\nqb-target\nnil","getservernotify#GetServerNotify":"exports.it_bridge:GetServerNotify()\nReturns: string: The server notify.\nReturns the server notify that is currently being used.\nbrutal_notify\nox_lib\nesx_notify\nqb-core\nes_extended\nmythic_notify\nokokNotify","getservertextui#GetServerTextUI":"exports.it_bridge:GetServerTextUI()\nReturns: string | nil: The server text UI.\nReturns the server text UI that is currently being used.\nesx_textUI\nox_lib\nqb-core\nokokTextUI\nnil","getservermenu#GetServerMenu":"exports.it_bridge:GetServerMenu()\nReturns: string | nil: The server menu.\nReturns the server menu that is currently being used.\nesx_context\nox_lib\nqb-menu","getserverdisptach#GetServerDisptach":"exports.it_bridge:GetServerDisptach()\nReturns: string | nil: The server disptach.\nReturns the server disptach that is currently being used.\nqs-dispatch\nps-dispatch\ncd_disaptch\ncore_dispatch\ncodem_dispatch\nemergency_dispatch\norigen_police\nnil"}},"/it_bridge/exports/textui/client":{"title":"it_bridge | Client Exports - Text UI","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","textuidata#TextUIData":"{\n  position: 'string', -- The position of the text UI. Can be 'left', 'right'.\n  icon = 'string', -- The icon name. (From FontAwesome)\n  iconAnimation = 'string', -- The icon animation. (From ox_lib)\n  color = 'string', -- The type of the text UI. Can be 'success', 'info', 'error'.\n  playSound = boolean, -- If the text UI should play a sound.\n}","showtextui#ShowTextUI":"exports.it_bridge:ShowTextUI(text, data)\ntext: string: The text to display.\ndata: TextUIData: The text UI data.\nShows a text UI with the specified text and data.Example\nexports.it_bridge:ShowTextUI('Hello World!', {\n  position = 'left',\n  icon = 'fa-info',\n  iconAnimation = 'shake',\n  color = 'info',\n  playSound = true,\n})","hidetextui#HideTextUI":"exports.it_bridge:HideTextUI(text)\ntext?: string | nil: The text to hide. (Only works with ox_lib)\nHides the text UI with the specified text. If no text is specified, it will hide the current text UIs.Example\nexports.it_bridge:HideTextUI('Hello World!')"}},"/it_bridge/exports/textui/server":{"title":"Server","data":{"":"The TextUI has no server exports available. If you want to use the TextUI exports please use the client exports."}},"/it_bridge/installation":{"title":"it_bridge - Installation","data":{"":"Welcome to the it_bridge installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.","asset-download#Asset download":"You can get the lates version of the it_bridge script fo free on our tebex store if you want to update the script you have to visit your keymaster.\nIf you have downloaded the script from another site, there is no guarantee that the script will actually work. Please download it again from the the Cfx.re Portal.","asset-dependencies#Asset dependencies":"Dependencies\tLinks\tox_lib\thttps://github.com/overextended/ox_lib/releases\t\nIf you have not installed the dependencies, you will not be able to use the asset correctly, please install them before continuing with the installation.","asset-positioning#Asset positioning":"Correctly position the assets by following this step, if something goes wrong you will probably get errors about exports not found, do not skip this step.\nWhen you have downloaded the asset, you will have a folder with the name of the asset, inside you will find to seperate folders, each folder is on asset.We recommend to create a folder with the name [it-scripts] in your resources folder, and then move the asset folders inside the [it-scripts] folder.After you added both assets you have to add the it_bridge resource to your server.cfg file.\nIn your server.cfg file you have to add the it_bridge resource after any script the bridge needs to work for most servers that will be\nYour Framework\nYour Inventory Script\nYour Notification Script (If you have one on your server)\nYour TextUI Script (If you have one on your server)\nYour Target Script (If you have one on your server)\nYour Disptach Script (If you have one on your server)\nox_lib\nExample:\n-- First we will start the Database\nensure oxmysql\n-- Then we will start the cores, never below\nensure es_extended or qb-core\n-- Your inventory system, always on top\nensure inventory\n--Then we start all the dependencies\nensure ox_lib\n-- Then you need to start all system you selected in the config file\n-- Now you can start the it_bridge script\nensure it_bridge\n-- After that you can start any other it script you want to use\nDo not add the bridge_tester resource to your server.cfg file, this resource is only for testing purposes and should not be used on a live server."}},"/it_bridge/test":{"title":"it_bridge - How to test?","data":{"":"Welcome to the it_bridge test guide, where you can learn how to completely test the our asset on your server, following each step we will achieve a clean and fluid test where you will find any problems with the bridge on your server, as long as the documentation has been completed.\nBefore you start testing the script, make sure that you have followed the installation guide and that the script is correctly installed on your server.","configuration-of-the-script#Configuration of the script":"First you have to configure the it_bridge script, you can do this in the config.lua file.\nOn most servers you can leave the default settings, but if you want to change something you can do this.","start-the-it_bridge-script#Start the it_bridge script":"After you have configured the script, you can start the script on your server.\nIf you followed the install guide correctly, the script should start aumaotically when you start your server.\nIf the script does not start automatically, you can start it manually with the following command in your txAdmin Console:\nstart it_bridge\nAfter starting the script, you should see a message in your server console after a few seconds, that the script has started successfully.\nThe script will also tell you which settings are currently active. Please make sure these settings are correct.Example Message:","start-the-bridge_tester-script#Start the bridge_tester script":"After you started the it_bridge script, you can start the bridge_tester script.\nThis script is used to test the it_bridge script and to make sure that everything is working correctly.\nYou can start the bridge_tester script with the following command in your txAdmin console:\nstart bridge_tester","test-the-script#Test the script":"After you have started the bridge_tester script, you can test the it_bridge script.","1-test-your-framework#1. Test your Framework":"To test if the it_brige script is working correctly, with your framework, you can use the following command in your txAdmin console:\nbridgeTestFramework id money bank blackMoney\nid: The player ID you want to test the script with.\nmoney: The amount of money (cash) the player currently has.\nbank: The amount of money the player currently has in the bank.\nblackMoney: The amount of black money the player currently has.\nIf you are using qb-core, qbx_core as your framework set the amount for blackMoney to the amount of crypto the player has.\nIf you are using ND_Core set the amount for blackMoney to 0.\nAfter you issued the command, you should see some messages in your server console,\nthe script will automatically test the it_bridge script with the given values.The script will print the result of every test in the server console.\nIf you encounter any errors, please report them in the Discord.","example-input#Example input":"bridgeTestFramework 1 1000 500 0","example-output#Example output":"","2-test-your-inventory-script#2. Test your Inventory Script":"To test if the it_bridge script is working correctly with your inventory script, you can use the following command in your txAdmin console:\nbridgeTestInventory id item\nid: The player ID you want to test the script with.\nitem: The item you want to test the script with.\nFor the item parameter, you can use any item that is in your inventory except for the money items.\nAfter you issued the command, you should see some messages in your server console,\nthe script will automatically test the it_bridge script with the given values.The script will print the result of every test in the server console.\nIf you encounter any errors, please report them in the Discord.","example-input-1#Example input":"bridgeTestInventory 1 bread","example-output-1#Example output":"","3-test-your-notification-script#3. Test your Notification Script":"To test if the it_bridge script is working correctly with your notification script, you can use the following command in your txAdmin console:\nbridgeTestNotify id\nid: The player ID you want to test the script with.\nAfter you issued the command, the targeted player should receive 4 notifications (every notification type for 5 Seconds) on the screen.If the player does not receive the notifications, please report this in the Discord.","example-input-2#Example input":"bridgeTestNotify 1","4-test-your-textui-script#4. Test your TextUI Script":"To test if the it_bridge script is working correctly with your TextUI script, you can use the following command in your txAdmin console:\nbridgeTestTextUI id\nid: The player ID you want to test the script with.\nAfter you issued the command, the targeted player should receive a TextUI on the screen. On some TextUI scripts, you will recive TextUIs with a different design and on others you will recive a TextUI with the default design.\nThis is normal and should not be a problem.If the player does not receive the TextUI, please report this in the Discord.","example-input-3#Example input":"bridgeTestTextUI 1","5-test-your-menu-script#5. Test your Menu Script":"Before testing the Menu, please make sure you have tested the Notification script.\nTo test if the it_bridge script is working correctly with your Menu script, you can use the following command in your txAdmin console:\nbridgeTestMenu id\nid: The player ID you want to test the script with.\nAfter you issued the command, the targeted player should receive a Menu on the screen. If you press any button on the menu, the script will show a notification.If the player does not receive the Menu, please report this in the Discord.","6-test-your-target-script#6. Test your Target Script":"To test your Target script, you need more than one command to test it, because you have to test every target type separately.\nTo test if the it_bridge script is working correctly with your Target script, you can use the following commands in your txAdmin console:\nbridgeBoxZone id\nid: The player ID you want to test the script with.\nAfter you issued the command, in front of the targeted player should appear a prop with a box zone around. If the player tries to target the zone there should be two options.\nThe prop and the box zone should disappear after 15 seconds.\nbridgeTargetEntity id\nid: The player ID you want to test the script with.\nAfter you issued the command, in front of the targeted player should appear a prop. If the player tries to target the entity there should be two options.\nThe prop should disappear after 15 seconds.\nbridgeGlobalPedTest id\nid: The player ID you want to test the script with.\nAfter you issued the command, the targeted player should have two target options on every ped in the server. The script will not spawn a ped!\nAfter 15 seconds the target options should disappear.\nbridgeGlobalVehicle id\nid: The player ID you want to test the script with.\nAfter you issued the command, the targeted player should have two target options on every vehicle in the server. The script will not spawn a vehicle!\nAfter 15 seconds the target options should disappear.\nbridgeGlobalPlayer id\nid: The player ID you want to test the script with.\nTo test the globalPlayer command there should be at least one other player in the server.\nAfter you issued the command, the targeted player should have two target options on every player in the server.\nAfter 15 seconds the target options should disappear.\nbridgeModel id\nid: The player ID you want to test the script with.\nAfter you issued the command, in front of the targeted player should appear a prop. If the player tries to target the prop there should be two options.\nThe prop should disappear after 15 seconds.If there any problems with the target script, please report this in the Discord.","report-your-results#Report your results":"After you have tested the it_bridge script, you should report your results in the Discord.\nPlease report your results regardless of whether there were errors or not, this will help us to improve the script and to fix any errors that may occur.For reporting, please join the Discord and go to the 📑・tickets channel and open a Bridge Results Ticket.\nIn this ticket, please provide the following information:\nImage of the startup message of the it_bridge script.\nResults of the tests.\nIf you do not have any errors you can just send a short message like No errors found!\nIf you have any errors, please provide the error message and a description of what you did before the error occurred. And an image of you txAdmin and F8 Console.","stop-the-bridge_tester-script#Stop the bridge_tester script":"After you have tested the it_bridge script, you can stop the bridge_tester script with the following command in your txAdmin console:\nstop bridge_tester"}},"/updating-your-assests":{"title":"it-scripts - Updating your assets","data":{"":"When updating your assets, make sure to always replace the fxmanifest.lua file\nand if the script is from github also replace the version file\nto make sure the version checker works properly.","staying-updated#Staying Updated":"Join our Discord community to access changelogs. These logs provide details about recent updates, fixes, and new features for your assets.","avoiding-update-errors#Avoiding update errors":"If you experience errors after updating, it’s often better to re-download and replace the entire asset.\nRemember to make a backup of your old files before doing this, as partial updates or incorrectly applied patches can break multiple parts of the asset.","full-replacement#Full Replacement":"If errors occur after an update, it’s best to re-download and replace the entire asset rather than attempting partial updates.","backup-your-files#Backup Your Files":"Always make a backup of your old files before replacing them. This ensures you can revert to a working version if needed.","where-to-find-updates#Where to find updates":"In our Discord community, you can find all changelogs and download patches as needed.\nSimply log in to Keymaster and re-download the updated version of the asset or get it from GitHub.","discord-community#Discord Community":"Join our Discord community to access changelogs and download patches as needed.","keymaster#Keymaster":"Log in to Keymaster and re-download the updated version of the asset.","github#GitHub":"Download the updated version of the asset from GitHub."}},"/before-you-start/how-to-update-my-server":{"title":"it-scripts - How to update my server","data":{"":"To ensure your FiveM server runs smoothly and avoids critical issues, it’s essential to keep your framework, artifacts, and gamebuild up to date. Here's a detailed guide:","framework#Framework":"Your server framework is the most important thing, we will always recommend the great ESX, but here is a small guide on how to update it correctly.","artifacts#Artifacts":"Artifacts are everything on our server, they are the brain of it.","gamebuild#Gamebuild":"The gamebuild is the version of the game or DLC that we will run, we always recommend the latest version.","framework-update#Framework Update":"Updating your framework is a crucial step before proceeding with artifacts and gamebuild updates. Follow these steps carefully:","download-the-official-framework#Download the Official Framework":"For es_extebded (ESX), visit the official ESX GitHub repository\nFor QBCore, visit the official QBCore GitHub repository\nFor Obox Framework, visit the official Obox GitHub repository\nFor ND_Core, visit the official ND_Core GitHub repository","replace-your-current-framework-folder#Replace Your Current Framework Folder":"Completely remove your existing framework folder and replace it with the latest version from GitHub. Avoid merging files as this may cause unexpected issues.","do-not-rename-the-framework-folder#Do Not Rename the Framework Folder":"Keep the folder name exactly as provided by the official repository (e.g., qb-core or es_extended).\nRenaming it can lead to severe compatibility problems with scripts, as they rely on specific folder names for proper integration.\nRenaming your framework does not make it \"custom\"—it makes it dysfunctional.","update-artifacts#Update Artifacts":"Artifacts are the core files needed to run your server. Keeping them updated is essential for compatibility with the latest FiveM features.","remove-old-artifacts#Remove Old Artifacts":"Delete the current artifacts folder from your server directory. This ensures that no outdated files remain that could cause conflicts.","download-latest-artifacts#Download Latest Artifacts":"Get the latest version of artifacts for your operating system from the official FiveM links:\nWindows Artifacts\nLinux Artifacts","extract-and-replace#Extract and Replace":"Extract the downloaded artifacts and replace your old artifacts folder completely.","update-gamebuild#Update Gamebuild":"Updating the gamebuild is the final step in ensuring your server is running the latest version of FiveM. Follow these steps:","open-your-servercfg-file#Open Your server.cfg File":"Find the server.cfg file in your server directory. This file contains all the configuration settings for your server.","edit-your-server-configuration#Edit Your Server Configuration":"Open the server.cfg file in a text editor and locate the line that specifies the gamebuild. It should look something like this:\nset sv_enforceGameBuild \"3258\"\nReplace the number with the latest gamebuild version. You can find the latest gamebuild version on the official FiveM website.","why-is-this-important#Why Is This Important?":"Keeping your framework, artifacts, and gamebuild updated ensures your server is compatible with the latest scripts and features.\nNot updating can lead to crashes, bugs, or incomplete functionality.\nAvoid renaming folders or using unofficial versions of frameworks, as this often causes critical errors.\nBy following these steps, you ensure a stable, well-functioning server that minimizes common issues."}},"/understanding-cfx-auth":{"title":"it-scripts - Understanding CFX Auth","data":{"":"The FiveM asset escrow system secures assets by encrypting critical files, ensuring that exclusive it-scripts assets are protected against unauthorized use or modification.\nBelow is a detailed guide to common errors and solutions, with titled sections for clarity.","failed-to-verify-protected-resource#Failed to Verify Protected Resource":"This error usually means the files where corrupted during transfer.","error#Error":"Failed to verify protected resource (it_resourceName).","cause#Cause":"Files were corrupted during transfer.","solution#Solution":"Ensure all files, including .fxap, are uploaded correctly.\nUse WinSCP instead of FileZilla for transferring files, as FileZilla might skip encrypted components.","failed-to-verify-protected-resource-1#Failed to Verify Protected Resource":"This error occurs when your server license key is not linked to the account that purchased the asset.","error-1#Error":"You lack the required entitlement to use it_resourceName.","cause-1#Cause":"The server license key is not linked to the account that purchased the asset.","solution-1#Solution":"Ensure the server license key is linked to the account that purchased the asset.\nRestart your server after installation to apply any changes.","syntax-errors#Syntax Errors":"This error can be caused by several factors:","error-2#Error":"Syntax error <\\/1> or similar issues.","cause-2#Cause":"Outdated artifacts or attempts to edit encrypted code.","solution-2#Solution":"Update to artifact version 4960 or newer.\nDo not attempt to edit encrypted code, as it will lead to syntax errors.\nRestart your server after installation to apply any changes.","recommendations#Recommendations":"","use-the-latest-artifacts#Use the Latest Artifacts":"Always run artifact version 4960 or newer to avoid compatibility issues with the CFX Auth system.","use-reliable-file-transfer-tools#Use Reliable File Transfer Tools":"Switch to WinSCP for transferring files to avoid corruption. FileZilla may skip encrypted components, leading to errors.","avoide-editing-encrypted-code#Avoide Editing Encrypted Code":"Never attempt to edit encrypted code. This will lead to syntax errors and other issues. If you need to make changes, contact the asset developer for assistance.","restart-your-server-regularly#Restart Your Server Regularly":"After installing or updating assets, always restart your server to apply changes and ensure everything is functioning correctly."}}}