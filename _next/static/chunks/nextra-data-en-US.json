{"/fivem-escrow-system":{"title":"FiveM Escrow System","data":{"":"Remember that here we will mention all the errors that you may have using this system, please read each one to find your problem and solve it quickly.\nFiveM Escrow is the asset protection system that FiveM provides to all content creators on the platform, which will encrypt most of the purchased assets for super powerful protection. This system evades all types of dump or current bypass and will protect your exclusive and beloved Quasar Store asset.","failed-to-verify-protected-resource-it-resourcename#Failed to verify protected resource it-resourceName":"Failed to verify protected resource it-resourceName\nEnsure the encrypted files are copied; the .fxap file must be included. Some FTP programs skip these files. If you use FileZilla, try using WinSCP instead.","you-lack-the-required-entitlement-to-use-it-resourcename#You lack the required entitlement to use it-resourceName":"Your server is using a FiveM server license key that is not linked to the initial purchase, meaning the resource(s) were purchased on the wrong FiveM account.\nIt could also be that you installed the asset without having restarted your server previously, restart the server to verify that this is not the case.","syntax-error-1-or-similar#Syntax error </1> or similar":"The problem can be caused by several factors. Maybe you do not have the artifact version higher than +4960, be sure to use that artifact version or higher. You can get your latest Linux or Windows artifacts here.\nAnother factor could be that you have edited encrypted code which you should not do or simply that you did not restart the server after installing this asset, try to resolve it with these two more options."}},"/how-to-update":{"title":"How to update your asset","data":{"":"Welcome to our asses documentation, befor starting we would like to give you brief introduction about this project.\nTo get real-time updates, we recommend being in our Discord community and having claimed your roles to view the changelogs."}},"/":{"title":"it-scripts Documentation","data":{"":"Welcome to our asses documentation, befor starting we would like to give you brief introduction about this project.\nThis page is currently in development. All it-scripts Script's Documentation will be displayed in here soon.","about-us#About us":"IT-Scripts is a dynamic project established in 2024 we were former known as Inseltreff (some small german FiveM Rp Server). But now were are dedicated to developing high-quality scripts and assets for the FiveM platform. Our offerings include a range of free and premium products, designed to enhance the gaming experience for FiveM users.Whether you're running a small server or a large community, it-Scripts provides the resources you need to create an engaging and immersive environment for your players.","support-us#Support us":"We enjoy being able to create and share free and open-source work, but they often require considerable time and effort to maintain and support.\nIf you frequently use one of  our free resources and love what we do, consider supporting us so we can continue our work.","important-links#Important Links":"üóÇÔ∏è | GitHub\nüìñ | Documentation\nüîó | Discord Invite\nüõí | Tebex Shop (Coming Soon)"}},"/it-crafting":{"title":"it-crafting","data":{"":"it-crafting is a lightweight crafting system for FiveM servers. Originally used as a part of the it-drugs script it has been separated into its own resource to allow for more customization and flexibility. The script comes with a fully configurable crafting system that allows players to craft items using raw materials. The script is easy to install and configure, making it a great addition to any FiveM server.","supported-frameworks#Supported Frameworks":"‚úÖ | ESX\n‚úÖ | QbCore\n‚úÖ | QBox","suported-inventorys#Suported Inventorys":"‚úÖ | esx_inventory\n‚úÖ | qb_inventory\n‚úÖ | ox_inventory\n‚úÖ | qs_inventory\n‚úÖ | mInventory\n‚úÖ | Supported üîß | Pending ‚ùå | Not Supported","dependencys#Dependencys":"‚öôÔ∏è | ox_lib\n‚öôÔ∏è | oxmysql\n‚öôÔ∏è | ox_target *\n‚öôÔ∏è | qb-target * (The script currently does not work with qb-target)\nOptional","--fixed-possitions#üìç | Fixed Possitions":"Our script offers fixed crafting positions that allow players to craft items at specific locations.\nPlayers can interact with these positions to access the crafting menu and create new items.\nThe fixed positions make it easy for players to find the crafting locations and create items without any hassle. The positions can be configured in the config file, allowing server admins to customize the crafting experience to fit their unique needs.","--crafting-tables#üî® | Crafting Tables":"Our script features crafting tables that allow players to transform raw materials into high-value items. Players can use these tables to craft items themselves, adding a layer of complexity to the crafting system. The Tables can be placed anywhere on the map, making it easy for players to craft their materials and create new items. Every table can be configured in the config file, allowing server admins to customize the experience to fit their unique needs.","--ingame-admin-menu#üìä | Ingame Admin Menu":"Our script features an ingame admin menu that allows server admins to manage drugs and tables. Admins can use the menu view and manage all drugs and tables on the server, making it easy to keep track of everything. The admin menu can be accessed by typing /crafting in the chat.","--fully-configurable#üîß | Fully Configurable":"Our script is fully configurable, allowing server admins to customize every aspect to fit their unique needs. The config file contains a wide range of options that can be adjusted to change the crafting system's behavior. Server admins can configure the crafting tables, crafting positions, crafting recipes, and more, making it easy to create a unique experience for players.","documentation#Documentation":"","comming-soon#Comming soon":"Legal Notices\nit-crafting (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it-crafting/adjustments/crafting-points":{"title":"it-crafting - Crafting Points","data":{"":"So let's start setting up the crafting points. Crafting points are static points where the player can craft items.","configcraftingpoints#Config.CraftingPoints":"The individual processing points can now be configured here:\n['crafting_point_one'] = {\n        zone = vector3(2.0, 1.0, 2.0),\n        label = 'Crafting Point', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }\n['crafting_point_one']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\ntarget = {\n    size = vector3(3.5, 1.0, 1.0),\n    rotation = 0.0,\n    drawSprite = true,\n    interactDistance = 1.5,\n},\nAs soon as the player places the table, the script will create a zone around the table. The zone is used to interact with the table.\nHere you can change some settings for the target zone.\nsize * - The size of the target zone. The first value is the width, the second value is the length, and the third value is the height of the zone.\nrotation * - The rotation of the target zone. The value is in degrees. If you dont want to use this you can remove it.\ndrawSprite * - If set to true, a sprite will be displayed at the target zone. If set to false, no sprite will be displayed.\ninteractDistance * - The distance at which the player can interact with the table.\n* All these values are optional and can be removed if you dont want to use them. But please do not remove the target table.\nIf you are using a model the script will automatically set the size and rotation of the target zone.\nSo you dont need to set the size and rotation if you are using a model. You can just keep the default values.In some cases the rotation of the target zone is not correct. In this case you can set the rotation manually.\nmodel = 'v_res_tre_table2'\nThe model of the processing table here can theoretically be used with any Fivem model.\nYou also can set the model to nil if you dont want to use a model.\nThen the script will only create a zone at the position.\nrestricCrafting = {\n    ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n    ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n    ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n    ['jobs'] = {}\n},\nonlyOnePlayer - As the name suggests, only one player can use the table at a time.\nonlyOwnerCraft - Only the owner of the table can use the table.\nonlyOwnerRemove - Only the owner of the table can remove the table.\njobs - Jobs that can use the table.\nIf you want to allow all jobs to use the table, you can leave the table empty.\nIf you want to add a job, you can add the job name to the table like this: ['police'] = true. Now only the police can use the table.\nYou also hove the option to add a job with a specific grade like this: ['police'] = {1, 2}. Now only the police with the grade 1 and 2 can use the table.\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Point',\n},\nThe blip of the point can be set here.\nIf set to true, the blip will be displayed on the map to all players.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\n    ['simple_crafting_point'] = {\n        target = {\n            size = vector3(1.0, 1.0, 1.0),\n            rotation = 0.0,\n            drawSprite = true,\n            interactDistance = 1.5,\n        },\n        label = 'Weed Processing Table', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-crafting/adjustments/crafting-tables":{"title":"it-crafting - Crafting Tables","data":{"":"So let's start setting up the crafting tables.","configcraftingtables#Config.CraftingTables":"The individual processing tables can now be configured here:\n['simple_crafting_table'] = {\n        zone = vector3(2.0, 1.0, 2.0),\n        label = 'Weed Processing Table', -- Label for the table\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }\n['simple_crafting_table']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\ntarget = {\n    size = vector3(3.5, 1.0, 1.0),\n    rotation = 0.0,\n    drawSprite = true,\n    interactDistance = 1.5,\n},\nAs soon as the player places the table, the script will create a zone around the table. The zone is used to interact with the table.\nHere you can change some settings for the target zone.\nsize * - The size of the target zone. The first value is the width, the second value is the length, and the third value is the height of the zone.\nrotation * - The rotation of the target zone. The value is in degrees. If you dont want to use this you can remove it.\ndrawSprite * - If set to true, a sprite will be displayed at the target zone. If set to false, no sprite will be displayed.\ninteractDistance * - The distance at which the player can interact with the table.\n* All these values are optional and can be removed if you dont want to use them. But please do not remove the target table.\nIf you are using a model the script will automatically set the size and rotation of the target zone.\nSo you dont need to set the size and rotation if you are using a model. You can just keep the default values.In some cases the rotation of the target zone is not correct. In this case you can set the rotation manually.\nmodel = 'v_res_tre_table2'\nThe model of the processing table here can theoretically be used with any Fivem model.\nrestricCrafting = {\n    ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n    ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n    ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n    ['zones'] = {}, -- Zones where the table can be used\n    ['jobs'] = {}\n},\nonlyOnePlayer - As the name suggests, only one player can use the table at a time.\nonlyOwnerCraft - Only the owner of the table can use the table.\nonlyOwnerRemove - Only the owner of the table can remove the table.\nzones - Zones where the table can be used.\nThe zones can be defined in the Config.Zones table.\nIf you want to use the table everywhere, you can leave the table empty.\nIf you want to add a zone, you can add the zone name to the table like this: {'crafting_zone_one'}. Now the table can only be used in this zone.\njobs - Jobs that can use the table.\nIf you want to allow all jobs to use the table, you can leave the table empty.\nIf you want to add a job, you can add the job name to the table like this: ['police'] = true. Now only the police can use the table.\nYou also hove the option to add a job with a specific grade like this: ['police'] = {1, 2}. Now only the police with the grade 1 and 2 can use the table.\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Table',\n},\nThe blip fie zone can be set here.\nIf set to true, the blip will be displayed on the map as soon as the table is placed.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\nIf you use the ox_inventory, please use the following template to add the tables to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 1000,\n\t\tstack = false,\n\t\tclose = true,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.placeCraftingTable\",\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n    ['simple_crafting_table'] = {\n        label = 'Simple Crafting Table', -- Label for the table\n        target = {\n            size = vector3(1.0, 1.0, 1.0),\n            rotation = 0.0,\n            drawSprite = true,\n            interactDistance = 1.5,\n        },\n        model = 'v_res_tre_table2', -- Exanples: freeze_it-scripts_empty_table, freeze_it-scripts_weed_table, freeze_it-scripts_coke_table, freeze_it-scripts_meth_table\n        restricCrafting = {\n            ['onlyOnePlayer'] = true, -- Only one player can use the table at a time\n            ['onlyOwnerCraft'] = false, -- Only the owner of the table can use it\n            ['onlyOwnerRemove'] = true, -- Only the owner of the table can remove it\n            ['zones'] = {}, -- Zones where the table can be used\n            ['jobs'] = {}\n        },\n        blip = {\n            display = true, -- Display blip on map\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Table',\n        },\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-crafting/adjustments/recipes":{"title":"it-crafting - Recipes","data":{"":"Now we can look at the configuration of the individual recipes. YOu can add as many recipes as you want.","configrecipes#Config.Recipes":"['lockpick'] = {\n    label = 'Lockpick',\n    ingrediants = {\n        ['scrapmetal'] = {amount = 3, remove = true},\n        ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n    },\n    outputs = {\n        ['lockpick'] = 2\n    },\n    processTime = 15,\n    failChance = 15,\n    showIngrediants = false,\n    animation = {\n        dict = 'anim@amb@drug_processors@coke@female_a@idles',\n        anim = 'idle_a',\n    },\n    skillCheck = {\n        enabled = true,\n        difficulty = {'easy', 'easy', 'medium', 'easy'},\n        keys = {'w', 'a', 's', 'd'}\n    }\n},\n['lockpick']\nThis is the must be a unique identifier for the recipe. The identifier must not contain any special characters or spaces.\nThe identifier is only relevant for the script.\nlabel = 'Lockpick'\nThe label of the recipe, this is used to display the name of the recipe in all menus. The can contain special characters and spaces.\ningrediants = {\n    ['scrapmetal'] = {amount = 3, remove = true},\n    ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n},\nThis is the list of all ingredients that are required to craft the item. The key is the item name and the value is a table with the amount and if the item should be removed after crafting.\namount The amount of the item that is required to craft the item.\nremove If the item should be removed after crafting.\noutputs = {\n    ['lockpick'] = 2\n},\nThis is the list of all items that are created after the crafting process. The key is the item name and the value is the amount of the item that is created.\nprocessTime = 15,\nThe time in seconds that is required to craft the item. If you dont use the skill check, the player has to wait this time to craft the item.\nfailChance = 15,\nThe chance in percent that the crafting process fails. If the crafting process fails, the player looses the items and has to start the crafting process again.\nshowIngrediants = false,\nIf this is set to true, the player can see the ingredients that are required to craft the item.\nanimation = {\n    dict = 'anim@amb@drug_processors@coke@female_a@idles',\n    anim = 'idle_a',\n},\nThe animation that is played while the player is crafting the item. The dict is the animation dictionary and the anim is the animation name.#\nskillCheck = {\n    enabled = true,\n    difficulty = {'easy', 'easy', 'medium', 'easy'},\n    keys = {'w', 'a', 's', 'd'}\n}\nIf enabled is set to true, the player has to pass a skill check to craft the item. The difficulty is the difficulty of the skill check and the keys are the keys that the player has to press to pass the skill check.\ndifficulty The difficulty of the skill check. The difficulty can be easy, medium or hard.\nkeys The keys that the player has to press to pass the skill check. The keys can be w, a, s or d.\nIf the skill check is deactivated, the player only has to wait a certain amount of time and then receives the item.More information about the skill check can be found here:\n    ['your_uniqe_id'] = {\n        label = 'Your Label',\n        ingrediants = {\n            -- Here you can add as many ingredients as you want\n        },\n        outputs = {\n            -- Here you can add as many outputs as you want\n        },\n        processTime = 15,\n        failChance = 15,\n        showIngrediants = true,\n        animation = {\n            dict = 'anim@amb@drug_processors@coke@female_a@idles',\n            anim = 'idle_a',\n        },\n        skillCheck = {\n            enabled = false,\n            difficulty = {'easy', 'easy', 'medium', 'easy'},\n            keys = {'w', 'a', 's', 'd'}\n        }\n    },"}},"/it-crafting/adjustments/zones":{"title":"it-crafting - Zones","data":{"":"First, let's take a look at zone management.\nHere, it is possible to create zones that can have an effect on the growth speed of certain plants.","configzones#Config.Zones":"The individual zones can be created and edited here.\nWe will now take a closer look at one zone and explain what the individual values mean and what they change.\nConfig.Zones = {\n    ['crafting_zone_one'] = { -- Zone id (Musst be unique)\n        points = {\n            vec3(2031.0, 4853.0, 43.0),\n            vec3(2007.0, 4877.0, 43.0),\n            vec3(1981.0, 4903.0, 43.0),\n            vec3(2006.0, 4929.0, 43.0),\n            vec3(2032.0, 4903.0, 43.0),\n            vec3(2057.0, 4878.0, 43.0),\n        },\n        thickness = 4.0,\n        \n        blip = {\n            display = true, -- Display blip on map\n            scale = 1.0, -- Blip scale\n            sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n            displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n            displayText = 'Crafting Zone',\n        },\n    },\n}\n['crafting_zone_one']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script.\nThe zone id must not contain any special characters or spaces and must be unique.\npoints = {\n    vec3(2031.0, 4853.0, 43.0),\n    vec3(2007.0, 4877.0, 43.0),\n    vec3(1981.0, 4903.0, 43.0),\n    vec3(2006.0, 4929.0, 43.0),\n    vec3(2032.0, 4903.0, 43.0),\n    vec3(2057.0, 4878.0, 43.0),\n},\nthickness = 4.0,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone.\nA straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:\nblip = {\n    display = true, -- Display blip on map\n    scale = 1.0, -- Blip scale\n    sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Crafting Zone',\n},\nThe blip fie zone can be set here.\nThe blip is always displayed in the middle of the zone.If you want to create the zones more easily please take a look at the following guide:\n  ['uniqe_zone_name'] = { -- Zone id (No Spaces)\n    coords = {\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        -- You can add as many vector3 as you want\n    },\n    thickness = 4.0,\n    \n    blip = {\n        display = true, -- Display blip on map\n        scale = 1.0, -- Blip scale\n        sprite = 446, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Crafting Zone',\n    },\n  },"}},"/it-crafting/common-errors":{"title":"it-drugs - Common Errors","data":{"":"Here you will find common errors and their solutions. If you have any further questions, please feel free to ask in the Discord.Seems like there are no errors yet. üéâ"}},"/it-crafting/config-preview":{"title":"it-crafting - Config Preview","data":{"":"Here you can find the full configuration of the it-crafting script."}},"/it-crafting/tipps-and-tricks/easy-zone-creation":{"title":"it-crafting - Easy Zone Creation","data":{"":"To create a new zone you now can use the /zone poly command from ox_lib.\nMake sure you use /zone poly if not you will get the zone in a wrong format at the end and cannot add it to the config.\nAfter you have used the command, the following menu should open:You can now simply walk through the zone in-game and set points yourself.\nAs soon as you have finished creating the zone, press [ENTER]. The following menu will now open:Now you can give the zone a name and select the format.\nYOU MUST SELECT ARRAY FOR FORMAT OTHERWISE THE ZONE WILL NOT HAVE THE CORRECT FORMAT AND CANNOT BE INSERTED INTO THE SCRIPT.\nZones will be saved to ox_lib/created_zones.lua with your chosen format an will look like this:\n{\n    name = poly,\n    points = {\n        vec(447.9, -998.8, 25.8),\n        vec(450.3, -998.2, 25.8),\n        vec(449.9, -995.5, 25.8),\n        vec(447.2, -995.6, 25.8),\n        vec(446.3, -997.9, 25.8),\n    },\n    thickness = 2,\n},\nYou can now simply copy the points and thickness and paste them into one of the zones in the config of it-crafting."}},"/it-crafting/tipps-and-tricks/additional-recipe-settings":{"title":"it-drugs - Recipe Settings","data":{"add-custom-animation#Add custom animation":"If you do not want to use the normal animation for a recipe in a recipe, you can also easily change this via the Config","get-your-animation#Get your animation":"A good resource to find animation is:","add-the-animation-to-the-config#Add the animation to the Config":"Add the following code to the recipe you want to change the animation for:\nanimation = {\n    dict = 'you animation dict', -- Animation dict\n    anim = 'your animation name', -- Animation name\n}\nExample:\nanimation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@', -- Animation dict\n    anim = 'player_search', -- Animation name\n}\n['lockpick'] = {\n    label = 'Lockpick',\n    ingrediants = {\n        ['scrapmetal'] = {amount = 3, remove = true},\n        ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n    },\n    outputs = {\n        ['lockpick'] = 2\n    },\n    processTime = 15,\n    failChance = 15,\n    showIngrediants = false,\n    animation = {\n        dict = 'anim@amb@drug_processors@coke@female_a@idles',\n        anim = 'idle_a',\n    },\n    skillCheck = {\n        enabled = true,\n        difficulty = {'easy', 'easy', 'medium', 'easy'},\n        keys = {'w', 'a', 's', 'd'}\n    }\n},","add-particles#Add particles":"This feature is not fully implemented and tested yet and may not work as expected.\nThis features allows you to add particles to your recipes. This can be used to make the recipe more interactive.","get-your-particle#Get your particle":"A good resource to find particles is:","add-the-particle-to-the-config#Add the particle to the Config":"Add the following code to the recipe you want to add the particle to:\n    particlefx = {\n        dict = 'your dict name',\n        particle = 'your particle name',\n        color = {r = 255, g = 255, b = 255},\n        offset = {x = 0.0, y = 0, z = 0},\n        scale = 0.5,\n    },\ncolor = {r = 255, g = 255, b = 255},\nThe color of the particle, each value can be between 0 and 255 and represents the RGB color space.\noffset = {x = 0.0, y = 0, z = 0},\nThe offset of the particle, this can be used to move the particle to a different position.\nDue to the fact that some particles are not centered, it is recommended to play around with the values.\nIf you are using the default table props provided by the script, you can use the following values:\noffset = {x = 0.0, y = -1.5, z = 1.0},\nscale = 0.5,\nThe scale of the particle, this can be used to make the particle bigger or smaller.\n['lockpick'] = {\n        label = 'Lockpick',\n        ingrediants = {\n            ['scrapmetal'] = {amount = 3, remove = true},\n            ['WEAPON_HAMMER'] = {amount = 1, remove = false}\n        },\n        outputs = {\n            ['lockpick'] = 2\n        },\n        processTime = 15,\n        failChance = 15,\n        showIngrediants = false,\n        particlefx = {\n            dict = 'core',\n            particle = 'ent_amb_torch_fire',\n            color = {r = 255, g = 255, b = 255},\n            offset = {x = 0.0, y = -1.5, z = 1.0},\n            scale = 0.5,\n        },\n        skillCheck = {\n            enabled = true,\n            difficulty = {'easy', 'easy', 'medium', 'easy'},\n            keys = {'w', 'a', 's', 'd'}\n        }\n    },"}},"/it-crafting/installation":{"title":"it-crafting - Installation","data":{"":"Welcome to the it-crafting installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.\nWhen installing the script make sure to not rename the script folder, this can cause errors in the script. The name of the script folder should always be it-crafting.","asset-download#Asset download":"You can download the latest version of the script for free on the it-script GitHub Account.\nIf you have downloaded the script from another site, there is no guarantee that the script will actually work. Please download it again from the it-scripts GitHub page.\nIf you have paid money for this script, it is a SCAM. The it-crafting script is and will always remain free. Please report the page to us on the Discord server.","asset-dependencies#Asset dependencies":"Dependencies\tLinks\tox_lib\thttps://github.com/overextended/ox_lib/releases\toxmysql\thttps://github.com/overextended/oxmysql\tTarget System\t\tESX (ox_target)\thttps://github.com/overextended/ox_target\tQbCore (qb-target)\thttps://github.com/qbcore-framework/qb-target (Currently not supported!)\t\nYou can also use ox_target on your QbCore Server but only if you are using ox_target with version 1.16.0 or older!","asset-positioning#Asset positioning":"Correctly position the assets by following this step, if something goes wrong you will probably get errors about exports not found, do not skip this step.\nFor the execution of this asset, we will respect the respective order mentioned below.\n-- First we will start the Database\nensure oxmysql\n-- Then we will start the cores, never below\nensure es_extended or qb-core\n-- Your inventory system, always on top\nensure inventory\n--Then we start all the dependencies\nensure ox_lib\nensure ox_target -- Only if you are using a target system\n-- Run it-crafting here along with its dependencies\nensure it-crafting","database#Database":"Our crafting script includes one database, befor the first start of the script you should check if the tables allready exists in your Database and delete them if they exists.\nIf you just update the script you dont have to do this.\n-- Check for the it_crafting_tables table\nDROP TABLE IF EXISTS `it_crafting_tables`;\nThe Script will automaticly install and update the database but if you want you still can intall the database manually with this commands:\n  -- Install the it_crafting_tables table\n  CREATE TABLE IF NOT EXISTS it_crafting_tables (\n  id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n  coords LONGTEXT NOT NULL,\n  rotation DOUBLE NOT NULL,\n  owner LONGTEXT NOT NULL,\n  type VARCHAR(100) NOT NULL\n  );","items-for-it-crafting#Items for it-crafting":"This guid is only for the scripts default items, but you can add new items after the same shemata.\nIf you use qbcore + ox_inventory, you must add the items inside ox_inventory for the items using to work.\nHere you will find a series of selected items in different extensions for different inventories, select the option that suits your server, remember to check if your inventory works with this script!\nAlso for this script you can use all items on your server to craft items with the crafting table.\nYou can configure everything int the it-crafting config file.\n    INSERT INTO `items` (`name`, `label`, `weight`, `rare`, `can_remove`) VALUES\n  ('scrapmetal', 'Scrap Metal', 500, 0, 1),\n  ('lockpick', 'Lockpick', 100, 0, 1),\n  ('cloth', 'Cloth', 200, 0, 1),\n  ('scissors', 'Scissors', 250, 0, 1),\n  ('bandage', 'Bandage', 50, 0, 1),\n  ('simple_crafting_table', 'Simple Crafting Table', 2000, 0, 1)\n  ;\n  scrapmetal = {\n    name = \"scrapmetal\",\n    label = 'Scrap Metal',\n    weight = 500,          \n    type = 'item',\n    image = \"scrapmetal.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'Scrap Metal'\n  },\n  lockpick = {\n    name = \"lockpick\",\n    label = 'Lockpick',\n    weight = 100,\n    type = 'item',\n    image = \"lockpick.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A tool for picking locks'\n  },\n  cloth = {\n    name = \"cloth\",\n    label = 'Cloth',\n    weight = 200,\n    type = 'item',\n    image = \"cloth.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A piece of cloth'\n  },\n  scissors = {\n    name = \"scissors\",\n    label = 'Scissors',\n    weight = 250,\n    type = 'item',\n    image = \"scissors.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A tool for cutting'\n  },\n  bandage = {\n    name = \"bandage\",\n    label = 'Bandage',\n    weight = 50,\n    type = 'item',\n    image = \"bandage.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'A bandage for wounds'\n  },\n  simple_crafting_table = {\n    name = \"simple_crafting_table\",\n    label = 'Simple Crafting Table',\n    weight = 2000,\n    type = 'item',\n    image = \"simple_crafting_table.png\",\n    unique = true,\n    useable = false,\n    shouldClose = true,\n    combinable = nil,\n    description = 'A simple crafting table'\n  }\n  [\"scrapmetal\"] = {\n  label = \"Scrap Metal\",\n  weight = 500,\n  stack = true,\n  close = false,\n  description = \"Scrap Metal\",\n  client = {\n    image = \"scrapmetal.png\",\n  }\n},\n[\"lockpick\"] = {\n  label = \"Lockpick\",\n  weight = 100,\n  stack = true,\n  close = false,\n  description = \"A tool for picking locks\",\n  client = {\n    image = \"lockpick.png\",\n  }\n},\n[\"cloth\"] = {\n  label = \"Cloth\",\n  weight = 200,\n  stack = true,\n  close = false,\n  description = \"A piece of cloth\",\n  client = {\n    image = \"cloth.png\",\n  }\n},\n[\"scissors\"] = {\n  label = \"Scissors\",\n  weight = 250,\n  stack = true,\n  close = false,\n  description = \"A tool for cutting\",\n  client = {\n    image = \"scissors.png\",\n  }\n},\n[\"bandage\"] = {\n  label = \"Bandage\",\n  weight = 50,\n  stack = true,\n  close = false,\n  description = \"A bandage for wounds\",\n  client = {\n    image = \"bandage.png\",\n  }\n},\n[\"simple_crafting_table\"] = {\n  label = \"Simple Crafting Table\",\n  weight = 2000,\n  stack = false,\n  close = false,\n  description = \"A simple crafting table\",\n  client = {\n    image = \"simple_crafting_table.png\",\n  },\n  server = {\n    export = \"it-crafting.placeCraftingTable\"\n  }\n}\n[\"scrapmetal\"] = {\n  name = \"scrapmetal\",\n  label = \"Scrap Metal\",\n  type = \"item\",\n  weight = 500,\n  unique = false,\n  shouldClose = false,\n  description = \"Scrap Metal\",\n  image = \"scrapmetal.png\",\n},\n[\"lockpick\"] = {\n    name = \"lockpick\",\n    label = \"Lockpick\",\n    type = \"item\",\n    weight = 100,\n    unique = false,\n    shouldClose = false,\n    description = \"A tool for picking locks\",\n    image = \"lockpick.png\",\n},\n[\"cloth\"] = {\n    name = \"cloth\",\n    label = \"Cloth\",\n    type = \"item\",\n    weight = 200,\n    unique = false,\n    shouldClose = false,\n    description = \"A piece of cloth\",\n    image = \"cloth.png\",\n},\n[\"scissors\"] = {\n    name = \"scissors\",\n    label = \"Scissors\",\n    type = \"item\",\n    weight = 250,\n    unique = false,\n    shouldClose = false,\n    description = \"A tool for cutting\",\n    image = \"scissors.png\",\n},\n[\"bandage\"] = {\n    name = \"bandage\",\n    label = \"Bandage\",\n    type = \"item\",\n    weight = 50,\n    unique = false,\n    shouldClose = false,\n    description = \"A bandage for wounds\",\n    image = \"bandage.png\",\n},\n[\"simple_crafting_table\"] = {\n    name = \"simple_crafting_table\",\n    label = \"Simple Crafting Table\",\n    type = \"item\",\n    weight = 2000,\n    unique = true,\n    shouldClose = true,\n    description = \"A simple crafting table\",\n    image = \"simple_crafting_table.png\",\n}\nscrapmetal                  = { name = 'scrapmetal', label = 'Scrap Metal', weight = 500, type = 'item', image = 'scrapmetal.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Scrap Metal' },\nlockpick                    = { name = 'lockpick', label = 'Lockpick', weight = 100, type = 'item', image = 'lockpick.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A tool for picking locks' },\ncloth                       = { name = 'cloth', label = 'Cloth', weight = 200, type = 'item', image = 'cloth.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A piece of cloth' },\nscissors                    = { name = 'scissors', label = 'Scissors', weight = 250, type = 'item', image = 'scissors.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A tool for cutting' },\nbandage                     = { name = 'bandage', label = 'Bandage', weight = 50, type = 'item', image = 'bandage.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A bandage for wounds' },\nsimple_crafting_table       = { name = 'simple_crafting_table', label = 'Simple Crafting Table', weight = 2000, type = 'item', image = 'simple_crafting_table.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'A simple crafting table' }","use-webhooks#Use Webhooks":"You want to log the different actions of the script on your discord server? Then take a look at this.","basic-asset-configuration#Basic asset configuration":"We do not recommend editing frameworks unnecessarily, since almost all assets depend exclusively on your framework and exports on the name of your framework.\nOtherwise and if you edited your framework, read these steps carefully.\nPlease expand each part to see information about the configuration of the asset, this way you will understand the general operation of the asset on the framework and editable files side.\nThe asset will work automatically if your framework is called es_extended or qb-core, it will automatically detect if any of them are started.\nIf your framework is completely modified, both in events and name, you should access the bridge folder to adapt the native events of your framework to the codes you have created.\nIf this step doesn't work, we ask that you ask your framework modifier or trusted developer for help.\nFell free to edit the complete. If you made some changes and think others can use them, feel free to open a pull request on GitHub, and we maybe adapt your changes to the script."}},"/it-crafting/tipps-and-tricks/webhook-setup":{"title":"it-crafting - Webhook Setup","data":{"":"With version 1.3.0 of it-drugs the creation of webhooks is changing. From now on the webhooks are set entirely in the file server/sv_webhooks.\nlocal webhookSettings = {\n    ['active'] = false, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = nil, --'', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIt is now possible to use your own webhook links for the various individual actions of the user.If a valid webhook id is entered and the attribute active is set to true, a webhook message is sent for the corresponding category.\nlocal webhookSettings = {\n    ['active'] = true, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = 'https://discord.com/api/webhooks/**************/*************************', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIn this example now the script only sends webhook messages when a user interacts with a plant.\nPlease note that only messages with in the sell and message area will be sent immediately.\nThe messages for plants and tables are sent every minute all together to prevent Discord from rate limiting your Discord server\nYou don't know how to create Discord webhooks no problem check this article from Discord."}},"/it-drugs":{"title":"it-drugs","data":{"":"it-drugs is a drug script for FiveM, offering a fully immersive and interactive drug economy. With the ability to grow unlimited plants, players can dive deep into cultivation. The script features processing tables for transforming raw materials into high-value drugs, and growth speed zones that add a strategic layer to farming. Selling drugs to NPCs creates a dynamic market environment, enhancing the overall gameplay. Fully configurable, it-drugs allows server admins to customize every aspect to fit their unique needs, making it an essential addition to any FiveM server.","supported-frameworks#Supported Frameworks":"‚úÖ | ESX\n‚úÖ | QbCore\n‚úÖ | QBox\nüîß | ND_Core","suported-inventorys#Suported Inventorys":"‚úÖ | esx_inventory\n‚úÖ | qb_inventory\n‚úÖ | ox_inventory\n‚úÖ | qs_inventory\n‚úÖ | mInventory\nüîß | Origen Inventory\n‚úÖ | Supported üîß | Pending ‚ùå | Not Supported","dependencys#Dependencys":"‚öôÔ∏è | ox_lib\n‚öôÔ∏è | oxmysql\n‚öôÔ∏è | ox_target *\n‚öôÔ∏è | qb-target *\nOptional","--planting#üå± | Planting":"Our script offers a unique planting system that allows players to grow unlimited plants (or a set max amount in the config). With the ability to plant seeds, players can cultivate their own plants and harvest them for raw materials. Our planting system makes the complete map a potential farm, allowing players to grow plants in any location they choose (Soil/Ground check can be enabled in the config). Optional growth speed zones add a strategic layer to farming, making it a fun and engaging experience.","--processing-tables#üß™ | Processing Tables":"Our script features processing tables that allow players to transform raw materials into high-value drugs. Players can use these tables to create drugs themselves, adding a layer of complexity to the drug economy. The Tables can be placed anywhere on the map, making it easy for players to process their materials and create drugs. Every table can be configured in the config file, allowing server admins to customize the experience to fit their unique needs.","--selling-drugs-to-npcs#üí∞ | Selling Drugs to NPCs":"Our script allows players to sell drugs to NPCs, creating a dynamic market environment. Players can sell their drugs to NPCs for a profit, enhancing the overall gameplay. This feature adds a layer of realism to the drug economy, making it a fun and engaging experience for players. The selling prices on selling zones can be configured in the config file.","--takeable-drugs#üö¨ | Takeable Drugs":"Our script offers takeable drugs that players can consume for various effects. Players can take drugs to enhance their gameplay experience, adding a layer of realism to the drug economy. The effects of the drugs can be configured in the config file.","--ingame-admin-menu#üìä | Ingame Admin Menu":"Our script features an ingame admin menu that allows server admins to manage drugs and tables. Admins can use the menu view and manage all drugs and tables on the server, making it easy to keep track of everything. The admin menu can be accessed by typing /drugadmin [plants/tables] in the chat.","--fully-configurable#üîß | Fully Configurable":"Our script is fully configurable, allowing server admins to customize every aspect to fit their unique needs. From growth speed zones to selling prices, every aspect of the script can be configured in the config file.","documentation#Documentation":"Legal Notices\nit-drugs (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it-drugs/adjustments/dealers":{"title":"it-drugs - Dealers","data":{"":"The dealer was added to it-drugs with version v1.2.4 and could sell items, with version v1.3.0 the dealer also got the function to buy items from the player.To be able to use this feature, Config.EnableDealers must be set to true in the Config!","configdrugdealers#Config.DrugDealers":"To be able to use this feature, Config.EnableDealers must be set to true in the Config!\n['seed_dealer'] = { -- Dealer id (Musst be unique)\n    label = 'Seed Dealer', -- Dealer name\n    locations = { -- Dealer will spawn at one of these locations\n        vector4(-462.8489, 1101.5592, 326.6819, 166.9773),\n        vector4(-49.4244, 1903.6714, 194.3613, 95.7213),\n        vector4(2414.2463, 5003.8462, 45.6655, 40.8932),\n    },\n    ped = 's_m_y_dealer_01', -- Ped model\n    blip = {\n        display = false, -- Display blip on map\n        sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Seed Dealer',\n    },\n    items = {\n        ['buying'] = { -- Items the dealer buys from you\n            ['weed_lemonhaze'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n        },\n        ['selling'] = { -- Items the dealer sells to you\n            ['weed_lemonhaze_seed'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n            ['coca_seed'] = {min = 100, max = 300, moneyType = 'black_money'},\n        },\n    },\n},\n['seed_dealer']\nWe start with the dealer id, this specifies the name of the dealer, the name is only relevant for the script.\nThe dealer id must not contain any special characters or spaces and must be unique.\nlabel = 'Seed Dealer', -- Dealer name\nThe label is the name of the dealer and is used when the player addresses the dealer or if blips are activated for the dealer, the label is also used for the blip.\nlocations = { -- Dealer will spawn at one of these locations\n    --           x          y          z     heading/w\n    vector4(-462.8489, 1101.5592, 326.6819, 166.9773),\n    vector4(-49.4244, 1903.6714, 194.3613, 95.7213),\n    vector4(2414.2463, 5003.8462, 45.6655, 40.8932),\n},\nA list of vector4() coordinates can be created here.\nEach time the script is restarted, the dealer will spawn at a random location defined here.\nIf the dealer should only spawn at one location at a time, only one vector4() coordinate can be specified here.\nped = 's_m_y_dealer_01', -- Ped model\nThe ped is the model that is used when the dealer ped is spawned. Any of these Peds can be used:\nblip = {\n    display = false, -- Display blip on map\n    sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Seed Dealer',\n},\nThe blip for the dealer can be set here. The blip is only displayed if display = true.\nitems = {\n    ['buying'] = { -- Items the dealer buys from you\n        ['weed_lemonhaze'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n    },\n    ['selling'] = { -- Items the dealer sells to you\n        ['weed_lemonhaze_seed'] = {min = 100, max = 200, moneyType = 'black_money'}, -- min/max price\n        ['coca_seed'] = {min = 100, max = 300, moneyType = 'black_money'},\n    },\n},\nHere you can set which items the dealer sells and buys. A min and max price can be set for each item. Each time the script is restarted, a new random price is set for the item.\ncash (Money in the players inventory)\nbank (Money in the players bank accout)\nblack_money (Black Money)\nPlease keep in mind black_money is no default account on qb-core!\n['cash'] = {\n    ['qbcore'] = 'cash',\n    ['esx'] = 'money',\n    ['ND_Core'] = 'cash'\n},\n['bank'] = {\n    ['qbcore'] = 'bank',\n    ['esx'] = 'bank',\n    ['ND_Core'] = 'bank'\n},\n['black_money'] = {\n    ['qbcore'] = 'black_money',\n    ['esx'] = 'black_money',\n    ['ND_Core'] = nil -- Will be added soon\n}\n['uniqe_dealer_id'] = { -- Dealer id (Musst be unique)\n    label = 'Dealer Name', -- Dealer name\n    locations = { -- Dealer will spawn at one of these locations\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n        vector4(coordinate x value, coordinate y value, coordinate z value, coordinate w value),\n    },\n    ped = 's_m_y_dealer_01', -- Ped model\n    blip = {\n        display = true, -- Display blip on map\n        sprite = 140, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    },\n    items = {\n        ['buying'] = { -- Items the dealer buys from you\n            ['weed_lemonhaze'] = {min = 100, max = 200}, -- min/max price\n        },\n        ['selling'] = { -- Items the dealer sells to you\n            ['weed_lemonhaze_seed'] = {min = 100, max = 200}, -- min/max price\n            ['coca_seed'] = {min = 100, max = 300},\n        },\n    },\n},"}},"/it-drugs/adjustments/drugs":{"title":"it-drugs - Drugs","data":{"":"With the script, it is also possible to create your own consumable drugs directly. For these to be active in the game, Config.EnableDrugs must be set to true.","configdrugs#Config.Drugs":"['joint'] = { -- item that can be used in game\n    label = 'Joint',\n    animation = 'smoke', -- Animations: blunt, sniff, pill\n    time = 80, -- Time in seconds of the Effects\n    effects = { -- list of effects the drug have\n        'intenseEffect',\n        'healthRegen',\n        'moreStrength',\n        'drunkWalk'\n    },\n    cooldown = 360, -- Cooldown in seconds until you can use this drug again\n},\nThe cooldown is added to the normal effect time of the drug, in this case the cooldown is 80 + 360.\nIf you use the ox_inventory, please use the following template to add the drugs to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 20,\n\t\tstack = true,\n\t\tclose = true,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.takeDrug\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\nrunningSpeedIncrease\ninfinateStamina\nmoreStrength\nhealthRegen\nfoodRegen\ndrunkWalk\npsycoWalk\noutOfBody\ncameraShake\nfogEffect\nconfusionEffect\nwhiteoutEffect\nintenseEffect\nfocusEffect\nsuperJump\nswimming\narmor-20\nYou can change the number of the armor effect to the desired value. For example, armor-50 will give you 50 armor. The maximum value is 100.\n['item_name'] = { -- item that can be used in game\n    label = 'Drug Label',\n    animation = 'smoke', -- Animations: blunt, sniff, pill\n    time = 80, -- Time in seconds of the Effects\n    effects = { -- list of effects the drug have\n        'intenseEffect',\n        'healthRegen',\n        'moreStrength',\n        'drunkWalk',\n    },\n    cooldown = 360, -- Cooldown in seconds until you can use this drug again\n},"}},"/it-drugs/adjustments/plants":{"title":"it-drugs - Plants","data":{"":"All growth related configurations have significant impacts on the plant growth system.\nMaking any changes to the growth system requires thorough testing and debugging.\nWe strongly recommend any changes are made carefully and methodically as any changes can have unintended consequences.\nNow we can look at the configuration of the individual plants.","allowed-grounds#Allowed Grounds":"","configonlyallowedgrounds#Config.OnlyAllowedGrounds":"Config.OnlyAllowedGrounds is used to set whether a plant may only be planted on permitted grounds.\nIf Config.OnlyAllowedGrounds is set to true, the player can only plant on grounds set in Config.AllowedGrounds.","configallowedgrounds#Config.AllowedGrounds":"A list of ground hashes, if a desired ground is not included, the ground hash can be displayed when planting if Config.Debug is true, this can then simply be added to the list.","decay#Decay":"The decay settings can be used to set how many percent of water or fertilizer a plant should lose per minute.","threshold#Threshold":"The threshold value is the percentage value at which a plant begins to lose life.\nAs soon as the values of the plant are below Config.FertilizerThreshold or Config.WaterThreshold, the plant starts to lose life.The rate at which the plant should lose life can be set with Config.HealthBaseDecay.\nThe first value is the minimum and the second value is the maximum.\nA value between these two values is determined every minute. The plant loses this value of life.","configitems#Config.Items":"['liquid_fertilizer'] = {\n    water = 15,\n    fertilizer = 15,\n    itemBack = nil,\n},\nYou can always set 3 values for each item.\nwater this value determines the percentage of water this item adds to the plant. \nfertilizer this value determines the percentage of fertilizer this item adds to the plant. \nitemBack here you can specify another item that the player should get back after using the item.","configplanttypes#Config.PlantTypes":"Here you can set the items that can be used to fertilize and/or water the plant.\n[\"plant1\"] = {\n    [1] = {\"bkr_prop_weed_01_small_01a\", -0.5},\n    [2] = {\"bkr_prop_weed_med_01a\", -0.5},\n    [3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\n},\n[\"plant1\"]\nThis is the unique name of the plant type. The name must not contain any special characters or spaces.This will be used later to give a plant a type.\n[1] = {\"bkr_prop_weed_01_small_01a\", -0.5},\n[2] = {\"bkr_prop_weed_med_01a\", -0.5},\n[3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\nEach plant type consists of three sizes.\nA separate prop can be set for each size.\nA value can also be added for each prop.\nThis value is then subtracted from or added to the z-coordinate of the plant.\n[stage] = {\"prop\", z-value},","configplants#Config.Plants":"['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = false, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to true if you want to plant this seed only in specific zones\n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n},\n['weed_lemonhaze_seed']\nWe start with the plant id, this specifies the name of the plant, the name is only relevant for the script.\nThe plant id must not contain any special characters or spaces and must be unique.\ngrowthTime = 45\nHere you can specify a custom growthtime for the plant, which overwrites the global growthtime and must be specified in minutes.\nlabel = 'Lemon Haze\nThe label of the plant, this is used to display the name of the plant in all menus.\nplantType = 'plant1'\nThe plant type is defined here; you can choose from any of the types defined in Config.PlantTypes.\nonlyZone = false, -- Set to true if you want to plant this seed only in specific zones\nzones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\nIf onlyZones is true, the seed can only be planted in the specified zones in zones. The id of each previously created zone can be entered in the zones list\nproducts = {\n    ['weed_lemonhaze'] = {min = 1, max = 4},\n    --['other_item'] = {min = 1, max = 2}\n},\nseed = {\n    chance = 50, -- Percent of getting back the seed\n    min = 1, -- Min amount of seeds\n    max = 2 -- Max amount of seeds\n},\ntime = 3000 -- Time it takes to plant/harvest in miliseconds\nIf you use the ox_inventory, please use the following template to add the plants to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 20,\n\t\tstack = true,\n\t\tclose = true,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.useSeed\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = false, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to zone id if you want to plant this seed only in a specific zone \n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n},"}},"/it-drugs/adjustments/processing-tables":{"title":"it-drugs - Processing Tables","data":{"":"So let's start setting up the processing tables.To be able to use the processing tables, Config.EnableProcessing must be set to true in the Config!","configproccesingskillcheck#Config.ProccesingSkillCheck":"It is possible to activate a skill check. If Config.ProccesingSkillCheck is set to true, the player must pass a skill check to be able to craft an item.The skill check can be customized with Config.SkillCheck.If the skill check is deactivated, the player only has to wait a certain amount of time and then receives the item.More information about the skill check can be found here:","configprocessingtables#Config.ProcessingTables":"The individual processing tables can now be configured here:\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = 3,\n                ['paper'] = 1\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            animation = {\n                dict = 'anim@gangops@facility@servers@bodysearch@',\n                anim = 'player_search',\n            }\n        },\n    }\n}\n['weed_processing_table']\nThis is the name of the item to which this configuration is bound. The item can now be used to set up a table in the game.\nmodel = 'bkr_prop_weed_table_01a'\nThe model of the processing table here can theoretically be used with any Fivem model.","recipes#Recipes":"Each table can theoretically have an infinite number of recipes, how exactly a recipe must look is explained here\n['joint'] = {\n    label = 'Joint', -- name of the recipe in the menu\n    showIngrediants = true,\n    ingrediants = {\n        ['weed_lemonhaze'] = 3,\n        ['paper'] = 1\n    },\n    outputs = {\n        ['joint'] = 2\n    },\n    processTime = 5,\n    failChance = 15,\n    animation = {\n        dict = 'anim@gangops@facility@servers@bodysearch@',\n        anim = 'player_search',\n    }\n},\n['joint']\nWe start with the recipe id, this specifies the name of the recipe, the name is only relevant for the script.\nThe recipe id must not contain any special characters or spaces and must be unique.\nshowIngrediants = true,\ningrediants = {\n    ['weed_lemonhaze'] = 3,\n    ['paper'] = 1\n},\nFor each recipe you can set whether the player should see which ingredients he needs for this recipe.\nIn addition, as many ingredients can be added for each recipe as you like. simply add them to the ingrediants list according to the following scheme:\n['item_name'] = amount_you_need,\noutputs = {\n    ['joint'] = 2\n},\nThe outputs of a recipe work in exactly the same way as the ingredients, and here too any number of items can be added.\n['item_name'] = amount_you_get,\nprocessTime = 5,\nThe processTime is the time in seconds it takes to process an item, this time is only used if Config.ProcessingSkillCheck is false.\nfailChance = 15,\nThe chance in percent that the production of an item can go wrong, which means that with failChance = 15 there is a 15% chance that the player will not get any output when producing an item.","additional-recipe-settings#Additional Recipe Settings":"If you use the ox_inventory, please use the following template to add the tables to your items.lua:\n[\"item_name\"] = {\n\t\tlabel = \"Item Label\",\n\t\tweight = 1000,\n\t\tstack = false,\n\t\tclose = true,\n\t\tdescription = \"Item Description\",\n\t\tserver = {\n\t\t\texport = \"it-drugs.placeProcessingTable\"\n\t\t},\n\t\tclient = {\n\t\t\timage = \"item_name.png\",\n\t\t}\n\t},\nEach item_name must be replaced with the actual item name\n    ['uniqe_table_id'] = {\n        type = 'weed',\n        model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n        recipes = {\n            -- Here you can add as many recipes as you want\n        }\n    }"}},"/it-drugs/adjustments/selling":{"title":"it-drugs - Selling","data":{"":"With the update v1.1.0 it is now also possible to sell drugs to NPCs in certain zones with the script.To be able to use this feature, Config.EnableSelling must be set to true in the Config!","configsellsettings#Config.SellSettings":"Here you will find the most important settings for selling. These settings apply to all zones.","configsellzones#Config.SellZones":"The individual zones can be created and edited here. We will now take a closer look at one zone and explain what the individual values mean and what they change.\n['groove'] = {\n    points = {\n        vec3(-154.0, -1778.0, 30.0),\n        vec3(48.0, -1690.0, 30.0),\n        vec3(250.0, -1860.0, 30.0),\n        vec3(142.0, -1993.0, 30.0),\n        vec3(130.0, -2029.0, 30.0),\n    },\n    thickness = 27,\n    drugs = {\n        { item = 'cocaine', price = math.random(100, 200), moneyType = 'cash'},\n        { item = 'joint', price = math.random(50, 100) = moneyType = 'bank'},\n        { item = 'weed_lemonhaze', price = math.random(50, 100), = 'black_money'}\n    }\n},\n['groove']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script. The zone id must not contain any special characters or spaces and must be unique\npoints = {\n    vec3(-154.0, -1778.0, 30.0),\n    vec3(48.0, -1690.0, 30.0),\n    vec3(250.0, -1860.0, 30.0),\n    vec3(142.0, -1993.0, 30.0),\n    vec3(130.0, -2029.0, 30.0),\n},\nthickness = 27,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone. A straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:\nAs soon as a player enters this zone he has the possibility to sell items to the NPCs.\ndrugs = {\n    { item = 'cocaine', price = math.random(100, 200), moneyType = 'cash'},\n    { item = 'joint', price = math.random(50, 100) = moneyType = 'bank'},\n    { item = 'weed_lemonhaze', price = math.random(50, 100), = 'black_money'}\n}\nHere you can specify which drugs can be sold in the zone.\nTheoretically, an infinite number of items can be added. For many items it is recommended to set Config.asdasd to true.Schemata for new items:\n{ item = 'item_name', price = math.random(min_price, max_price), moneyType = 'cash/bank/black_money'},\ncash (Money in the players inventory)\nbank (Money in the players bank accout)\nblack_money (Black Money)\nPlease keep in mind black_money is no default account on qb-core!\n['cash'] = {\n    ['qbcore'] = 'cash',\n    ['esx'] = 'money',\n    ['ND_Core'] = 'cash'\n},\n['bank'] = {\n    ['qbcore'] = 'bank',\n    ['esx'] = 'bank',\n    ['ND_Core'] = 'bank'\n},\n['black_money'] = {\n    ['qbcore'] = 'black_money',\n    ['esx'] = 'black_money',\n    ['ND_Core'] = nil -- Will be added soon\n}"}},"/it-drugs/adjustments/zones":{"title":"it-drugs - Zones","data":{"":"All growth related configurations have significant impacts on the plant growth system.\nMaking any changes to the growth system requires thorough testing and debugging.\nWe strongly recommend any changes are made carefully and methodically as any changes can have unintended consequences.\nFirst, let's take a look at zone management.\nHere, it is possible to create zones that can have an effect on the growth speed of certain plants.","configglobalgrowtime#Config.GlobalGrowTime":"This variable defines the growth rate in minutes for the plants and is taken as the base value for all future modifications.To use the different zone settings, this variable must be set to true.\nAs long as it is set to false, any modification in the zones will not be used.","configzones#Config.Zones":"The individual zones can be created and edited here.\nWe will now take a closer look at one zone and explain what the individual values mean and what they change.\n['weed_zone_one'] = { -- Zone id (Musst be unique)\n    points = {\n        vec3(2031.0, 4853.0, 43.0),\n        vec3(2007.0, 4877.0, 43.0),\n        vec3(1981.0, 4903.0, 43.0),\n        vec3(2006.0, 4929.0, 43.0),\n        vec3(2032.0, 4903.0, 43.0),\n        vec3(2057.0, 4878.0, 43.0),\n    },\n    thickness = 4.0,\n    growMultiplier = 2, -- GlobalGrowTime / growMultiplier = Time in minutes for a plant to grow in this zone\n    \n    blip = {\n        display = true, -- Display blip on map\n        sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Weed Zone',\n    },\n},\n['weed_zone_one']\nWe start with the zone id, this specifies the name of the zone, the name is only relevant for the script.\nThe zone id must not contain any special characters or spaces and must be unique.\npoints = {\n    vec3(2031.0, 4853.0, 43.0),\n    vec3(2007.0, 4877.0, 43.0),\n    vec3(1981.0, 4903.0, 43.0),\n    vec3(2006.0, 4929.0, 43.0),\n    vec3(2032.0, 4903.0, 43.0),\n    vec3(2057.0, 4878.0, 43.0),\n},\nthickness = 4.0,\nMake sure that all z coordinates (laste number) are the same, otherwise the zone will not be created.\nThe points define the area of the zone.\nA straight line is drawn between two consecutive vec3() or vec() to define the edge of the zone.\nA line is also automatically drawn between the last and first vec3().The thickness can be left at 4 if the zone is created manually.\nHowever, since the script now uses ox_lib for the zones, this can also be created more easily.\nYou can find more information here:As soon as a player plants a plant in such a zone, it is affected by the zone settings.\ngrowMultiplier = 2,\nThe time it takes a plant to grow is divided by this value to calculate the new time.\nSo with a 2, the growth is twice as fast as normal.\nblip = {\n    display = true, -- If true blip will be displayed\n    sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n    displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n    displayText = 'Weed Zone', -- Name that will displayed on the map\n},\nThe blip fie zone can be set here.\nThe blip is always displayed in the middle of the zone.\n  ['uniqe_zone_name'] = { -- Zone id (No Spaces)\n    coords = {\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        vector3(coordinate x value, coordinate y value, coordinate z value),\n        -- You can add as many vector3 as you want\n    },\n    thickness = 4.0,\n    growMultiplier = 2, -- GlobalGrowTime / growMultiplier = Time in minutes for a plant to grow in this zone\n    \n    blip = {\n        display = true, -- Display blip on map\n        sprite = 469, -- Select blip from (https://docs.fivem.net/docs/game-references/blips/)\n        displayColor = 2, -- Select blip color from (https://docs.fivem.net/docs/game-references/blips/)\n        displayText = 'Weed Zone',\n    },\n    exclusive = {'seed_one_name', 'seed_two_name'} -- You can add as many seeds as you want\n},"}},"/it-drugs/common-errors":{"title":"it-drugs - Common Errors","data":{"":"Here you will find common errors and their solutions. If you have any further questions, please feel free to ask in the Discord.\nThis page is still under construction.\nIf you have any errors that are not listed here, please let us know in the Discord.","general-errors#General Errors":"\u001b[1m \u001b[31mattempt to index a nil value (global 'lib')\u001b[39m\u001b[22m\nIf you get this error you either don't have ox_lib installed on your server or you start it after the it-drugs script.\nMake sure to start the ox_lib script before the it-drugs script.","database-errors#Database Errors":"\u001b[1m \u001b[31mError: it-drugs was unable to execute query!\u001b[39m\u001b[22m\nIf you get this error, it means that the script was unable to execute a query on the database.\nThis can have multiple reasons, but the most commons are:\nYou still running version 1.2.4 of the script. Update now\nYou updated the script from 1.2.4 to 1.3.x and didn't update the database. To fix this you can run the following SQL query:\n-- Delete the drug_plants table\nDROP TABLE IF EXISTS drug_plants;\n-- Delete the drug_processing table\nDROP TABLE IF EXISTS drug_processing;","any-other-databse-error#Any other databse error":"If you get any other database error, please make sure that you are using the latest version of the script.\nIf you are using the latest version of the script, please let us know in the Discord.","animation-error#Animation Error":"","missing-animation#Missing Animation":"\u001b[1m \u001b[31mattempt to index a nil value (field 'animation')\nIf you get this error that means you are using 1.2.4 of the script.\nWe would recommend updating to the latest version of the script. This will fix the error.\nHowever, if you want to fix it manually, you can do the following:","open-the-configlua-file#Open the config.lua file.":"","search-for-configprocessingtables#Search for Config.ProcessingTables.":"","add-the-following-lines-to-every-recipe-in-every-processing-tables#Add the following lines to every recipe in every processing tables:":"animation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@',\n    anim = 'player_search',\n},","planting-errors#Planting Errors":"\u001b[1m \u001b[31m[ERROR] [getPlantByNetId] - Plant with netId: 0 does not exists!\u001b[39m\u001b[22m\nIf you get this error, it means that the script was unable to find the plant with the given netId.\nIn most cases, this error occurs when a player try to interact with a plant that is not managed by the script.\nSo in most cases you can ignore this error.","selling-errors#Selling Errors":"","cant-sell-drugs-to-npc#Can't sell drugs to npc":"If yoo can't sell drugs to a NPC make sure your are in on of the zones that are defined in the Config.SellZones in the config.lua file.\nIf you are in one of the zones and still can't sell drugs to the NPC, please make sure that you are using the latest version of the script.\nAlso you can enable Config.ManualZoneChecker in the config.lua file to check the zones manually."}},"/it-drugs/installation":{"title":"it-drugs - Installation","data":{"":"Welcome to the it-drugs installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.\nWhen installing the script make sure to not rename the script folder, this can cause errors in the script. The name of the script folder should always be it-drugs.","need-help-watch-the-video#Need help? Watch the Video!":"","asset-download#Asset download":"You can download the latest version of the script for free on the it-script GitHub Account.\nIf you have downloaded the script from another site, there is no guarantee that the script will actually work. Please download it again from the it-scripts GitHub page.\nIf you have paid money for this script, it is a SCAM. The it-drugs script is and will always remain free. Please report the page to us on the Discord server.","asset-dependencies#Asset dependencies":"Dependencies\tLinks\tox_lib\thttps://github.com/overextended/ox_lib/releases\toxmysql\thttps://github.com/overextended/oxmysql\tTarget System\t\tESX (ox_target)\thttps://github.com/overextended/ox_target\tQbCore (qb-target)\thttps://github.com/qbcore-framework/qb-target\t\nYou can also use ox_target on your QbCore Server but only if you are using ox_target with version 1.16.0 or older!","asset-positioning#Asset positioning":"Correctly position the assets by following this step, if something goes wrong you will probably get errors about exports not found, do not skip this step.\nFor the execution of this asset, we will respect the respective order mentioned below.\n-- First we will start the Database\nensure oxmysql\n-- Then we will start the cores, never below\nensure es_extended or qb-core\n-- Your inventory system, always on top\nensure [inventory]\nThen we start all the dependencies\nensure [dependencies]\n-- Run it-drugs here along with its dependencies\nensure [it-drugs]","database#Database":"Our drug script includes two databases, befor the first start of the script you should check if the tables allready exists in your Database and delete them if they exists.\nIf you just update the script you dont have to do this.\n-- Check for the drug_plants table\nDROP TABLE IF EXISTS `drug_plants`;\n-- Check for the drug\nDROP TABLE IF EXISTS `drug_processing`;\nThe Script will automaticly install and update the database but if you want you still can intall the database manually with this commands:\n  -- Install the drug_plants table\n  CREATE TABLE IF NOT EXISTS drug_plants (\n      id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n      owner LONGTEXT DEFAULT NULL,\n      coords LONGTEXT NOT NULL,\n      time INT(255) NOT NULL,\n      type VARCHAR(100) NOT NULL,\n      health DOUBLE NOT NULL DEFAULT 100,\n      fertilizer DOUBLE NOT NULL DEFAULT 0,\n      water DOUBLE NOT NULL DEFAULT 0,\n      growtime INT(11) NOT NULL\n  );\n  -- Install the drug_processing table\n  CREATE TABLE IF NOT EXISTS drug_processing (\n      id VARCHAR(11) NOT NULL, PRIMARY KEY(id),\n      coords LONGTEXT NOT NULL,\n      rotation DOUBLE NOT NULL,\n      owner LONGTEXT NOT NULL,\n      type VARCHAR(100) NOT NULL\n  );","items-for-it-drugs#Items for it-drugs":"This guid is only for the scripts default items, but you can add new items after the same shemata.\nIf you use qbcore + ox_inventory, you must add the items inside ox_inventory for the items using to work.\nHere you will find a series of selected items in different extensions for different inventories, select the option that suits your server, remember to check if your inventory works with this script!\n    INSERT INTO `items` (`name`, `label`, `weight`, `rare`, `can_remove`) VALUES\n      ('watering_can', 'Watering Can', 500, 0, 1),\n      ('fertilizer', 'fertilizer', 500, 0, 1),\n      ('advanced_fertilizer', 'Advanced Fertilizer', 500, 0, 1),\n      ('liquid_fertilizer', 'Liquid Fertilizer', 200, 0, 1),\n      ('weed_lemonhaze_seed', 'Weed Lemonhaze Seed', 20, 0, 1),\n      ('weed_lemonhaze', 'Weed Lemonhaze', 20, 0, 1),\n      ('weed_og_seed', 'Weed OG Seed', 20, 0, 1),\n      ('weed_og', 'weed Og', 20, 0, 1),\n      ('weed_purple_haze_seed', 'Weed Purple Haze Seed', 20, 0, 1),\n      ('weed_purple_haze', 'weed Purple Haze', 20, 0, 1),\n      ('weed_white_widow_seed', 'Weed White Widow Seed', 20, 0, 1),\n      ('weed_white_widow', 'weed White Widow', 20, 0, 1),\n      ('weed_blueberry_seed', 'Weed Blueberry Seed', 20, 0, 1),\n      ('weed_blueberry', 'weed Blueberry', 20, 0, 1),\n      ('coca_seed', 'Coca Seed', 20, 0, 1),\n      ('coca', 'Coca', 20, 0, 1),\n      ('paper', 'Paper', 20, 0, 1),\n      ('nitrous', 'nitrous', 20, 0, 1),\n      ('cocaine', 'cocaine', 20, 0, 1),\n      ('joint', 'joint', 20, 0, 1),\n      ('weed_processing_table', 'weed_processing_table', 1000, 0, 1),\n      ('cocaine_processing_table', 'cocaine_processing_table', 1000, 0, 1)\n    ;\n    watering_can = {\n    name = \"watering_can\",\n    label = 'Watering can',\n    weight = 500,\n    type = 'item',\n    image = \"watering_can.png\",\n    unique = false,\n    useable = false,\n    shouldClose = false,\n    combinable = nil,\n    description = 'simple watering can'\n  },\n  fertilizer = {\n      name = 'fertilizer',\n      label = 'fertilizer',\n      weight = 500,\n      type = 'item',\n      image = 'fertilizer.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'fertilizer'\n  },\n  advanced_fertilizer = {\n      name = 'advanced_fertilizer',\n      label = 'Advanced Fertilizer',\n      weight = 500,\n      type = 'item',\n      image = 'advanced_fertilizer.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Fertilizer with the litte extra'\n  },\n  liquid_fertilizer = {\n      name = \"liquid_fertilizer\",\n      label = 'Liquid Fertilizer',\n      weight = 200,\n      type = 'item',\n      image = \"liquid_fertilizer.png\",\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Basicly Water with nutrations'\n  },\n  weed_lemonhaze_seed = {\n      name = 'weed_lemonhaze_seed',\n      label = 'Weed Lemonhaze Seed',\n      weight = 20,\n      type = 'item', \t\t\n      image = 'weed_lemonhaze_seed.png', \t\t\n      unique = false, \t\n      useable = true, \t\n      shouldClose = true,\t    \n      combinable = nil,   \n      description = 'Weed Lemonhaze Seed'\n  },\n  weed_lemonhaze = {\n      name = 'weed_lemonhaze',\n      label = 'weed lemonhaze',\n      weight = 20,\n      type = 'item',\n      image = 'weed_lemonhaze.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Weed Lemonhaze'\n  },\n  weed_og_seed = {\n      name = 'weed_og_seed',\n      label = 'Weed Og Seed',\n      weight = 20,\n      type = 'item', \t\t\n      image = 'weed_og_seed.png', \t\t\n      unique = false, \t\n      useable = true, \t\n      shouldClose = true,\t    \n      combinable = nil,   \n      description = 'Weed Og Seed'\n  },\n  weed_og = {\n      name = 'weed_og',\n      label = 'weed Og',\n      weight = 20,\n      type = 'item',\n      image = 'weed_og.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Weed Og'\n  },\n  weed_purple_haze_seed = {\n      name = 'weed_purple_haze_seed',\n      label = 'Weed Purple Haze Seed',\n      weight = 20,\n      type = 'item', \t\t\n      image = 'weed_purple_haze_seed.png', \t\t\n      unique = false, \t\n      useable = true, \t\n      shouldClose = true,\t    \n      combinable = nil,   \n      description = 'Weed Purple Haze Seed'\n  },\n  weed_purple_haze = {\n      name = 'weed_purple_haze',\n      label = 'weed Purple Haze',\n      weight = 20,\n      type = 'item',\n      image = 'weed_purple_haze.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Weed Purple Haze'\n  },\n  weed_white_widow_seed = {\n      name = 'weed_white_widow_seed',\n      label = 'Weed White Widow Seed',\n      weight = 20,\n      type = 'item', \t\t\n      image = 'weed_white_widow_seed.png', \t\t\n      unique = false, \t\n      useable = true, \t\n      shouldClose = true,\t    \n      combinable = nil,   \n      description = 'Weed White Widow Seed'\n  },\n  weed_white_widow = {\n      name = 'weed_white_widow',\n      label = 'weed White Widow',\n      weight = 20,\n      type = 'item',\n      image = 'weed_white_widow.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Weed white Widow'\n  },\n  weed_blueberry_seed = {\n      name = 'weed_blueberry_seed',\n      label = 'Weed Blueberry Seed',\n      weight = 20,\n      type = 'item', \t\t\n      image = 'weed_blueberry_seed.png', \t\t\n      unique = false, \t\n      useable = true, \t\n      shouldClose = true,\t    \n      combinable = nil,   \n      description = 'Weed Blueberry Seed'\n  },\n  weed_blueberry = {\n      name = 'weed_blueberry',\n      label = 'weed Blueberry',\n      weight = 20,\n      type = 'item',\n      image = 'weed_blueberry.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Weed Blueberry'\n  },\n  coca_seed = {\n      name = 'coca_seed',\n      label = 'coca seed',\n      weight = 20,\n      type = 'item',\n      image = 'coca_seed.png',\n      unique = false,\n      useable = true,\n      shouldClose = true,\n      combinable = nil,\n      description = 'Coca Seed'\n  },\n  coca = {\n      name = 'coca',\n      label = 'coca',\n      weight = 20,\n      type = 'item',\n      image = 'coca.png',\n      unique = false,\n      useable = false,\n      shouldClose = true,\n      combinable = nil,\n      description = 'Coca'\n  },\n  paper = {\n      name = 'paper',\n      label = 'paper',\n      weight = 50,\n      type = 'item',\n      image = 'paper.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Paper'\n  },\n  nitrous = {\n      name = 'nitrous',\n      label = 'nitrous',\n      weight = 500,\n      type = 'item',\n      image = 'nitrous.png',\n      unique = false,\n      useable = false,\n      shouldClose = false,\n      combinable = nil,\n      description = 'nitrous'\n      },\n  cocaine = {\n      name = 'cocaine',\n      label = 'cocaine',\n      weight = 20,\n      type = 'item',\n      image = 'cocaine.png',\n      unique = false,\n      useable = true,\n      shouldClose = false,\n      combinable = nil,\n      description = 'Small bag of cocaine'\n      },\n  joint = {\n      name = 'joint',\n      label = 'joint',\n      weight = 10,\n      type = 'item',\n      image = 'joint.png',\n      unique = false,\n      useable = true,\n      shouldClose = true,\n      combinable = nil,\n      description = 'joint'\n  },\n  weed_processing_table = {\n      name = 'weed_processing_table',\n      label = 'Weed processing table',\n      weight = 1000,\n      type = 'item',\n      image = 'weed_processing_table.png',\n      unique = false,\n      useable = true,\n      shouldClose = true,\n      combinable = nil,\n      description = 'Process some weed'\n  },\n  cocaine_processing_table = {\n      name = 'cocaine_processing_table',\n      label = 'cocaine processing table',\n      weight = 1000,\n      type = 'item',\n      image = 'cocaine_processing_table.png',\n      unique = false,\n      useable = true,\n      shouldClose = true,\n      combinable = nil,\n      description = 'Process some cocaine'\n  },\n  [\"watering_can\"] = {\n  \tlabel = \"Watering can\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Simple watering can\",\n  \tclient = {\n  \t\timage = \"watering_can.png\",\n  \t}\n  },\n  \n  [\"fertilizer\"] = {\n  \tlabel = \"Fertilizer\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Fertilizer\",\n  \tclient = {\n  \t\timage = \"fertilizer.png\",\n  \t}\n  },\n  \n  [\"advanced_fertilizer\"] = {\n  \tlabel = \"Advanced fertilizer\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Fertilizer with the litte extra\",\n  \tclient = {\n  \t\timage = \"advanced_fertilizer.png\",\n  \t}\n  },\n  \n  [\"liquid_fertilizer\"] = {\n  \tlabel = \"Liquid Fertilizer\",\n  \tweight = 200,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Basicly Water with nutrations\",\n  \tclient = {\n  \t\timage = \"liquid_fertilizer.png\",\n  \t}\n  },\n  \n  [\"weed_lemonhaze_seed\"] = {\n  \tlabel = \"Weed Lemonhaze Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Weed Lemonhaze Seed\",\n  \tclient = {\n  \t\timage = \"weed_lemonhaze_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_lemonhaze\"] = {\n  \tlabel = \"Weed Lemonhaze\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Weed Lemonhaze\",\n  \tclient = {\n  \t\timage = \"weed_lemonhaze.png\",\n  \t},\n  },\n  \n  [\"weed_og_seed\"] = {\n  \tlabel = \"Weed Og Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Weed Og Seed\",\n  \tclient = {\n  \t\timage = \"weed_og_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_og\"] = {\n  \tlabel = \"weed Og\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Og\",\n  \tclient = {\n  \t\timage = \"weed_og.png\",\n  \t},\n  },\n  \n  [\"weed_purple_haze_seed\"] = {\n  \tlabel = \"Weed Purple Haze Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Weed Purple Haze Seed\",\n  \tclient = {\n  \t\timage = \"weed_purple_haze_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_purple_haze\"] = {\n  \tlabel = \"weed Purple Haze\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Purple Haze\",\n  \tclient = {\n  \t\timage = \"weed_purple_haze.png\",\n  \t},\n  },\n  \n  [\"weed_white_widow_seed\"] = {\n  \tlabel = \"Weed White Widow Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Weed White Widow Seed\",\n  \tclient = {\n  \t\timage = \"weed_white_widow_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_white_widow\"] = {\n  \tlabel = \"weed White Widow\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed White Widow\",\n  \tclient = {\n  \t\timage = \"weed_white_widow.png\",\n  \t}\n  },\n  \n  [\"weed_blueberry_seed\"] = {\n  \tlabel = \"Weed Blueberry Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Weed Blueberry Seed\",\n  \tclient = {\n  \t\timage = \"weed_blueberry_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"weed_blueberry\"] = {\n  \tlabel = \"weed Blueberry\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"weed Blueberry\",\n  \tclient = {\n  \t\timage = \"weed_blueberry.png\",\n  \t}\n  },\n  \n  [\"coca_seed\"] = {\n  \tlabel = \"Coca Seed\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Coca Seed\",\n  \tclient = {\n  \t\timage = \"coca_seed.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.useSeed\"\n  \t}\n  },\n  \n  [\"coca\"] = {\n  \tlabel = \"Coca\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Coca\",\n  \tclient = {\n  \t\timage = \"coca.png\",\n  \t}\n  },\n  \n  [\"paper\"] = {\n  \tlabel = \"Paper\",\n  \tweight = 50,\n  \tstack = true,\n  \tclose = false,\n  \tdescription = \"Paper\",\n  \tclient = {\n  \t\timage = \"paper.png\",\n  \t}\n  },\n  \n  [\"nitrous\"] = {\n  \tlabel = \"Nitrous\",\n  \tweight = 500,\n  \tstack = false,\n  \tclose = false,\n  \tdescription = \"Nitrous\",\n  \tclient = {\n  \t\timage = \"nitrous.png\",\n  \t}\n  },\n  \n  [\"weed_processing_table\"] = {\n  \tlabel = \"Weed Processing Table\",\n  \tweight = 1000,\n  \tstack = false,\n  \tclose = true,\n  \tdescription = \"Process some weed\",\n  \tclient = {\n  \t\timage = \"weed_processing_table.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.placeProcessingTable\"\n  \t}\n  },\n  \n  [\"cocaine_processing_table\"] = {\n  \tlabel = \"Cocaine Processing Table\",\n  \tweight = 1000,\n  \tstack = false,\n  \tclose = true,\n  \tdescription = \"Process some cocaine\",\n  \tclient = {\n  \t\timage = \"cocaine_processing_table.png\",\n  \t},\n  \tserver = {\n  \t\texport = \"it-drugs.placeProcessingTable\"\n  \t}\n  },\n  \n  [\"cocaine\"] = {\n  \tlabel = \"Cocaine\",\n  \tweight = 20,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"A little bag of cocaine\",\n  \tconsume = 0, -- ADDED\n  \tserver = {\n  \t\texport = \"it-drugs.takeDrug\"\n  \t},\n  \tclient = {\n  \t\timage = \"cocaine.png\",\n  \t},\n  },\n  \n  [\"joint\"] = {\n  \tlabel = \"Joint\",\n  \tweight = 10,\n  \tstack = true,\n  \tclose = true,\n  \tdescription = \"Joint\",\n  \tconsume = 0, -- ADDED\n  \tserver = {\n  \t\texport = \"it-drugs.takeDrug\"\n  \t},\n  \tclient = {\n  \t\timage = \"joint.png\",\n  \t}\n  },\n  [\"watering_can\"] = {\n  name = \"watering_can\",\n  label = \"Watering can\",\n  type = \"item\",\n  weight = 500,\n  unique = false,\n  shouldClose = false,\n  description = \"Simple watering can\",\n  image = \"watering_can.png\",\n},\n[\"fertilizer\"] = {\n    name = \"fertilizer\",\n    label = \"Fertilizer\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Fertilizer\",\n    image = \"fertilizer.png\",\n},\n[\"advanced_fertilizer\"] = {\n    name = \"advanced_fertilizer\",\n    label = \"Advanced fertilizer\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Fertilizer with the litte extra\",\n    image = \"advanced_fertilizer.png\",\n},\n[\"liquid_fertilizer\"] = {\n    name = \"liquid_fertilizer\",\n    label = \"Liquid Fertilizer\",\n    type = \"item\",\n    weight = 200,\n    unique = false,\n    shouldClose = false,\n    description = \"Basicly Water with nutrations\",\n    image = \"liquid_fertilizer.png\",\n},\n[\"weed_lemonhaze_seed\"] = {\n    name = \"weed_lemonhaze_seed\",\n    label = \"Weed Lemonhaze Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Lemonhaze Seed\",\n    image = \"weed_lemonhaze_seed.png\",\n},\n[\"weed_lemonhaze\"] = {\n    name = \"weed_lemonhaze\",\n    label = \"Weed Lemonhaze\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"Weed Lemonhaze\",\n    image = \"weed_lemonhaze.png\",\n},\n[\"weed_og_seed\"] = {\n    name = \"weed_og_seed\",\n    label = \"Weed Og Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Og Seed\",\n    image = \"weed_og_seed.png\",\n},\n[\"weed_og\"] = {\n    name = \"weed_og\",\n    label = \"weed Og\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Og\",\n    image = \"weed_og.png\",\n},\n[\"weed_purple_haze_seed\"] = {\n    name = \"weed_purple_haze_seed\",\n    label = \"Weed Purple Haze Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Purple Haze Seed\",\n    image = \"weed_purple_haze_seed.png\",\n},\n[\"weed_purple_haze\"] = {\n    name = \"weed_purple_haze\",\n    label = \"weed Purple Haze\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Purple Haze\",\n    image = \"weed_purple_haze.png\",\n},\n[\"weed_white_widow_seed\"] = {\n    name = \"weed_white_widow_seed\",\n    label = \"Weed White Widow Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed White Widow Seed\",\n    image = \"weed_white_widow_seed.png\",\n},\n[\"weed_white_widow\"] = {\n    name = \"weed_white_widow\",\n    label = \"weed White Widow\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed White Widow\",\n    image = \"weed_white_widow.png\",\n},\n[\"weed_blueberry_seed\"] = {\n    name = \"weed_blueberry_seed\",\n    label = \"Weed Blueberry Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Weed Blueberry Seed\",\n    image = \"weed_blueberry_seed.png\",\n},\n[\"weed_blueberry\"] = {\n    name = \"weed_blueberry\",\n    label = \"weed Blueberry\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"weed Blueberry\",\n    image = \"weed_blueberry.png\",\n},\n[\"coca_seed\"] = {\n    name = \"coca_seed\",\n    label = \"Coca Seed\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Coca Seed\",\n    image = \"coca_seed.png\",\n},\n[\"coca\"] = {\n    name = \"coca\",\n    label = \"Coca\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = false,\n    description = \"Coca\",\n    image = \"coca.png\",\n},\n[\"paper\"] = {\n    name = \"paper\",\n    label = \"Paper\",\n    type = \"item\",\n    weight = 50,\n    unique = false,\n    shouldClose = false,\n    description = \"Paper\",\n    image = \"paper.png\",\n},\n[\"nitrous\"] = {\n    name = \"nitrous\",\n    label = \"Nitrous\",\n    type = \"item\",\n    weight = 500,\n    unique = false,\n    shouldClose = false,\n    description = \"Nitrous\",\n    image = \"nitrous.png\",\n},\n[\"cocaine\"] = {\n    name = \"cocaine\",\n    label = \"Cocaine\",\n    type = \"item\",\n    weight = 20,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Small bag of cocaine\",\n    image = \"cocaine.png\",\n},\n[\"joint\"] = {\n    name = \"joint\",\n    label = \"Joint\",\n    type = \"item\",\n    weight = 10,\n    unique = false,\n    shouldClose = true,\n    useable = true,\n    description = \"Joint\",\n    image = \"joint.png\",\n},\n[\"weed_processing_table\"] = {\n    name = \"weed_processing_table\",\n    label = \"Weed Processing Table\",\n    type = \"item\",\n    weight = 1000,\n    unique = true,\n    shouldClose = true,\n    useable = true,\n    description = \"Process some weed\",\n    image = \"weed_processing_table.png\",\n},\n[\"cocaine_processing_table\"] = {\n    name = \"cocaine_processing_table\",\n    label = \"Cocaine Processing Table\",\n    type = \"item\",\n    weight = 1000,\n    unique = true,\n    shouldClose = true,\n    useable = true,\n    description = \"Process some cocaine\",\n    image = \"cocaine_processing_table.png\",\n},\n  watering_can                  = { name = 'watering_can', label = 'Watering Can', weight = 100, type = 'item', image = 'watering_can.png', unique = false, useable = false, shouldClose = false, combinable = nil, description = 'Simple watering can' },\n  fertilizer                      = { name = 'fertilizer', label = 'Fertilizer', weight = 100, type = 'item', image = 'fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Fertilizer' },\n  advanced_fertilizer             = { name = 'advanced_fertilizer', label = 'Advanced Fertilizer', weight = 100, type = 'item', image = 'advanced_fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Fertilizer with the litte extra' },\n  liquid_fertilizer               = { name = 'liquid_fertilizer', label = 'Liquid Fertilizer', weight = 100, type = 'item', image = 'liquid_fertilizer.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Basicly Water with nutrations' },\n  weed_lemonhaze_seed             = { name = 'weed_lemonhaze_seed', label = 'Weed Lemonhaze Seed', weight = 100, type = 'item', image = 'weed_lemonhaze_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze Seed' },\n  weed_lemonhaze                  = { name = 'weed_lemonhaze', label = 'Weed Lemonhaze', weight = 100, type = 'item', image = 'weed_lemonhaze.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Lemonhaze' },\n  weed_og_seed                    = { name = 'weed_og_seed', label = 'Weed Og Seed', weight = 100, type = 'item', image = 'weed_og_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Og Seed' },\n  weed_og                         = { name = 'weed_og', label = 'Weed Og', weight = 100, type = 'item', image = 'weed_og.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Og' },\n  weed_purple_haze_seed           = { name = 'weed_purple_haze_seed', label = 'Weed Purple Haze Seed', weight = 100, type = 'item', image = 'weed_purple_haze_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Purple Haze Seed' },\n  weed_purple_haze                = { name = 'weed_purple_haze', label = 'Weed Purple Haze', weight = 100, type = 'item', image = 'weed_purple_haze.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Purple Haze' },\n  weed_white_widow_seed           = { name = 'weed_white_widow_seed', label = 'Weed White Widow Seed', weight = 100, type = 'item', image = 'weed_white_widow_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed White Widow Seed' },\n  weed_white_widow                = { name = 'weed_white_widow', label = 'Weed White Widow', weight = 100, type = 'item', image = 'weed_white_widow.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed White Widow' },\n  weed_blueberry_seed             = { name = 'weed_blueberry_seed', label = 'Weed Blueberry Seed', weight = 100, type = 'item', image = 'weed_blueberry_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Blueberry Seed' },\n  weed_blueberry                  = { name = 'weed_blueberry', label = 'Weed Blueberry', weight = 100, type = 'item', image = 'weed_blueberry.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Weed Blueberry' },\n  coca_seed                       = { name = 'coca_seed', label = 'Coca Seed', weight = 100, type = 'item', image = 'coca_seed.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca Seed' },\n  coca                            = { name = 'coca', label = 'Coca', weight = 100, type = 'item', image = 'coca.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Coca' },\n  paper                           = { name = 'paper', label = 'Paper', weight = 100, type = 'item', image = 'paper.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Use to roll some good stuff' },\n  nitrous                         = { name = 'nitrous', label = 'Nitrous', weight = 100, type = 'item', image = 'nitrous.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Nitrous' },\n  cocaine                         = { name = 'cocaine', label = 'Cocaine', weight = 100, type = 'item', image = 'cocaine.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Small bag of cocaine' },\n  joint                           = { name = 'joint', label = 'Joint', weight = 100, type = 'item', image = 'joint.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'High on life' },\n  weed_processing_table           = { name = 'weed_processing_table', label = 'Weed Processing Table', weight = 100, type = 'item', image = 'weed_processing_table.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Process some weed' },\n  cocaine_processing_table        = { name = 'cocaine_processing_table', label = 'Cocaine Processing_Table', weight = 100, type = 'item', image = 'cocaine_processing_table.png', unique = false, useable = false, shouldClose = true, combinable = nil, description = 'Process some cocain' },\nSoon...","use-webhooks#Use Webhooks":"You want to log the different actions of the script on your discord server? Then take a look at this.","basic-asset-configuration#Basic asset configuration":"We do not recommend editing frameworks unnecessarily, since almost all assets depend exclusively on your framework and exports on the name of your framework.\nOtherwise and if you edited your framework, read these steps carefully.\nPlease expand each part to see information about the configuration of the asset, this way you will understand the general operation of the asset on the framework and editable files side.\nThe asset will work automatically if your framework is called es_extended or qb-core, it will automatically detect if any of them are started.\nIf your framework is completely modified, both in events and name, you should access the bridge folder to adapt the native events of your framework to the codes you have created.\nIf this step doesn't work, we ask that you ask your framework modifier or trusted developer for help.\nFell free to edit the complete. If you made some changes and think others can use them, feel free to open a pull request on GitHub, and we maybe adapt your changes to the script."}},"/it-drugs/tipps-and-tricks/add-custom-dispatch":{"title":"it-drugs - Change Dispatch System","data":{"undefined#Connect it-drugs with ps-dispatch":"","create-new-alert#Create new Alert":"Add this to the alerts.lua in the ps-dispatch resource:\nlocal function itDrugsAlert()\n    local coords = GetEntityCoords(cache.ped)\n    local dispatchData = {\n        message = \"The Message you want to display\", -- Edit this!\n        codeName = 'itDrugsAlert',\n        code = 'Your Code', -- - Edit this!\n        icon = 'fas fa-joint',\n        priority = 2,\n        coords = coords,\n        street = GetStreetAndZone(coords),\n        gender = GetPlayerGender(),\n        jobs = { 'leo' } -- Add all jobs you want to notify\n    }\n    TriggerServerEvent('ps-dispatch:server:notify', dispatchData)\nend\nexports('itDrugsAlert', itDrugsAlert)","register-blip-data#Register Blip Data":"Add codeName in config.lua for the particular robbery to display the blip [\"itDrugsAlert\"] is the codename you passed with the TriggerServerEvent in step 1\nYou can change every parameter to your liking\n['itDrugsAlert'] = {\n    radius = 0,\n    sprite = 119,\n    color = 1,\n    scale = 1.5,\n    length = 2,\n    sound = 'Lose_1st',\n    sound2 = 'GTAO_FM_Events_Soundset',\n    offset = false,\n    flash = false\n},","edit-sendpolicealert-function#Edit SendPoliceAlert function":"Change the SendPoliceAlert function in it-drugs to following:\nfunction SendPoliceAlert(coords)\n    -- Add You own police alert system here\n   exports['ps-dispatch']:itDrugsAlert()\nend","restart#Restart":"Restart ps-dispatch and it-drugs to make the changes work."}},"/it-drugs/tipps-and-tricks/additional-plant-settings":{"title":"it-drugs - Additional Plant Settings","data":{"add-required-items#Add required items":"A desired feature is that items are required when an item is planted or harvested, this feature is now available with version v1.3.0 but not active by default in the Config.lua.\nTo add the feature the following code must be added to each plant.\nreqItems = { -- Items required to plant the seed\n    [\"planting\"] = {\n    },\n    [\"harvesting\"] = {\n    }\n},\nIn each of the 2 categories you can add as many items as you want, the schema you have to use is as follows:\n['item_amount'] = {amount = number, remove = true or false},\nExample:\n['watering_can'] = {amount = 1, remove = true},\nPlease remember to register all the items you list here in your inventory!","full-example#Full example":"['weed_lemonhaze_seed'] = {\n    label = 'Lemon Haze', -- Label for the plant\n    plantType = 'plant1', -- Choose plant types from (plant1, plant2, small_plant)\n    growthTime = 2, -- Cutsom growth time in minutes false if you want to use the global growth time\n    onlyZone = false, -- Set to zone id if you want to plant this seed only in a specific zone \n    zones = {'weed_zone_one', 'weed_zone_two'}, -- Zones where the seed can be planted\n    products = { -- Item the plant is going to produce when harvested with the max amount\n        ['weed_lemonhaze'] = {min = 1, max = 4},  \n        --['other_item'] = {min = 1, max = 2}\n    },\n    seed = {\n        chance = 50, -- Percent of getting back the seed\n        min = 1, -- Min amount of seeds\n        max = 2 -- Max amount of seeds\n    },\n    time = 3000, -- Time it takes to plant/harvest in miliseconds\n    reqItems = { -- Items required to plant the seed\n        [\"planting\"] = {\n            ['watering_can'] = {amount = 1, remove = true},\n            ['shovel'] = {amount = 1, remove = false},\n        },\n        [\"harvesting\"] = {\n            ['watering_can'] = {amount = 1, remove = true},\n            ['shovel'] = {amount = 1, remove = false},\n        }\n    }\n},"}},"/it-drugs/tipps-and-tricks/additional-processing-settings":{"title":"it-drugs - Additional Processing Settings","data":{"add-custom-animation#Add custom animation":"If you do not want to use the normal animation for a recipe in a processing table, you can also easily change this via the Config","get-your-animation#Get your animation":"A good resource to find animation is:","add-the-animation-to-the-config#Add the animation to the Config":"Add the following code to the recipe you want to change the animation for:\nanimation = {\n    dict = 'you animation dict', -- Animation dict\n    anim = 'your animation name', -- Animation name\n}\nExample:\nanimation = {\n    dict = 'anim@gangops@facility@servers@bodysearch@', -- Animation dict\n    anim = 'player_search', -- Animation name\n}\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = 3,\n                ['paper'] = 1\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            animation = {\n                dict = 'anim@gangops@facility@servers@bodysearch@',\n                anim = 'player_search',\n            }\n        },\n    }\n}","add-particles#Add particles":"A new feature with version v1.3.0 is the possibility to add particles to a recipe. This can be done via the Config.","get-your-particle#Get your particle":"A good resource to find particles is:","add-the-particle-to-the-config#Add the particle to the Config":"Add the following code to the recipe you want to add the particle to:\n    particlefx = {\n        dict = 'your dict name',\n        particle = 'your particle name',\n        color = {r = 255, g = 255, b = 255},\n        offset = {x = 0.0, y = 0, z = 0},\n        scale = 0.5,\n    },\ncolor = {r = 255, g = 255, b = 255},\nThe color of the particle, each value can be between 0 and 255 and represents the RGB color space.\noffset = {x = 0.0, y = 0, z = 0},\nThe offset of the particle, this can be used to move the particle to a different position.\nDue to the fact that some particles are not centered, it is recommended to play around with the values.\nIf you are using the default table props provided by the script, you can use the following values:\noffset = {x = 0.0, y = -1.5, z = 1.0},\nscale = 0.5,\nThe scale of the particle, this can be used to make the particle bigger or smaller.\n['weed_processing_table'] = {\n    type = 'weed',\n    model = 'bkr_prop_weed_table_01a', -- Exanples: bkr_prop_weed_table_01a, bkr_prop_meth_table01a, bkr_prop_coke_table01a\n    recipes = {\n        ['joint'] = {\n            label = 'Joint',\n            showIngrediants = true,\n            ingrediants = {\n                ['weed_lemonhaze'] = 3,\n                ['paper'] = 1\n            },\n            outputs = {\n                ['joint'] = 2\n            },\n            processTime = 5,\n            failChance = 15,\n            particlefx = {\n                dict = 'scr_ar_planes',\n                particle = 'scr_ar_trail_smoke_slow',\n                color = {r = 255, g = 255, b = 153},\n                offset = {x = 0.0, y = -1.5, z = 1.0},\n                scale = 0.5,\n            },\n        },\n    }\n}"}},"/it-drugs/tipps-and-tricks/easy-zone-creation":{"title":"it-drugs - Easy Zone Creation","data":{"":"This tutorial only works as of version 1.2.4 because ox_lib is now used to create a zone instead of PolyZone.\nTo create a new zone you now can use the /zone poly command from ox_lib.\nMake sure you use /zone poly if not you will get the zone in a wrong format at the end and cannot add it to the config.\nAfter you have used the command, the following menu should open:You can now simply walk through the zone in-game and set points yourself.\nAs soon as you have finished creating the zone, press [ENTER]. The following menu will now open:Now you can give the zone a name and select the format.\nYOU MUST SELECT ARRAY FOR FORMAT OTHERWISE THE ZONE WILL NOT HAVE THE CORRECT FORMAT AND CANNOT BE INSERTED INTO THE SCRIPT.\nZones will be saved to ox_lib/created_zones.lua with your chosen format an will look like this:\n{\n    name = poly,\n    points = {\n        vec(447.9, -998.8, 25.8),\n        vec(450.3, -998.2, 25.8),\n        vec(449.9, -995.5, 25.8),\n        vec(447.2, -995.6, 25.8),\n        vec(446.3, -997.9, 25.8),\n    },\n    thickness = 2,\n},\nYou can now simply copy the points and thickness and paste them into the config of it-drugs."}},"/it-drugs/tipps-and-tricks/plant_types":{"title":"it-drugs - Plant Types","data":{"plant-types#Plant Types":"This list is for the new version of it-drugs (1.3.0) and may not work with older versions of the script.\nWe would recommend updating to the latest version. How to update\nHere you can find a list of all default plant types that are available in the script. You can use these plant types to create your own plants in the script.\nIf you want to use a plant type, you can simply copy the name and paste it into the config below Config.PlantTypes to the other plant types.\nKeep in mind that you can also create your own plant types. The script works with every prop that is available in the game.","weed-lemon-haze#Weed Lemon Haze":"[\"plantLemon\"] = {\n        [1] = {\"an_weed_yellow_01_small_01b\", -0.5}, -- Set to -0.5 to make the plant grow in the ground\n        [2] = {\"an_weed_yellow_med_01b\", -0.5},\n        [3] = {\"an_weed_yellow_lrg_01b\", -0.5},\n    },","weed-og#Weed Og":"[\"plantOg\"] = {\n        [1] = {\"bkr_prop_weed_01_small_01a\", -0.5}, -- Set to -0.5 to make the plant grow in the ground\n        [2] = {\"bkr_prop_weed_med_01a\", -0.5},\n        [3] = {\"bkr_prop_weed_lrg_01a\", -0.5},\n    },","weed-purple-haze#Weed Purple Haze":"[\"plantPurple\"] = {\n        [1] = {\"an_weed_purple_01_small_01b\", -0.5},\n        [2] = {\"an_weed_purple_med_01b\",-0.5},\n        [3] = {\"an_weed_purple_lrg_01b\", -0.5},\n    },","weed-white-widow#Weed White Widow":"[\"plantWhite\"] = {\n        [1] = {\"an_weed_white_01_small_01b\", -0.5},\n        [2] = {\"an_weed_white_med_01b\",-0.5},\n        [3] = {\"an_weed_white_lrg_01b\", -0.5},\n    },","weed-blueberry#Weed Blueberry":"[\"plantBlue\"] = {\n        [1] = {\"an_weed_blue_01_small_01b\", -0.5},\n        [2] = {\"an_weed_blue_med_01b\",-0.5},\n        [3] = {\"an_weed_blue_lrg_01b\", -0.5},\n    },\nThanks to Turnpoint for providing the plant types."}},"/it-drugs/tipps-and-tricks/webhook-setup":{"title":"it-drugs - Webhook Setup","data":{"":"With version 1.3.0 of it-drugs the creation of webhooks is changing. From now on the webhooks are set entirely in the file server/sv_webhooks.\nlocal webhookSettings = {\n    ['active'] = false, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = nil, --'', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIt is now possible to use your own webhook links for the various individual actions of the user.If a valid webhook id is entered and the attribute active is set to true, a webhook message is sent for the corresponding category.\nlocal webhookSettings = {\n    ['active'] = true, -- Set to true to enable the webhook\n    ['name'] = 'it-drugs', -- Name for the webhook\n    ['avatar'] = 'https://i.imgur.com/KvZZn88.png', -- Avatar for the webhook\n    ['urls'] = {\n        ['plant'] = 'https://discord.com/api/webhooks/**************/*************************', -- Webhook URL for plant actions\n        ['table'] = nil, --'', -- Webhook URL for table actions\n        ['sell'] = nil, --'', -- Webhook URL for sell actions\n        ['message'] = nil, --'', -- Webhook URL for messages\n    }\n}\nIn this example now the script only sends webhook messages when a user interacts with a plant.\nPlease note that only messages with in the sell and message area will be sent immediately.\nThe messages for plants and tables are sent every minute all together to prevent Discord from rate limiting your Discord server\nYou don't know how to create Discord webhooks no problem check this article from Discord."}},"/it-drugs/update":{"title":"it-drugs - Update","data":{"v124-to-v13x#v.1.2.4 to v.1.3.x":"If you have already added custom items to the script, it is worth making a backup of these and adapting them to the new version later.","stop-your-server#Stop your server":"","delete-files#Delete Files":"Delete all it-drugs files and inventory items from your server.","execute-sql-statement#Execute SQL Statement":"-- Delete the drug_plants table\nDROP TABLE IF EXISTS drug_plants;\n-- Delete the drug_processing table\nDROP TABLE IF EXISTS drug_processing;","follow-the-install-guide#Follow the install guide":"","v13betax-to-130#v1.3.betaX to 1.3.0":"","stop-your-server-1#Stop your server":"","replace-files#Replace files":"Replace all files on your server except for config.lua with the new script files. If you have not edited the config.lua you can also replace this file\nAlso make sure to reimport the items from the script to your inventory. You can find the items here:\nhttps://docs.it-scripts.com/it-drugs/installation#items-for-it-drugs","check-configlua-changes#Check Config.lua changes":"When comparing, please make sure that the two correct versions are selected: \nLeft: Your version \nRight: The version you want to update toThen simply search with config.lua and adapt your config file to the latest one"}},"/it_bridge":{"title":"it-crafting","data":{"":"Bridge resource that makes it possible for all future it-scripts to be compatible with the following frameworks, inventories, etc:","supported-frameworks#Supported Frameworks":"‚úÖ | ESX\n‚úÖ | QbCore\n‚úÖ | QBox\n‚úÖ | NDCore","supported-inventorys#Supported Inventorys":"‚úÖ | esx_inventory\n‚úÖ | qb_inventory\n‚úÖ | ps-inventory\n‚úÖ | qs_inventory\n‚úÖ | ox_inventory\n‚úÖ | codem-inventory\n‚úÖ | origen-inventory","supported-interactions#Supported Interactions":"‚úÖ | ox_target\n‚úÖ | qb-target\n‚úÖ | distance interaction (press [E])","supported-notifications#Supported Notifications":"‚úÖ | brutal_notify\n‚úÖ | ox_lib\n‚úÖ | esx_notify\n‚úÖ | qb-core\n‚úÖ | es_extended\n‚úÖ | mythic_notify\n‚úÖ | okokNotify","supported-textuis#Supported TextUIs":"‚úÖ | ox_lib\n‚úÖ | qb-core\n‚úÖ | esx_textui","supported-menus#Supported Menus":"‚úÖ | esx_context\n‚úÖ | ox_lib - context\n‚úÖ | qb-menu","supported-menus-1#Supported Menus":"‚úÖ | qs-dispatch\n‚úÖ | ps-dispatch\n‚úÖ | cd_disaptch\n‚úÖ | codem_dispatch\n‚úÖ | emergency_dispatch\n‚úÖ | origen_police\nLegal Notices\nit_bridge (it-scripts)Copyright (C) 2024 it-scriptsThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.You should have received a copy of the GNU General Public License\nalong with this program.\nIf not, see https://www.gnu.org/licenses/"}},"/it_bridge/config-preview":{"title":"it-crafting - Config Preview","data":{"":"Here you can find the full configuration of the it_bridge script.\n-- ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n-- ‚îÇ ___ _____   _          _     _            ‚îÇ\n-- ‚îÇ|_ _|_   _| | |__  _ __(_) __| | __ _  ___ ‚îÇ\n-- ‚îÇ | |  | |   | '_ \\| '__| |/ _` |/ _` |/ _ \\‚îÇ\n-- ‚îÇ | |  | |   | |_) | |  | | (_| | (_| |  __/‚îÇ\n-- ‚îÇ|___| |_|___|_.__/|_|  |_|\\__,_|\\__, |\\___|‚îÇ\n-- ‚îÇ       |_____|                  |___/      ‚îÇ\n-- ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n-- Configuration file for the bridge resource\nConfig = Config or {}\n--[[\n    Supported frameworks:\n        * AUTO_DETECT: auto-detect framework\n        * Framework.ESX: es_extended, https://github.com/esx-framework/esx_core\n        * Framework.QBCore: qb-core, https://github.com/qbcore-framework/qb-core\n        * Framework.QBOX: qbx_core, https://github.com/Qbox-project/qbx_core\n        * Framework.NDCore: ND_Core, https://github.com/ND-Framework/ND_Core\n]]\nConfig.Framework = AUTO_DETECT\nConfig.FrameworkAdminGroups = {\n    [Framework.ESX] = { 'superadmin', 'admin' },\n    [Framework.QBCore] = { 'god', 'admin' },\n    [Framework.QBOX] = { 'god', 'admin' },\n}\n--[[\n    Supported inventories:\n        * AUTO_DETECT: auto-detect inventory [Only detecting supported inventories below]\n        * Inventories.ESX: es_extended, https://github.com/esx-framework/esx_core\n        * Inventories.QB: qb-inventory, https://github.com/qbcore-framework/qb-inventory\n        * Inventories.PS: ps-inventory, https://github.com/Project-Sloth/ps-inventory\n        * Inventories.QS: qs-inventory,\n        * Inventories.OX: ox_inventory,\n        * Inventories.CODEM: codem-inventory\n        * Inventories.ORIGEN: origen-inventory\n]]\nConfig.Inventories = AUTO_DETECT\nConfig.InventoryImgPath = {\n    [Inventories.QB]   = \"qb-inventory/html/images/\",\n    [Inventories.PS]   = \"ps-inventory/html/images/\",\n    [Inventories.QS]   = \"qs-inventory/html/images/\",\n    [Inventories.OX]   = \"ox_inventory/web/images/\",\n    [Inventories.CODEM] = \"codem-inventory/html/images/\",\n    [Inventories.ORIGEN] = \"origen-inventory/html/images/\",\n}\n--[[\n    Supported interactions:\n        * AUTO_DETECT: auto-detect interactions [Only detecting supported interactions below]\n        * Interactions.OX: ox_target,\n        * Interactions.QB: qb-target,\n        * Interactions.MV, ps-inventory,\n        * Interactions.NONE, distance interaction - press [E]\n]]\nConfig.Interactions = AUTO_DETECT\n--[[\n    Supported phone resources:\n        * AUTO_DETECT: auto-detect phone resource\n        * Phones.LB: lb_phone,\n]]\nConfig.Phones = AUTO_DETECT\n--[[\n    Supported Notify resources:\n        * AUTO_DETECT: auto-detect Notify resource\n        * Notifications.BRUTAL: brutal_notify,\n        * Notifications.OX: ox_lib,\n        * Notifications.ESX_NOTIFY: esx_notify,\n        * Notifications.QBCORE: qb-core,\n        * Notifications.ESX: es_extended,\n        * Notifications.MYTHIC: mythic_notify,\n        * Notifications.OKOK: okokNotify,\n]]\nConfig.Notifications = AUTO_DETECT\nConfig.NotificationsSettings = {\n    Success = 'success',\n    Info = 'primary',\n    Warning = 'warning',\n    Error = 'error',\n}\n--[[\n    Supported TextUI resources:\n        * AUTO_DETECT: auto-detect TextUI resource\n        * TextUI.OX: ox_lib,\n        * TextUI.QBCORE: qb-core,\n        * TextUI.ESX: esx_textui,\n        * STANDALONE: no TextUI resource found.\n]]\n    \nConfig.TextUI = AUTO_DETECT\n--[[\n    Supported Menu:\n        * AUTO_DETECT: auto-detect menu\n        * Menus.ESX_CONTEXT: esx_context,\n        * Menus.OX: ox_lib - context,\n        * Menus.QB: qb-menu,\n]]\nConfig.Menus = AUTO_DETECT\n--[[\n    Supported dispatches:\n        * AUTO_DETECT: auto-detect dispatch resources\n        * Dispatches.QS, qs-dispatch\n        * Dispatches.PS, ps-dispatch\n        * Dispatches.CD, cd_disaptch\n        * Dispatches.CODEM, codem_dispatch\n        * Dispatches.LOVE_SCRIPTS, emergency_dispatch\n        * Dispatches.ORIGEN, origen_police\n]]\nConfig.Dispatches = AUTO_DETECT"}},"/it_bridge/exports/disptach/client":{"title":"it_bridge | Client Exports - Disptach","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.\nDue to the fact that there are so many disptach system avaliable for Fivem, I've only added the most used systems to the bridge by default.\nYou can add your own dispatch system to the bridge by editing the disptach/server.lua and disptach/client.lua file.","disptach-data#Disptach Data":"{\n    job = 'police', -- The job that should receive the disptach.\n    jobs = {'police', 'ambulance'}, -- The jobs that should receive the disptach.\n    title = 'Robbery', -- The disptach title.\n    message = 'A robbery has been reported at the bank.', -- The disptach description.\n    coords = {x = 0.0, y = 0.0, z = 0.0}, -- The disptach location.\n    callCode = {\n        code = '10-31', -- The disptach code.\n        snippet = '10-31' -- The disptach priority.\n    },\n    flashes = true, -- If the disptach should flash on the map.\n    image = 'https://i.imgur.com/0J2QX1E.png', -- The disptach image.\n    blip = {\n        sprite = 1, -- The disptach blip sprite.\n        colour = 1, -- The disptach blip color.\n        scale = 1.0, -- The disptach blip scale.\n        text = 'Robbery', -- The disptach blip label.\n        time = 30000 -- The disptach blip time.\n        flashes = true -- If the disptach blip should flash.\n    }\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","senddisptach#SendDisptach":"exports.it_bridge:SendDispatch(disptachData)\ndisptachData: table: The disptach data.\nSends a disptach with the specified data."}},"/it_bridge/exports/disptach/server":{"title":"it_bridge | Server Exports - Dispatch","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.\nDue to the fact that there are so many disptach system avaliable for Fivem, I've only added the most used systems to the bridge by default.\nYou can add your own dispatch system to the bridge by editing the disptach/server.lua and disptach/client.lua file.","disptach-data#Disptach Data":"{\n    job = 'police', -- The job that should receive the disptach.\n    jobs = {'police', 'ambulance'}, -- The jobs that should receive the disptach.\n    title = 'Robbery', -- The disptach title.\n    message = 'A robbery has been reported at the bank.', -- The disptach description.\n    coords = {x = 0.0, y = 0.0, z = 0.0}, -- The disptach location.\n    callCode = {\n        code = '10-31', -- The disptach code.\n        snippet = '10-31' -- The disptach priority.\n    },\n    flashes = true, -- If the disptach should flash on the map.\n    image = 'https://i.imgur.com/0J2QX1E.png', -- The disptach image.\n    blip = {\n        sprite = 1, -- The disptach blip sprite.\n        colour = 1, -- The disptach blip color.\n        scale = 1.0, -- The disptach blip scale.\n        text = 'Robbery', -- The disptach blip label.\n        time = 30000 -- The disptach blip time.\n        flashes = true -- If the disptach blip should flash.\n    }\n}\nIf you want your script to work with all Disptach systems that are integrated in it-brige please make sure that you enter all these data","senddisptach#SendDisptach":"exports.it_bridge:SendDispatch(disptachData)\ndisptachData: table: The disptach data.\nSends a disptach with the specified data."}},"/it_bridge/exports/framework/client":{"title":"Client","data":{"":"Currently there are no client exports available for the framework. If you want to use the framework exports please use the server exports."}},"/it_bridge/exports/framework/server":{"title":"it_bridge | Server Exports - Framework","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","getplayer#GetPlayer":"exports.it_bridge:GetPlayer(source)\nsource: number: The player's server ID.\nReturns the framework player object from the source.\nYou can execute any framework player function using this object.","getplayerbycitizenid#GetPlayerByCitizenId":"exports.it_bridge:GetPlayerByCitizenId(citizenId)\ncitizenId: string: The player's citizen ID.\nReturns the framework player object from the citizen ID.\nYou can execute any framework player function using this object.","getplayers#GetPlayers":"exports.it_bridge:GetPlayers()\nReturns a table containing all the players on the server.","example#Example":"local players = exports.it_bridge:GetPlayers()\nfor _, player in ipairs(players) do\n    print(player.source)\nend","getplayername#GetPlayerName":"exports.it_bridge:GetPlayerName(player)\nplayer: object: The player object.\nReturns the the player's ingame name.","example-1#Example":"local player = exports.it_bridge:GetPlayer(source)\nlocal playerName = exports.it_bridge:GetPlayerName(player)\nprint(playerName)","getplayercitizenid#GetPlayerCitizenId":"exports.it_bridge:GetPlayerCitizenId(player)\nplayer: object: The player object.\nReturns the the player's citizen ID. For every framework, the citizen ID is unique.","example-2#Example":"local player = exports.it_bridge:GetPlayer(source)\nlocal citizenId = exports.it_bridge:GetPlayerCitizenId(player)\nprint(citizenId)","getplayerjob#GetPlayerJob":"exports.it_bridge:GetPlayerJob(player)\nplayer: object: The player object.\nReturns table containing the player's job information.\n{\n    grade: 0, -- number\n    grade_label: \"Unemployed\", -- string\n    grade_salary: 0, -- number\n    isBoss: false, -- boolean\n    label: \"Unemployed\", -- string\n    name: \"unemployed\", -- string\n    onDuty: true, -- boolean\n}","example-3#Example":"local player = exports.it_bridge:GetPlayer(source)\nlocal job = exports.it_bridge:GetPlayerJob(player)\nprint(job.label) -- Unemployed","getmoney#GetMoney":"exports.it_bridge:GetMoney(source, moneyType)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\nReturns the player's money amount.","example-4#Example":"local cash = exports.it_bridge:GetMoney(source, 'cash')\nprint(cash)","addmoney#AddMoney":"exports.it_bridge:AddMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to add.\nreason: string | nil: The reason for adding money.\nAdds money to the player's account. Will return true if the money was added successfully.","example-5#Example":"local success = exports.it_bridge:AddMoney(source, 'cash', 1000, 'Reward')\nprint(success)","removemoney#RemoveMoney":"exports.it_bridge:RemoveMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to remove.\nreason: string | nil: The reason for removing money.\nRemoves money from the player's account. Will return true if the money was removed successfully.","example-6#Example":"local success = exports.it_bridge:RemoveMoney(source, 'cash', 1000, 'Fine')\nprint(success)","setmoney#SetMoney":"exports.it_bridge:SetMoney(source, moneyType, amount, reason)\nsource: number: The player's server ID.\nmoneyType: string: The money type. (cash, bank, black_money)\namount: number: The amount to set.\nreason: string | nil: The reason for setting money.\nSets the player's money amount. Will return true if the money was set successfully.","example-7#Example":"local success = exports.it_bridge:SetMoney(source, 'cash', 1000, 'Set')\nprint(success)"}},"/it_bridge/exports/interaction/client":{"title":"Client","data":{"":"Currently not available."}},"/it_bridge/exports/interaction/server":{"title":"Server","data":{"":"Currently not available."}},"/it_bridge/exports/inventory/client":{"title":"it_bridge | Client Exports - Inventory","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.\nI do not recommend using these exports on the client-side. Most of the time these exports just trigger a callback with the server exports.\nYou make your script more vulnerable if you are using these exports.\nThey are intended for server-side use only.","cancarryitem#CanCarryItem":"exports.it_bridge:CanCarryItem(item, amount)\nitem: string: The item name.\ncount: number: The amount of items.\nChecks if the player can carry the specified amount of items. Returns true if the player can carry the items, false otherwise.","example#Example":"local canCarry = exports.it_bridge:CanCarryItem('paper', 10)\nprint(canCarry)","getitemcount#GetItemCount":"exports.it_bridge:GetItemCount(item, metadata)\nitem: string: The item name.\nmetadata?: table | nil (optional): The item metadata.\nReturns the amount of the specified item the player has in their inventory.","example-1#Example":"local itemCount = exports.it_bridge:GetItemCount('paper')\nprint(itemCount)","hasitem#HasItem":"exports.it_bridge:HasItem(item, amount, metadata)\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nChecks if the player has the specified amount of items. Returns true if the player has the items, false otherwise.","example-2#Example":"local hasItem = exports.it_bridge:HasItem('paper', 10)\nprint(hasItem)","giveitem#GiveItem":"exports.it_bridge:GiveItem(item, amount, metadata)\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nGives the player the specified amount of items. Returns true if the items were successfully given, false otherwise.\nThis function will not check if the player can carry the items. Make sure to use the CanCarryItem function before giving items if you want this check.","example-3#Example":"local success = exports.it_bridge:GiveItem('paper', 10)\nprint(success)","removeitem#RemoveItem":"exports.it_bridge:RemoveItem(item, amount, metadata)\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nemoves the specified amount of items from the player's inventory. Returns true if the items were successfully removed, false otherwise.","example-4#Example":"local removed = exports.it_bridge:RemoveItem('paper', 10)\nprint(removed)","getitemlabel#GetItemLabel":"exports.it_bridge:GetItemLabel(item)\nitem: string: The item name.\nReturns the label of the specified item.","example-5#Example":"local label = exports.it_bridge:GetItemLabel('paper')\nprint(label)"}},"/it_bridge/exports/inventory/server":{"title":"it_bridge | Server Exports - Inventory","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","cancarryitem#CanCarryItem":"exports.it_bridge:CanCarryItem(source, item, amount)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nChecks if the player can carry the specified amount of items. Returns true if the player can carry the items, false otherwise.\nIf the server uses codem_inventory the function will allways return true.","example#Example":"local canCarry = exports.it_bridge:CanCarryItem(source, 'paper', 10)\nprint(canCarry)","getitemcount#GetItemCount":"exports.it_bridge:GetItemCount(source, item, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\nmetadata?: table | nil (optional): The item metadata.\nReturns the amount of the specified item the player has in their inventory.","example-1#Example":"local itemCount = exports.it_bridge:GetItemCount(source, 'paper')\nprint(itemCount)","hasitem#HasItem":"exports.it_bridge:HasItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nChecks if the player has the specified amount of items. Returns true if the player has the items, false otherwise.","example-2#Example":"local hasItem = exports.it_bridge:HasItem(source, 'paper', 10)\nprint(hasItem)","giveitem#GiveItem":"exports.it_bridge:GiveItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nGives the player the specified amount of items. Returns true if the items were successfully given, false otherwise.\nThis function will not check if the player can carry the items. Make sure to use the CanCarryItem function before giving items if you want this check.","example-3#Example":"local success = exports.it_bridge:GiveItem(source, 'paper', 10)\nprint(success)","removeitem#RemoveItem":"exports.it_bridge:RemoveItem(source, item, amount, metadata)\nsource: number: The player's server ID.\nitem: string: The item name.\ncount: number: The amount of items.\nmetadata?: table | nil (optional): The item metadata.\nRemoves the specified amount of items from the player's inventory. Returns true if the items were successfully removed, false otherwise.","example-4#Example":"local success = exports.it_bridge:RemoveItem(source, 'paper', 10)\nprint(success)","getitemlabel#GetItemLabel":"exports.it_bridge:GetItemLabel(item)\nitem: string: The item name.\nReturns the label of the specified item. Wil return the given value and an error if the item does not exist.","example-5#Example":"local label = exports.it_bridge:GetItemLabel('paper')\nprint(label)","createusableitem#CreateUsableItem":"exports.it_bridge:CreateUsableItem(item, cb)\nitem: string: The item name.\ncb: function: The function to call when the item is used.\nCreates a usable item that can be used by players. The function will be called when the item is used.","example-6#Example":"exports.it_bridge:CreateUsableItem('paper', function(source)\n  print('Paper was used by player ' .. source)\nend)"}},"/it_bridge/exports/menus/client":{"title":"Client","data":{"":"Currently not available."}},"/it_bridge/exports/menus/server":{"title":"Server","data":{"":"Currently not available."}},"/it_bridge/exports/notification/server":{"title":"it_bridge | Server Exports - Notification","data":{"":"These exports can only be used on the server-side. Make sure to use them in your server-side script files.","sendnotification#SendNotification":"exports.it_bridge:SendNotification(source, title, message, time, type, sound)\nsource: number: The player's server ID.\ntitle: string: The notification title.\nmessage: string: The notification message.\ntime: number: The notification display time in milliseconds.\ntype: string: The notification type. Can be Success, Info, Warning, or Error.\nsound: boolean: If the notification should play a sound.\nSends a notification with the specified data.","example#Example":"exports.it_bridge:SendNotification(source, 'Title', 'Message', 5000, 'Info', true)"}},"/it_bridge/exports/textui/client":{"title":"Client","data":{"":"Currently not available."}},"/it_bridge/exports/notification/client":{"title":"it_bridge | Client Exports - Notification","data":{"":"These exports can only be used on the client-side. Make sure to use them in your client-side script files.","sendnotification#SendNotification":"exports.it_bridge:SendNotification(title. message, time, type, sound)\ntitle: string: The notification title.\nmessage: string: The notification message.\ntime: number: The notification display time in milliseconds.\ntype: string: The notification type. Can be Success, Info, Warning, or Error.\nsound: boolean: If the notification should play a sound.\nSends a notification with the specified data.","example#Example":"exports.it_bridge:SendNotification('Title', 'Message', 5000, 'Info', true)"}},"/it_bridge/exports/textui/server":{"title":"Server","data":{"":"Currently not available."}},"/it_bridge/installation":{"title":"it-crafting - Installation","data":{"":"Welcome to the it_bridge installation guide, here you can learn how to completely install our asset,\nfollowing each step we will achieve a clean and fluid installation where you will not find any problems,\nas long as the documentation has been completed in full.\nIf you do not have programming experience, we recommend that you read each step completely without skipping any lines, since all documentation is important and should not be ignored under any circumstances.\nIf you have a trusted developer, you can install this quickly, easily and safely if you complete this documentation step by step.\nIf at the end of this documentation you still have any problems, review each step again, after having checked that everything is correct,\nyou can obtain more information about common errors in the Common Problems section within this same documentation to seek help independently.\nWhen installing the script make sure to not rename the script folder, this can cause errors in the script. The name of the script folder should always be it-crafting.","asset-download#Asset download":"You can get the lates version of the it_bridge script fo free on our tebex store\nIf you have downloaded the script from another site, there is no guarantee that the script will actually work. Please download it again from the it-scripts tebex page.\nIf you have paid money for this script, it is a SCAM. The it_bridge script is and will always remain free. Please report the page to us on the Discord server.","asset-dependencies#Asset dependencies":"Dependencies\tLinks\tox_lib\thttps://github.com/overextended/ox_lib/releases","asset-positioning#Asset positioning":"Correctly position the assets by following this step, if something goes wrong you will probably get errors about exports not found, do not skip this step.\nFor the execution of this asset, we will respect the respective order mentioned below.\n-- First we will start the Database\nensure oxmysql\n-- Then we will start the cores, never below\nensure es_extended or qb-core\n-- Your inventory system, always on top\nensure inventory\n--Then we start all the dependencies\nensure ox_lib\n-- Then you need to start all system you selected in the config file\n-- Now you can start the it_bridge script\nensure it_bridge\n-- After that you can start any other it script you want to use"}}}